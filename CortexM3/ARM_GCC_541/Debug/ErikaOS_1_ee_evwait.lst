ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_evwait.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_WaitEvent,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_WaitEvent
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_WaitEvent, %function
  25              	EE_oo_WaitEvent:
  26              	.LFB139:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_evwait.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * CVS: $Id: ee_evwait.c,v 1.3 2006/05/03 05:59:55 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  55:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #include "trcKernelPort.h"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif
  57:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  58:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /* WaitEvent:
  59:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - can be called from an extended task only
  60:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - the task state is put to wait until an event in the mask has been set
  61:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - if the task blocks -> reschedulig + internal resource released
  62:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - returns (only extended state)
  63:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        E_OS_RESOURCE task occupies a resource
  64:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        E_OS_ACCESS   if the task is not an extended task
  65:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        E_OS_CALLEVEL called at interrupt level
  66:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** */
  67:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  68:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifndef __PRIVATE_WAITEVENT__
  70:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  71:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** StatusType EE_oo_WaitEvent(EventMaskType Mask)
  72:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** {
  28              		.loc 1 72 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 0546     		mov	r5, r0
  42              	.LBB90:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 3


  43              	.LBB91:
  44              	.LBB92:
  45              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 4


  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 5


 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 6


 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 7


 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  46              		.loc 2 260 0
  47              		.syntax unified
  48              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  49 0004 EFF31086 		mrs r6, primask
  50              	@ 0 "" 2
  51              	.LVL1:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  52              		.loc 2 261 0
  53              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  54 0008 72B6     		cpsid i
  55              	@ 0 "" 2
  56              	.LVL2:
  57              		.thumb
  58              		.syntax unified
  59              	.LBE92:
  60              	.LBE91:
  61              	.LBE90:
  62              	.LBB93:
  63              	.LBB94:
  64              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 8


   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 9


  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 10


 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 11


 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 12


 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  65              		.loc 3 240 0
  66 000a 414B     		ldr	r3, .L14
  67 000c 1C68     		ldr	r4, [r3]
  68              	.LBE94:
  69              	.LBE93:
  73:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   register TaskType current;
  74:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Error Value */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   register StatusType ev;
  76:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Primitive Lock Procedure */
  77:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  78:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  79:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_WAITEVENT);
  80:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_as_monitoring_the_stack();
  82:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  83:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   current = EE_stk_queryfirst();
  84:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  85:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  86:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     traceTASK_WAIT_EVENT(current, Mask)
  70              		.loc 1 86 0
  71 000e 0246     		mov	r2, r0
  72 0010 611C     		adds	r1, r4, #1
  73 0012 CD20     		movs	r0, #205
  74              	.LVL3:
  75 0014 FFF7FEFF 		bl	prvTraceStoreEvent2
  76              	.LVL4:
  77              	.LBB95:
  78              	.LBB96:
  79              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 13


  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 14


  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  80              		.loc 4 79 0
  81 0018 3E4B     		ldr	r3, .L14+4
  82 001a 1B68     		ldr	r3, [r3]
  83              	.LBE96:
  84              	.LBE95:
  87:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif
  88:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  89:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifdef EE_SERVICE_PROTECTION__
  90:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
  91:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  92:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       then the Operating System shall ignore the service AND shall return
  93:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  94:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
  95:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       AND is currently not inside a Category 1 ISR the Operating System module
  96:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       shall not perform the requested action (the service call shall have no
  97:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
  98:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
  99:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_oo_check_disableint_error() ) {
 100:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_DISABLEDINT;
 101:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 102:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_SERVICE_PROTECTION__ */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 104:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
 105:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check for a call at interrupt level:
 106:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    * Note: this must be the FIRST error check!!! */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U) || (current == EE_NIL)
  85              		.loc 1 107 0
  86 001c 002B     		cmp	r3, #0
  87 001e 6AD1     		bne	.L8
  88              		.loc 1 107 0 is_stmt 0 discriminator 1
  89 0020 B4F1FF3F 		cmp	r4, #-1
  90 0024 69D0     		beq	.L9
 108:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if !defined (EE_SERVICE_PROTECTION__)
 109:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 110:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 	 * check is always FALSE, hence it is not needed  */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #else
 112:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 113:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif
 114:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_CALLEVEL;
 116:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 117:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_SERVICE_PROTECTION__ */
 118:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 119:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifdef __OO_EXTENDED_STATUS__
 120:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifndef __OO_NO_RESOURCES__
 121:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check for busy resources */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_th_resource_last[current] != EE_UREG_MINUS1 )
  91              		.loc 1 122 0 is_stmt 1
  92 0026 3C4B     		ldr	r3, .L14+8
  93 0028 53F82430 		ldr	r3, [r3, r4, lsl #2]
  94 002c B3F1FF3F 		cmp	r3, #-1
  95 0030 65D1     		bne	.L10
 123:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   {
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 15


 124:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_RESOURCE;
 125:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 126:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* __OO_NO_RESOURCES__ */
 127:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check if the task is an extended TASK */
 128:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_th_is_extended[current] == EE_FALSE ) {
  96              		.loc 1 128 0
  97 0032 3A4B     		ldr	r3, .L14+12
  98 0034 53F82430 		ldr	r3, [r3, r4, lsl #2]
  99 0038 002B     		cmp	r3, #0
 100 003a 62D0     		beq	.L11
 129:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_ACCESS;
 130:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 131:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifdef EE_AS_USER_SPINLOCKS__
 132:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* [OS622]: The AUTOSAR Operating System WaitEvent API service shall check if
 133:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       it has been called while the calling TASK has occupied a spinlock.
 134:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       In extended status an error E_OS_SPINLOCK shall be returned and the TASK
 135:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       shall not enter the wait state. (BSW4080021) */
 136:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_as_has_spinlocks_locked(current) ) {
 137:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_SPINLOCK;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 139:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 140:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* __OO_EXTENDED_STATUS__ */
 141:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 142:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 143:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 144:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 145:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* If a TASK is inside CallTrustedFunction() and TASK
 146:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      rescheduling takes place within the same OSApplication scheduling of
 147:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      other TASKs which belong to the same OS-Application as the caller needs
 148:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      to be restricted.
 149:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      EG:To assure that I CANNOT let WAIT take place in a
 150:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****         Trusted Function Call!!! */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_as_Application_RAM[EE_as_active_app].
 152:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****         TrustedFunctionCallsCounter != 0U )
 153:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   {
 154:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_ACCESS;
 155:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 156:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 158:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check if we have to wait */
 159:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( (EE_th_event_active[current] & Mask) == 0U ) {
 101              		.loc 1 159 0
 102 003c 384B     		ldr	r3, .L14+16
 103 003e 53F82430 		ldr	r3, [r3, r4, lsl #2]
 104 0042 1D42     		tst	r5, r3
 105 0044 5FD1     		bne	.L12
 160:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Set the waiting mask */
 161:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_th_event_waitmask[current] = Mask;
 106              		.loc 1 161 0
 107 0046 374B     		ldr	r3, .L14+20
 108 0048 43F82450 		str	r5, [r3, r4, lsl #2]
 109              	.LBB97:
 110              	.LBB98:
 111              	.LBB99:
 112              	.LBB100:
 113              		.loc 3 240 0
 114 004c 3049     		ldr	r1, .L14
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 16


 115 004e 0B68     		ldr	r3, [r1]
 116              	.LBE100:
 117              	.LBE99:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 17


 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 18


 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 19


 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 20


 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 21


 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 22


 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 23


 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 688:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)        
 689:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         traceTASK_SWITCHED_IN(rq, EE_th_ready_prio[rq]);
 690:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 691:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_ORTI_set_th_eq_dispatch_prio(rq);
 692:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 693:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* "Press TP start for the first time" for this new activation/release of
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 24


 694:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****             the TASK */
 695:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_as_tp_active_start_on_TASK_stacking(rq);
 696:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 697:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Execute context SWITCH, this method return when we have a switch
 698:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****            back on the previous TASK contest. */
 699:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_run_next_task();
 700:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       }
 701:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 702:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 703:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 704:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 705:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ( (defined(__OO_ECC1__)) || (defined(__OO_ECC2__)) ) && (defined(__MULTI__))
 706:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 707:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Prepare current Task to Block if Extended Task is configured */
 708:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_prepare_to_block(void) {
 709:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Get the current TASK */
 710:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current = EE_stk_queryfirst();
 711:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 712:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* The task must go into the WAITING state */
 713:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_th_status[current] = WAITING;
 118              		.loc 3 713 0
 119 0050 0120     		movs	r0, #1
 120 0052 354A     		ldr	r2, .L14+24
 121 0054 42F82300 		str	r0, [r2, r3, lsl #2]
 714:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 715:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00473]: The Operating System module shall reset a task's
 716:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OsTaskExecutionBudget on a transition to the SUSPENDED or WAITING states.
 717:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (SRS_Os_11008) */
 718:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_stop_budget(EE_as_tp_active.active_tp_RAM_ref, EE_EXECUTION_BUDGET);
 719:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 720:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Call the Post Task Hook before change stk data structure */
 721:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_call_PostTaskHook();
 722:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 723:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reset the thread priority bit in the system_ceiling */
 724:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= ~EE_th_dispatch_prio[current];
 122              		.loc 3 724 0
 123 0058 344A     		ldr	r2, .L14+28
 124 005a 52F82370 		ldr	r7, [r2, r3, lsl #2]
 125 005e 344D     		ldr	r5, .L14+32
 126              	.LVL5:
 127 0060 2A68     		ldr	r2, [r5]
 128 0062 22EA0702 		bic	r2, r2, r7
 129 0066 2A60     		str	r2, [r5]
 725:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* The ready priority is not touched, it is not the same as Schedule! */
 726:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 727:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reset ORTI priority */
 728:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_th_priority(current, 0U);
 729:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 730:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Since the task blocks, it has to be woken up by another EE_hal_stkchange */
 731:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_th_waswaiting[current] = EE_TRUE;
 130              		.loc 3 731 0
 131 0068 324A     		ldr	r2, .L14+36
 132 006a 42F82300 		str	r0, [r2, r3, lsl #2]
 133              	.LBB101:
 134              	.LBB102:
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 135              		.loc 3 469 0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 25


 136 006e 324A     		ldr	r2, .L14+40
 137 0070 52F82330 		ldr	r3, [r2, r3, lsl #2]
 138 0074 0B60     		str	r3, [r1]
 139              	.LBE102:
 140              	.LBE101:
 141              	.LBE98:
 142              	.LBE97:
 143              	.LBB103:
 144              	.LBB104:
 732:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 733:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Extract the TASK from the stacked queue */
 734:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (void)EE_stk_getfirst();
 735:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 736:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 737:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Reschedule on task blocking if Extended Task is configured */
 738:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reschedule_on_block(void)
 739:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 740:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID nexttask;
 741:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 742:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   nexttask = EE_rq_queryfirst();
 145              		.loc 3 742 0
 146 0076 FFF7FEFF 		bl	EE_rq_queryfirst
 147              	.LVL6:
 743:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( (nexttask == EE_NIL) || (EE_sys_ceiling >= EE_th_ready_prio[nexttask]) ) {
 148              		.loc 3 743 0
 149 007a B0F1FF3F 		cmp	r0, #-1
 150 007e 05D0     		beq	.L3
 151 0080 2E4B     		ldr	r3, .L14+44
 152 0082 53F82020 		ldr	r2, [r3, r0, lsl #2]
 153 0086 2B68     		ldr	r3, [r5]
 154 0088 9A42     		cmp	r2, r3
 155 008a 14D8     		bhi	.L4
 156              	.L3:
 157              	.LBB105:
 158              	.LBB106:
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 159              		.loc 3 240 0
 160 008c 204B     		ldr	r3, .L14
 161 008e 1D68     		ldr	r5, [r3]
 162              	.LVL7:
 163              	.LBE106:
 164              	.LBE105:
 744:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* we have to schedule an interrupted thread that is on the top
 745:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      * of its stack; the state is already STACKED! */
 746:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     nexttask = EE_stk_queryfirst();
 747:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( nexttask != EE_NIL ) {
 165              		.loc 3 747 0
 166 0090 B5F1FF3F 		cmp	r5, #-1
 167 0094 0AD0     		beq	.L5
 168              	.LBB107:
 748:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_status[nexttask] = RUNNING;
 169              		.loc 3 748 0
 170 0096 0022     		movs	r2, #0
 171 0098 234B     		ldr	r3, .L14+24
 172 009a 43F82520 		str	r2, [r3, r5, lsl #2]
 749:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 750:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       traceTASK_SWITCHED_IN(nexttask, EE_th_ready_prio[nexttask]);
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 26


 173              		.loc 3 750 0
 174 009e 274B     		ldr	r3, .L14+44
 175 00a0 53F82520 		ldr	r2, [r3, r5, lsl #2]
 176 00a4 691C     		adds	r1, r5, #1
 177 00a6 3720     		movs	r0, #55
 178 00a8 FFF7FEFF 		bl	prvTraceStoreEvent2
 179              	.LVL8:
 180              	.L5:
 181              	.LBE107:
 182              	.LBB108:
 183              	.LBB109:
 184              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 27


  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 28


 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 185              		.loc 5 154 0
 186 00ac 45F00040 		orr	r0, r5, #-2147483648
 187 00b0 FFF7FEFF 		bl	EE_cortex_mx_change_context
 188              	.LVL9:
 189 00b4 1AE0     		b	.L6
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 29


 190              	.LVL10:
 191              	.L4:
 192              	.LBE109:
 193              	.LBE108:
 751:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 752:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 753:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Enable the TASK Timing Protection Set */
 754:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_as_tp_active_set_from_TASK(nexttask);
 755:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 756:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We are switching back to the Idle loop */
 757:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_as_set_execution_context( Idle_Context );
 758:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_as_tp_active_start_idle();
 759:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 760:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 761:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* CONTEXT SWITCH to a previous stacked Task */
 762:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_stkchange(nexttask);
 763:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else { 
 764:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* We have to schedule a ready thread that is not yet on the stack.
 765:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        This means that the TASK set in excution for the first time or that it
 766:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        was waiting. */
 767:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[nexttask] = RUNNING;
 194              		.loc 3 767 0
 195 00b6 0021     		movs	r1, #0
 196 00b8 1B4A     		ldr	r2, .L14+24
 197 00ba 42F82010 		str	r1, [r2, r0, lsl #2]
 768:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_sys_ceiling |= EE_th_dispatch_prio[nexttask];
 198              		.loc 3 768 0
 199 00be 1B4A     		ldr	r2, .L14+28
 200 00c0 52F82020 		ldr	r2, [r2, r0, lsl #2]
 201 00c4 1343     		orrs	r3, r3, r2
 202 00c6 1A4A     		ldr	r2, .L14+32
 203 00c8 1360     		str	r3, [r2]
 204              	.LBB110:
 205              	.LBB111:
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 206              		.loc 3 566 0
 207 00ca FFF7FEFF 		bl	EE_rq2stk_exchange
 208              	.LVL11:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 209              		.loc 3 567 0
 210 00ce 194B     		ldr	r3, .L14+36
 211 00d0 53F82030 		ldr	r3, [r3, r0, lsl #2]
 212 00d4 43B1     		cbz	r3, .L7
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 213              		.loc 3 569 0
 214 00d6 0022     		movs	r2, #0
 215 00d8 164B     		ldr	r3, .L14+36
 216 00da 43F82020 		str	r2, [r3, r0, lsl #2]
 217              	.LVL12:
 218              	.LBB112:
 219              	.LBB113:
 220              		.loc 5 154 0
 221 00de 40F00040 		orr	r0, r0, #-2147483648
 222              	.LVL13:
 223 00e2 FFF7FEFF 		bl	EE_cortex_mx_change_context
 224              	.LVL14:
 225 00e6 01E0     		b	.L6
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 30


 226              	.LVL15:
 227              	.L7:
 228              	.LBE113:
 229              	.LBE112:
 230              	.LBB114:
 231              	.LBB115:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 232              		.loc 5 167 0
 233 00e8 FFF7FEFF 		bl	EE_cortex_mx_change_context
 234              	.LVL16:
 235              	.L6:
 236              	.LBE115:
 237              	.LBE114:
 238              	.LBE111:
 239              	.LBE110:
 240              	.LBE104:
 241              	.LBE103:
 162:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 163:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Prepare current TASK to block */
 164:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_oo_prepare_to_block();
 165:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 166:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* The TASK is not inserted in any queue! it will be woken
 167:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        up by a SetEvent using a EE_hal_stkchange... */
 168:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 169:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Reschedule next TASK:
 170:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      * check if there is to schedule a ready thread or pop a preempted
 171:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      * thread */
 172:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_oo_reschedule_on_block();
 173:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 174:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Reset the waiting mask */
 175:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_th_event_waitmask[current] = 0U;
 242              		.loc 1 175 0
 243 00ec 0020     		movs	r0, #0
 244 00ee 0D4B     		ldr	r3, .L14+20
 245 00f0 43F82400 		str	r0, [r3, r4, lsl #2]
 246              	.LVL17:
 247 00f4 08E0     		b	.L2
 248              	.LVL18:
 249              	.L8:
 115:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 250              		.loc 1 115 0
 251 00f6 0220     		movs	r0, #2
 252 00f8 06E0     		b	.L2
 253              	.L9:
 254 00fa 0220     		movs	r0, #2
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 31


 255 00fc 04E0     		b	.L2
 256              	.L10:
 124:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 257              		.loc 1 124 0
 258 00fe 0620     		movs	r0, #6
 259 0100 02E0     		b	.L2
 260              	.L11:
 129:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 261              		.loc 1 129 0
 262 0102 0120     		movs	r0, #1
 263 0104 00E0     		b	.L2
 264              	.L12:
 176:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OK;
 178:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else {
 179:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OK;
 265              		.loc 1 179 0
 266 0106 0020     		movs	r0, #0
 267              	.LVL19:
 268              	.L2:
 269              	.LBB116:
 270              	.LBB117:
 271              	.LBB118:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 272              		.loc 2 232 0
 273              		.syntax unified
 274              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 275 0108 86F31088 		msr primask, r6
 276              	@ 0 "" 2
 277              	.LVL20:
 278              		.thumb
 279              		.syntax unified
 280              	.LBE118:
 281              	.LBE117:
 282              	.LBE116:
 180:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   }
 181:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 182:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( ev != E_OK ) {
 183:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_ORTI_set_lasterror(ev);
 184:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_oo_notify_error_WaitEvent(Mask, ev);
 185:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   }
 186:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 187:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_WAITEVENT);
 188:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 189:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   return ev;
 191:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** }
 283              		.loc 1 191 0
 284 010c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 285              	.L15:
 286 010e 00BF     		.align	2
 287              	.L14:
 288 0110 00000000 		.word	EE_stkfirst
 289 0114 00000000 		.word	EE_IRQ_nesting_level
 290 0118 00000000 		.word	EE_th_resource_last
 291 011c 00000000 		.word	EE_th_is_extended
 292 0120 00000000 		.word	EE_th_event_active
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 32


 293 0124 00000000 		.word	EE_th_event_waitmask
 294 0128 00000000 		.word	EE_th_status
 295 012c 00000000 		.word	EE_th_dispatch_prio
 296 0130 00000000 		.word	EE_sys_ceiling
 297 0134 00000000 		.word	EE_th_waswaiting
 298 0138 00000000 		.word	EE_th_next
 299 013c 00000000 		.word	EE_th_ready_prio
 300              		.cfi_endproc
 301              	.LFE139:
 302              		.size	EE_oo_WaitEvent, .-EE_oo_WaitEvent
 303              		.text
 304              	.Letext0:
 305              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 306              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 307              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 308              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 309              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 310              		.file 11 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 311              		.file 12 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 312              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 313              		.section	.debug_info,"",%progbits
 314              	.Ldebug_info0:
 315 0000 38090000 		.4byte	0x938
 316 0004 0400     		.2byte	0x4
 317 0006 00000000 		.4byte	.Ldebug_abbrev0
 318 000a 04       		.byte	0x4
 319 000b 01       		.uleb128 0x1
 320 000c 64020000 		.4byte	.LASF119
 321 0010 0C       		.byte	0xc
 322 0011 42060000 		.4byte	.LASF120
 323 0015 D5070000 		.4byte	.LASF121
 324 0019 00000000 		.4byte	.Ldebug_ranges0+0
 325 001d 00000000 		.4byte	0
 326 0021 00000000 		.4byte	.Ldebug_line0
 327 0025 02       		.uleb128 0x2
 328 0026 01       		.byte	0x1
 329 0027 06       		.byte	0x6
 330 0028 4F070000 		.4byte	.LASF0
 331 002c 02       		.uleb128 0x2
 332 002d 01       		.byte	0x1
 333 002e 08       		.byte	0x8
 334 002f AF060000 		.4byte	.LASF1
 335 0033 02       		.uleb128 0x2
 336 0034 02       		.byte	0x2
 337 0035 05       		.byte	0x5
 338 0036 14050000 		.4byte	.LASF2
 339 003a 02       		.uleb128 0x2
 340 003b 02       		.byte	0x2
 341 003c 07       		.byte	0x7
 342 003d 61070000 		.4byte	.LASF3
 343 0041 03       		.uleb128 0x3
 344 0042 93000000 		.4byte	.LASF5
 345 0046 06       		.byte	0x6
 346 0047 3F       		.byte	0x3f
 347 0048 4C000000 		.4byte	0x4c
 348 004c 02       		.uleb128 0x2
 349 004d 04       		.byte	0x4
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 33


 350 004e 05       		.byte	0x5
 351 004f 33050000 		.4byte	.LASF4
 352 0053 03       		.uleb128 0x3
 353 0054 BD060000 		.4byte	.LASF6
 354 0058 06       		.byte	0x6
 355 0059 41       		.byte	0x41
 356 005a 5E000000 		.4byte	0x5e
 357 005e 02       		.uleb128 0x2
 358 005f 04       		.byte	0x4
 359 0060 07       		.byte	0x7
 360 0061 09060000 		.4byte	.LASF7
 361 0065 02       		.uleb128 0x2
 362 0066 08       		.byte	0x8
 363 0067 05       		.byte	0x5
 364 0068 46040000 		.4byte	.LASF8
 365 006c 02       		.uleb128 0x2
 366 006d 08       		.byte	0x8
 367 006e 07       		.byte	0x7
 368 006f D1010000 		.4byte	.LASF9
 369 0073 04       		.uleb128 0x4
 370 0074 04       		.byte	0x4
 371 0075 05       		.byte	0x5
 372 0076 696E7400 		.ascii	"int\000"
 373 007a 02       		.uleb128 0x2
 374 007b 04       		.byte	0x4
 375 007c 07       		.byte	0x7
 376 007d 64000000 		.4byte	.LASF10
 377 0081 02       		.uleb128 0x2
 378 0082 08       		.byte	0x8
 379 0083 04       		.byte	0x4
 380 0084 D3040000 		.4byte	.LASF11
 381 0088 03       		.uleb128 0x3
 382 0089 54040000 		.4byte	.LASF12
 383 008d 07       		.byte	0x7
 384 008e 3E       		.byte	0x3e
 385 008f 2C000000 		.4byte	0x2c
 386 0093 03       		.uleb128 0x3
 387 0094 C9010000 		.4byte	.LASF13
 388 0098 07       		.byte	0x7
 389 0099 3F       		.byte	0x3f
 390 009a 25000000 		.4byte	0x25
 391 009e 03       		.uleb128 0x3
 392 009f 5D040000 		.4byte	.LASF14
 393 00a3 07       		.byte	0x7
 394 00a4 52       		.byte	0x52
 395 00a5 3A000000 		.4byte	0x3a
 396 00a9 03       		.uleb128 0x3
 397 00aa E0050000 		.4byte	.LASF15
 398 00ae 07       		.byte	0x7
 399 00af 53       		.byte	0x53
 400 00b0 73000000 		.4byte	0x73
 401 00b4 03       		.uleb128 0x3
 402 00b5 EC040000 		.4byte	.LASF16
 403 00b9 07       		.byte	0x7
 404 00ba 54       		.byte	0x54
 405 00bb 7A000000 		.4byte	0x7a
 406 00bf 03       		.uleb128 0x3
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 34


 407 00c0 C9050000 		.4byte	.LASF17
 408 00c4 02       		.byte	0x2
 409 00c5 4D       		.byte	0x4d
 410 00c6 B4000000 		.4byte	0xb4
 411 00ca 03       		.uleb128 0x3
 412 00cb E8000000 		.4byte	.LASF18
 413 00cf 02       		.byte	0x2
 414 00d0 4F       		.byte	0x4f
 415 00d1 B4000000 		.4byte	0xb4
 416 00d5 03       		.uleb128 0x3
 417 00d6 BD050000 		.4byte	.LASF19
 418 00da 02       		.byte	0x2
 419 00db 54       		.byte	0x54
 420 00dc BF000000 		.4byte	0xbf
 421 00e0 03       		.uleb128 0x3
 422 00e1 26020000 		.4byte	.LASF20
 423 00e5 02       		.byte	0x2
 424 00e6 78       		.byte	0x78
 425 00e7 A9000000 		.4byte	0xa9
 426 00eb 05       		.uleb128 0x5
 427 00ec B9010000 		.4byte	.LASF21
 428 00f0 08       		.byte	0x8
 429 00f1 1101     		.2byte	0x111
 430 00f3 9E000000 		.4byte	0x9e
 431 00f7 05       		.uleb128 0x5
 432 00f8 E8010000 		.4byte	.LASF22
 433 00fc 08       		.byte	0x8
 434 00fd F701     		.2byte	0x1f7
 435 00ff E0000000 		.4byte	0xe0
 436 0103 05       		.uleb128 0x5
 437 0104 3F000000 		.4byte	.LASF23
 438 0108 08       		.byte	0x8
 439 0109 2C02     		.2byte	0x22c
 440 010b BF000000 		.4byte	0xbf
 441 010f 05       		.uleb128 0x5
 442 0110 76000000 		.4byte	.LASF24
 443 0114 08       		.byte	0x8
 444 0115 3502     		.2byte	0x235
 445 0117 BF000000 		.4byte	0xbf
 446 011b 05       		.uleb128 0x5
 447 011c AD000000 		.4byte	.LASF25
 448 0120 08       		.byte	0x8
 449 0121 5D02     		.2byte	0x25d
 450 0123 BF000000 		.4byte	0xbf
 451 0127 05       		.uleb128 0x5
 452 0128 BF000000 		.4byte	.LASF26
 453 012c 08       		.byte	0x8
 454 012d 6C02     		.2byte	0x26c
 455 012f BF000000 		.4byte	0xbf
 456 0133 06       		.uleb128 0x6
 457 0134 0C       		.byte	0xc
 458 0135 08       		.byte	0x8
 459 0136 7202     		.2byte	0x272
 460 0138 64010000 		.4byte	0x164
 461 013c 07       		.uleb128 0x7
 462 013d 35030000 		.4byte	.LASF27
 463 0141 08       		.byte	0x8
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 35


 464 0142 7302     		.2byte	0x273
 465 0144 0F010000 		.4byte	0x10f
 466 0148 00       		.byte	0
 467 0149 07       		.uleb128 0x7
 468 014a F0000000 		.4byte	.LASF28
 469 014e 08       		.byte	0x8
 470 014f 7402     		.2byte	0x274
 471 0151 0F010000 		.4byte	0x10f
 472 0155 04       		.byte	0x4
 473 0156 07       		.uleb128 0x7
 474 0157 2D070000 		.4byte	.LASF29
 475 015b 08       		.byte	0x8
 476 015c 7502     		.2byte	0x275
 477 015e 0F010000 		.4byte	0x10f
 478 0162 08       		.byte	0x8
 479 0163 00       		.byte	0
 480 0164 05       		.uleb128 0x5
 481 0165 1D010000 		.4byte	.LASF30
 482 0169 08       		.byte	0x8
 483 016a 7A02     		.2byte	0x27a
 484 016c 33010000 		.4byte	0x133
 485 0170 06       		.uleb128 0x6
 486 0171 08       		.byte	0x8
 487 0172 08       		.byte	0x8
 488 0173 7D02     		.2byte	0x27d
 489 0175 94010000 		.4byte	0x194
 490 0179 07       		.uleb128 0x7
 491 017a 46020000 		.4byte	.LASF31
 492 017e 08       		.byte	0x8
 493 017f 7E02     		.2byte	0x27e
 494 0181 0F010000 		.4byte	0x10f
 495 0185 00       		.byte	0
 496 0186 07       		.uleb128 0x7
 497 0187 09070000 		.4byte	.LASF32
 498 018b 08       		.byte	0x8
 499 018c 7F02     		.2byte	0x27f
 500 018e 1B010000 		.4byte	0x11b
 501 0192 04       		.byte	0x4
 502 0193 00       		.byte	0
 503 0194 05       		.uleb128 0x5
 504 0195 75030000 		.4byte	.LASF33
 505 0199 08       		.byte	0x8
 506 019a 8002     		.2byte	0x280
 507 019c 70010000 		.4byte	0x170
 508 01a0 08       		.uleb128 0x8
 509 01a1 01       		.byte	0x1
 510 01a2 2C000000 		.4byte	0x2c
 511 01a6 08       		.byte	0x8
 512 01a7 8A02     		.2byte	0x28a
 513 01a9 BA010000 		.4byte	0x1ba
 514 01ad 09       		.uleb128 0x9
 515 01ae 85070000 		.4byte	.LASF34
 516 01b2 00       		.byte	0
 517 01b3 09       		.uleb128 0x9
 518 01b4 4B080000 		.4byte	.LASF35
 519 01b8 01       		.byte	0x1
 520 01b9 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 36


 521 01ba 05       		.uleb128 0x5
 522 01bb 91040000 		.4byte	.LASF36
 523 01bf 08       		.byte	0x8
 524 01c0 8D02     		.2byte	0x28d
 525 01c2 A0010000 		.4byte	0x1a0
 526 01c6 05       		.uleb128 0x5
 527 01c7 1B040000 		.4byte	.LASF37
 528 01cb 08       		.byte	0x8
 529 01cc 9002     		.2byte	0x290
 530 01ce BA010000 		.4byte	0x1ba
 531 01d2 06       		.uleb128 0x6
 532 01d3 0C       		.byte	0xc
 533 01d4 08       		.byte	0x8
 534 01d5 9402     		.2byte	0x294
 535 01d7 01020000 		.4byte	0x201
 536 01db 0A       		.uleb128 0xa
 537 01dc 6300     		.ascii	"c\000"
 538 01de 08       		.byte	0x8
 539 01df 9602     		.2byte	0x296
 540 01e1 27010000 		.4byte	0x127
 541 01e5 00       		.byte	0
 542 01e6 07       		.uleb128 0x7
 543 01e7 1D000000 		.4byte	.LASF38
 544 01eb 08       		.byte	0x8
 545 01ec 9802     		.2byte	0x298
 546 01ee 1B010000 		.4byte	0x11b
 547 01f2 04       		.byte	0x4
 548 01f3 07       		.uleb128 0x7
 549 01f4 F1010000 		.4byte	.LASF39
 550 01f8 08       		.byte	0x8
 551 01f9 9A02     		.2byte	0x29a
 552 01fb C6010000 		.4byte	0x1c6
 553 01ff 08       		.byte	0x8
 554 0200 00       		.byte	0
 555 0201 05       		.uleb128 0x5
 556 0202 F6040000 		.4byte	.LASF40
 557 0206 08       		.byte	0x8
 558 0207 9B02     		.2byte	0x29b
 559 0209 D2010000 		.4byte	0x1d2
 560 020d 06       		.uleb128 0x6
 561 020e 10       		.byte	0x10
 562 020f 08       		.byte	0x8
 563 0210 9F02     		.2byte	0x29f
 564 0212 4B020000 		.4byte	0x24b
 565 0216 07       		.uleb128 0x7
 566 0217 5F020000 		.4byte	.LASF41
 567 021b 08       		.byte	0x8
 568 021c A002     		.2byte	0x2a0
 569 021e D5000000 		.4byte	0xd5
 570 0222 00       		.byte	0
 571 0223 07       		.uleb128 0x7
 572 0224 2A050000 		.4byte	.LASF42
 573 0228 08       		.byte	0x8
 574 0229 A102     		.2byte	0x2a1
 575 022b 0F010000 		.4byte	0x10f
 576 022f 04       		.byte	0x4
 577 0230 07       		.uleb128 0x7
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 37


 578 0231 5B070000 		.4byte	.LASF43
 579 0235 08       		.byte	0x8
 580 0236 A202     		.2byte	0x2a2
 581 0238 0F010000 		.4byte	0x10f
 582 023c 08       		.byte	0x8
 583 023d 07       		.uleb128 0x7
 584 023e 71000000 		.4byte	.LASF44
 585 0242 08       		.byte	0x8
 586 0243 A302     		.2byte	0x2a3
 587 0245 1B010000 		.4byte	0x11b
 588 0249 0C       		.byte	0xc
 589 024a 00       		.byte	0
 590 024b 05       		.uleb128 0x5
 591 024c 0F070000 		.4byte	.LASF45
 592 0250 08       		.byte	0x8
 593 0251 A402     		.2byte	0x2a4
 594 0253 0D020000 		.4byte	0x20d
 595 0257 05       		.uleb128 0x5
 596 0258 9D050000 		.4byte	.LASF46
 597 025c 08       		.byte	0x8
 598 025d 2103     		.2byte	0x321
 599 025f 2C000000 		.4byte	0x2c
 600 0263 08       		.uleb128 0x8
 601 0264 01       		.byte	0x1
 602 0265 2C000000 		.4byte	0x2c
 603 0269 08       		.byte	0x8
 604 026a 5904     		.2byte	0x459
 605 026c B3020000 		.4byte	0x2b3
 606 0270 09       		.uleb128 0x9
 607 0271 F0030000 		.4byte	.LASF47
 608 0275 00       		.byte	0
 609 0276 09       		.uleb128 0x9
 610 0277 8C030000 		.4byte	.LASF48
 611 027b 01       		.byte	0x1
 612 027c 09       		.uleb128 0x9
 613 027d 3E080000 		.4byte	.LASF49
 614 0281 02       		.byte	0x2
 615 0282 09       		.uleb128 0x9
 616 0283 C1040000 		.4byte	.LASF50
 617 0287 03       		.byte	0x3
 618 0288 09       		.uleb128 0x9
 619 0289 F2050000 		.4byte	.LASF51
 620 028d 04       		.byte	0x4
 621 028e 09       		.uleb128 0x9
 622 028f 21030000 		.4byte	.LASF52
 623 0293 05       		.byte	0x5
 624 0294 09       		.uleb128 0x9
 625 0295 6F060000 		.4byte	.LASF53
 626 0299 06       		.byte	0x6
 627 029a 09       		.uleb128 0x9
 628 029b 50010000 		.4byte	.LASF54
 629 029f 07       		.byte	0x7
 630 02a0 09       		.uleb128 0x9
 631 02a1 A2080000 		.4byte	.LASF55
 632 02a5 08       		.byte	0x8
 633 02a6 09       		.uleb128 0x9
 634 02a7 89010000 		.4byte	.LASF56
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 38


 635 02ab 09       		.byte	0x9
 636 02ac 09       		.uleb128 0x9
 637 02ad 2D060000 		.4byte	.LASF57
 638 02b1 0A       		.byte	0xa
 639 02b2 00       		.byte	0
 640 02b3 05       		.uleb128 0x5
 641 02b4 A0060000 		.4byte	.LASF58
 642 02b8 08       		.byte	0x8
 643 02b9 6504     		.2byte	0x465
 644 02bb 63020000 		.4byte	0x263
 645 02bf 03       		.uleb128 0x3
 646 02c0 3A060000 		.4byte	.LASF59
 647 02c4 09       		.byte	0x9
 648 02c5 2C       		.byte	0x2c
 649 02c6 41000000 		.4byte	0x41
 650 02ca 03       		.uleb128 0x3
 651 02cb 6A010000 		.4byte	.LASF60
 652 02cf 09       		.byte	0x9
 653 02d0 30       		.byte	0x30
 654 02d1 53000000 		.4byte	0x53
 655 02d5 02       		.uleb128 0x2
 656 02d6 04       		.byte	0x4
 657 02d7 04       		.byte	0x4
 658 02d8 83010000 		.4byte	.LASF61
 659 02dc 02       		.uleb128 0x2
 660 02dd 08       		.byte	0x8
 661 02de 04       		.byte	0x4
 662 02df 8E070000 		.4byte	.LASF62
 663 02e3 02       		.uleb128 0x2
 664 02e4 01       		.byte	0x1
 665 02e5 08       		.byte	0x8
 666 02e6 BC030000 		.4byte	.LASF63
 667 02ea 02       		.uleb128 0x2
 668 02eb 04       		.byte	0x4
 669 02ec 07       		.byte	0x7
 670 02ed E9050000 		.4byte	.LASF64
 671 02f1 0B       		.uleb128 0xb
 672 02f2 F2020000 		.4byte	.LASF122
 673 02f6 02       		.byte	0x2
 674 02f7 F1       		.byte	0xf1
 675 02f8 CA000000 		.4byte	0xca
 676 02fc 03       		.byte	0x3
 677 02fd 0D030000 		.4byte	0x30d
 678 0301 0C       		.uleb128 0xc
 679 0302 64010000 		.4byte	.LASF83
 680 0306 02       		.byte	0x2
 681 0307 F4       		.byte	0xf4
 682 0308 CA000000 		.4byte	0xca
 683 030c 00       		.byte	0
 684 030d 0D       		.uleb128 0xd
 685 030e 45030000 		.4byte	.LASF65
 686 0312 02       		.byte	0x2
 687 0313 DC       		.byte	0xdc
 688 0314 03       		.byte	0x3
 689 0315 23030000 		.4byte	0x323
 690 0319 0E       		.uleb128 0xe
 691 031a 6600     		.ascii	"f\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 39


 692 031c 02       		.byte	0x2
 693 031d DC       		.byte	0xdc
 694 031e CA000000 		.4byte	0xca
 695 0322 00       		.byte	0
 696 0323 0F       		.uleb128 0xf
 697 0324 DC060000 		.4byte	.LASF66
 698 0328 08       		.byte	0x8
 699 0329 9703     		.2byte	0x397
 700 032b 03       		.byte	0x3
 701 032c 3D030000 		.4byte	0x33d
 702 0330 10       		.uleb128 0x10
 703 0331 73727600 		.ascii	"srv\000"
 704 0335 08       		.byte	0x8
 705 0336 9703     		.2byte	0x397
 706 0338 88000000 		.4byte	0x88
 707 033c 00       		.byte	0
 708 033d 0F       		.uleb128 0xf
 709 033e FF030000 		.4byte	.LASF67
 710 0342 08       		.byte	0x8
 711 0343 8404     		.2byte	0x484
 712 0345 03       		.byte	0x3
 713 0346 57030000 		.4byte	0x357
 714 034a 10       		.uleb128 0x10
 715 034b 63747800 		.ascii	"ctx\000"
 716 034f 08       		.byte	0x8
 717 0350 8504     		.2byte	0x485
 718 0352 B3020000 		.4byte	0x2b3
 719 0356 00       		.byte	0
 720 0357 11       		.uleb128 0x11
 721 0358 73010000 		.4byte	.LASF71
 722 035c 03       		.byte	0x3
 723 035d D301     		.2byte	0x1d3
 724 035f E0000000 		.4byte	0xe0
 725 0363 03       		.byte	0x3
 726 0364 0F       		.uleb128 0xf
 727 0365 67040000 		.4byte	.LASF68
 728 0369 08       		.byte	0x8
 729 036a D303     		.2byte	0x3d3
 730 036c 03       		.byte	0x3
 731 036d 8A030000 		.4byte	0x38a
 732 0371 12       		.uleb128 0x12
 733 0372 B3010000 		.4byte	.LASF69
 734 0376 08       		.byte	0x8
 735 0377 D303     		.2byte	0x3d3
 736 0379 E0000000 		.4byte	0xe0
 737 037d 12       		.uleb128 0x12
 738 037e B7030000 		.4byte	.LASF70
 739 0382 08       		.byte	0x8
 740 0383 D303     		.2byte	0x3d3
 741 0385 BF000000 		.4byte	0xbf
 742 0389 00       		.byte	0
 743 038a 13       		.uleb128 0x13
 744 038b D0000000 		.4byte	.LASF74
 745 038f 03       		.byte	0x3
 746 0390 9A01     		.2byte	0x19a
 747 0392 03       		.byte	0x3
 748 0393 14       		.uleb128 0x14
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 40


 749 0394 1B060000 		.4byte	.LASF72
 750 0398 03       		.byte	0x3
 751 0399 EE       		.byte	0xee
 752 039a E0000000 		.4byte	0xe0
 753 039e 03       		.byte	0x3
 754 039f 0D       		.uleb128 0xd
 755 03a0 B0040000 		.4byte	.LASF73
 756 03a4 05       		.byte	0x5
 757 03a5 98       		.byte	0x98
 758 03a6 03       		.byte	0x3
 759 03a7 B7030000 		.4byte	0x3b7
 760 03ab 0E       		.uleb128 0xe
 761 03ac 74696400 		.ascii	"tid\000"
 762 03b0 05       		.byte	0x5
 763 03b1 98       		.byte	0x98
 764 03b2 E0000000 		.4byte	0xe0
 765 03b6 00       		.byte	0
 766 03b7 13       		.uleb128 0x13
 767 03b8 0A030000 		.4byte	.LASF75
 768 03bc 03       		.byte	0x3
 769 03bd 8D01     		.2byte	0x18d
 770 03bf 03       		.byte	0x3
 771 03c0 0D       		.uleb128 0xd
 772 03c1 31040000 		.4byte	.LASF76
 773 03c5 05       		.byte	0x5
 774 03c6 A5       		.byte	0xa5
 775 03c7 03       		.byte	0x3
 776 03c8 D8030000 		.4byte	0x3d8
 777 03cc 0E       		.uleb128 0xe
 778 03cd 74696400 		.ascii	"tid\000"
 779 03d1 05       		.byte	0x5
 780 03d2 A5       		.byte	0xa5
 781 03d3 E0000000 		.4byte	0xe0
 782 03d7 00       		.byte	0
 783 03d8 0F       		.uleb128 0xf
 784 03d9 FD000000 		.4byte	.LASF77
 785 03dd 08       		.byte	0x8
 786 03de D203     		.2byte	0x3d2
 787 03e0 03       		.byte	0x3
 788 03e1 F2030000 		.4byte	0x3f2
 789 03e5 10       		.uleb128 0x10
 790 03e6 746D7000 		.ascii	"tmp\000"
 791 03ea 08       		.byte	0x8
 792 03eb D203     		.2byte	0x3d2
 793 03ed E0000000 		.4byte	0xe0
 794 03f1 00       		.byte	0
 795 03f2 14       		.uleb128 0x14
 796 03f3 00000000 		.4byte	.LASF78
 797 03f7 04       		.byte	0x4
 798 03f8 4D       		.byte	0x4d
 799 03f9 BF000000 		.4byte	0xbf
 800 03fd 03       		.byte	0x3
 801 03fe 13       		.uleb128 0x13
 802 03ff 0B020000 		.4byte	.LASF79
 803 0403 0A       		.byte	0xa
 804 0404 AB01     		.2byte	0x1ab
 805 0406 03       		.byte	0x3
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 41


 806 0407 0F       		.uleb128 0xf
 807 0408 C1030000 		.4byte	.LASF80
 808 040c 08       		.byte	0x8
 809 040d A303     		.2byte	0x3a3
 810 040f 03       		.byte	0x3
 811 0410 20040000 		.4byte	0x420
 812 0414 10       		.uleb128 0x10
 813 0415 696400   		.ascii	"id\000"
 814 0418 08       		.byte	0x8
 815 0419 A303     		.2byte	0x3a3
 816 041b 88000000 		.4byte	0x88
 817 041f 00       		.byte	0
 818 0420 14       		.uleb128 0x14
 819 0421 99030000 		.4byte	.LASF81
 820 0425 0B       		.byte	0xb
 821 0426 60       		.byte	0x60
 822 0427 CA000000 		.4byte	0xca
 823 042b 03       		.byte	0x3
 824 042c 0F       		.uleb128 0xf
 825 042d 4D000000 		.4byte	.LASF82
 826 0431 03       		.byte	0x3
 827 0432 C402     		.2byte	0x2c4
 828 0434 03       		.byte	0x3
 829 0435 46040000 		.4byte	0x446
 830 0439 15       		.uleb128 0x15
 831 043a 74070000 		.4byte	.LASF84
 832 043e 03       		.byte	0x3
 833 043f C602     		.2byte	0x2c6
 834 0441 E0000000 		.4byte	0xe0
 835 0445 00       		.byte	0
 836 0446 0D       		.uleb128 0xd
 837 0447 84060000 		.4byte	.LASF85
 838 044b 0B       		.byte	0xb
 839 044c 68       		.byte	0x68
 840 044d 03       		.byte	0x3
 841 044e 5C040000 		.4byte	0x45c
 842 0452 0E       		.uleb128 0xe
 843 0453 6600     		.ascii	"f\000"
 844 0455 0B       		.byte	0xb
 845 0456 68       		.byte	0x68
 846 0457 CA000000 		.4byte	0xca
 847 045b 00       		.byte	0
 848 045c 0F       		.uleb128 0xf
 849 045d BD070000 		.4byte	.LASF86
 850 0461 08       		.byte	0x8
 851 0462 A803     		.2byte	0x3a8
 852 0464 03       		.byte	0x3
 853 0465 75040000 		.4byte	0x475
 854 0469 10       		.uleb128 0x10
 855 046a 696400   		.ascii	"id\000"
 856 046d 08       		.byte	0x8
 857 046e A803     		.2byte	0x3a8
 858 0470 88000000 		.4byte	0x88
 859 0474 00       		.byte	0
 860 0475 0F       		.uleb128 0xf
 861 0476 5A050000 		.4byte	.LASF87
 862 047a 03       		.byte	0x3
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 42


 863 047b E202     		.2byte	0x2e2
 864 047d 03       		.byte	0x3
 865 047e A1040000 		.4byte	0x4a1
 866 0482 15       		.uleb128 0x15
 867 0483 7C070000 		.4byte	.LASF88
 868 0487 03       		.byte	0x3
 869 0488 E402     		.2byte	0x2e4
 870 048a E0000000 		.4byte	0xe0
 871 048e 16       		.uleb128 0x16
 872 048f 17       		.uleb128 0x17
 873 0490 7B080000 		.4byte	.LASF115
 874 0494 03       		.byte	0x3
 875 0495 B102     		.2byte	0x2b1
 876 0497 73000000 		.4byte	0x73
 877 049b 00       		.byte	0
 878 049c 18       		.uleb128 0x18
 879 049d 18       		.uleb128 0x18
 880 049e 00       		.byte	0
 881 049f 00       		.byte	0
 882 04a0 00       		.byte	0
 883 04a1 0F       		.uleb128 0xf
 884 04a2 C8060000 		.4byte	.LASF89
 885 04a6 03       		.byte	0x3
 886 04a7 3202     		.2byte	0x232
 887 04a9 03       		.byte	0x3
 888 04aa BB040000 		.4byte	0x4bb
 889 04ae 19       		.uleb128 0x19
 890 04af 746D7000 		.ascii	"tmp\000"
 891 04b3 03       		.byte	0x3
 892 04b4 3402     		.2byte	0x234
 893 04b6 F7000000 		.4byte	0xf7
 894 04ba 00       		.byte	0
 895 04bb 1A       		.uleb128 0x1a
 896 04bc 9D000000 		.4byte	.LASF123
 897 04c0 01       		.byte	0x1
 898 04c1 47       		.byte	0x47
 899 04c2 57020000 		.4byte	0x257
 900 04c6 00000000 		.4byte	.LFB139
 901 04ca 40010000 		.4byte	.LFE139-.LFB139
 902 04ce 01       		.uleb128 0x1
 903 04cf 9C       		.byte	0x9c
 904 04d0 1C070000 		.4byte	0x71c
 905 04d4 1B       		.uleb128 0x1b
 906 04d5 CB000000 		.4byte	.LASF124
 907 04d9 01       		.byte	0x1
 908 04da 47       		.byte	0x47
 909 04db 03010000 		.4byte	0x103
 910 04df 00000000 		.4byte	.LLST0
 911 04e3 0C       		.uleb128 0xc
 912 04e4 74070000 		.4byte	.LASF84
 913 04e8 01       		.byte	0x1
 914 04e9 49       		.byte	0x49
 915 04ea F7000000 		.4byte	0xf7
 916 04ee 1C       		.uleb128 0x1c
 917 04ef 657600   		.ascii	"ev\000"
 918 04f2 01       		.byte	0x1
 919 04f3 4B       		.byte	0x4b
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 43


 920 04f4 57020000 		.4byte	0x257
 921 04f8 50000000 		.4byte	.LLST1
 922 04fc 1D       		.uleb128 0x1d
 923 04fd 74050000 		.4byte	.LASF90
 924 0501 01       		.byte	0x1
 925 0502 4D       		.byte	0x4d
 926 0503 CA000000 		.4byte	0xca
 927 0507 01       		.uleb128 0x1
 928 0508 56       		.byte	0x56
 929 0509 1E       		.uleb128 0x1e
 930 050a 7B080000 		.4byte	.LASF115
 931 050e 03       		.byte	0x3
 932 050f B102     		.2byte	0x2b1
 933 0511 73000000 		.4byte	0x73
 934 0515 1B050000 		.4byte	0x51b
 935 0519 18       		.uleb128 0x18
 936 051a 00       		.byte	0
 937 051b 1F       		.uleb128 0x1f
 938 051c 20040000 		.4byte	0x420
 939 0520 04000000 		.4byte	.LBB90
 940 0524 06000000 		.4byte	.LBE90-.LBB90
 941 0528 01       		.byte	0x1
 942 0529 4D       		.byte	0x4d
 943 052a 52050000 		.4byte	0x552
 944 052e 20       		.uleb128 0x20
 945 052f F1020000 		.4byte	0x2f1
 946 0533 04000000 		.4byte	.LBB91
 947 0537 06000000 		.4byte	.LBE91-.LBB91
 948 053b 0B       		.byte	0xb
 949 053c 62       		.byte	0x62
 950 053d 21       		.uleb128 0x21
 951 053e 04000000 		.4byte	.LBB92
 952 0542 06000000 		.4byte	.LBE92-.LBB92
 953 0546 22       		.uleb128 0x22
 954 0547 01030000 		.4byte	0x301
 955 054b 6F000000 		.4byte	.LLST2
 956 054f 00       		.byte	0
 957 0550 00       		.byte	0
 958 0551 00       		.byte	0
 959 0552 23       		.uleb128 0x23
 960 0553 93030000 		.4byte	0x393
 961 0557 0A000000 		.4byte	.LBB93
 962 055b 04000000 		.4byte	.LBE93-.LBB93
 963 055f 01       		.byte	0x1
 964 0560 53       		.byte	0x53
 965 0561 23       		.uleb128 0x23
 966 0562 F2030000 		.4byte	0x3f2
 967 0566 18000000 		.4byte	.LBB95
 968 056a 04000000 		.4byte	.LBE95-.LBB95
 969 056e 01       		.byte	0x1
 970 056f 6B       		.byte	0x6b
 971 0570 1F       		.uleb128 0x1f
 972 0571 2C040000 		.4byte	0x42c
 973 0575 4C000000 		.4byte	.LBB97
 974 0579 2A000000 		.4byte	.LBE97-.LBB97
 975 057d 01       		.byte	0x1
 976 057e A4       		.byte	0xa4
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 44


 977 057f B3050000 		.4byte	0x5b3
 978 0583 21       		.uleb128 0x21
 979 0584 4C000000 		.4byte	.LBB98
 980 0588 2A000000 		.4byte	.LBE98-.LBB98
 981 058c 24       		.uleb128 0x24
 982 058d 39040000 		.4byte	0x439
 983 0591 25       		.uleb128 0x25
 984 0592 93030000 		.4byte	0x393
 985 0596 4C000000 		.4byte	.LBB99
 986 059a 04000000 		.4byte	.LBE99-.LBB99
 987 059e 03       		.byte	0x3
 988 059f C602     		.2byte	0x2c6
 989 05a1 25       		.uleb128 0x25
 990 05a2 57030000 		.4byte	0x357
 991 05a6 6E000000 		.4byte	.LBB101
 992 05aa 08000000 		.4byte	.LBE101-.LBB101
 993 05ae 03       		.byte	0x3
 994 05af DE02     		.2byte	0x2de
 995 05b1 00       		.byte	0
 996 05b2 00       		.byte	0
 997 05b3 1F       		.uleb128 0x1f
 998 05b4 75040000 		.4byte	0x475
 999 05b8 76000000 		.4byte	.LBB103
 1000 05bc 76000000 		.4byte	.LBE103-.LBB103
 1001 05c0 01       		.byte	0x1
 1002 05c1 AC       		.byte	0xac
 1003 05c2 C9060000 		.4byte	0x6c9
 1004 05c6 21       		.uleb128 0x21
 1005 05c7 76000000 		.4byte	.LBB104
 1006 05cb 76000000 		.4byte	.LBE104-.LBB104
 1007 05cf 22       		.uleb128 0x22
 1008 05d0 82040000 		.4byte	0x482
 1009 05d4 82000000 		.4byte	.LLST3
 1010 05d8 25       		.uleb128 0x25
 1011 05d9 93030000 		.4byte	0x393
 1012 05dd 8C000000 		.4byte	.LBB105
 1013 05e1 04000000 		.4byte	.LBE105-.LBB105
 1014 05e5 03       		.byte	0x3
 1015 05e6 EA02     		.2byte	0x2ea
 1016 05e8 26       		.uleb128 0x26
 1017 05e9 96000000 		.4byte	.LBB107
 1018 05ed 16000000 		.4byte	.LBE107-.LBB107
 1019 05f1 0C060000 		.4byte	0x60c
 1020 05f5 27       		.uleb128 0x27
 1021 05f6 AC000000 		.4byte	.LVL8
 1022 05fa 0C090000 		.4byte	0x90c
 1023 05fe 28       		.uleb128 0x28
 1024 05ff 01       		.uleb128 0x1
 1025 0600 50       		.byte	0x50
 1026 0601 02       		.uleb128 0x2
 1027 0602 08       		.byte	0x8
 1028 0603 37       		.byte	0x37
 1029 0604 28       		.uleb128 0x28
 1030 0605 01       		.uleb128 0x1
 1031 0606 51       		.byte	0x51
 1032 0607 02       		.uleb128 0x2
 1033 0608 75       		.byte	0x75
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 45


 1034 0609 01       		.sleb128 1
 1035 060a 00       		.byte	0
 1036 060b 00       		.byte	0
 1037 060c 29       		.uleb128 0x29
 1038 060d 9F030000 		.4byte	0x39f
 1039 0611 AC000000 		.4byte	.LBB108
 1040 0615 0A000000 		.4byte	.LBE108-.LBB108
 1041 0619 03       		.byte	0x3
 1042 061a FA02     		.2byte	0x2fa
 1043 061c 3F060000 		.4byte	0x63f
 1044 0620 2A       		.uleb128 0x2a
 1045 0621 AB030000 		.4byte	0x3ab
 1046 0625 A0000000 		.4byte	.LLST4
 1047 0629 27       		.uleb128 0x27
 1048 062a B4000000 		.4byte	.LVL9
 1049 062e 18090000 		.4byte	0x918
 1050 0632 28       		.uleb128 0x28
 1051 0633 01       		.uleb128 0x1
 1052 0634 50       		.byte	0x50
 1053 0635 07       		.uleb128 0x7
 1054 0636 75       		.byte	0x75
 1055 0637 00       		.sleb128 0
 1056 0638 40       		.byte	0x40
 1057 0639 4B       		.byte	0x4b
 1058 063a 24       		.byte	0x24
 1059 063b 1F       		.byte	0x1f
 1060 063c 21       		.byte	0x21
 1061 063d 00       		.byte	0
 1062 063e 00       		.byte	0
 1063 063f 29       		.uleb128 0x29
 1064 0640 A1040000 		.4byte	0x4a1
 1065 0644 CA000000 		.4byte	.LBB110
 1066 0648 22000000 		.4byte	.LBE110-.LBB110
 1067 064c 03       		.byte	0x3
 1068 064d 0A03     		.2byte	0x30a
 1069 064f BE060000 		.4byte	0x6be
 1070 0653 21       		.uleb128 0x21
 1071 0654 CA000000 		.4byte	.LBB111
 1072 0658 22000000 		.4byte	.LBE111-.LBB111
 1073 065c 22       		.uleb128 0x22
 1074 065d AE040000 		.4byte	0x4ae
 1075 0661 B3000000 		.4byte	.LLST5
 1076 0665 29       		.uleb128 0x29
 1077 0666 9F030000 		.4byte	0x39f
 1078 066a DE000000 		.4byte	.LBB112
 1079 066e 0A000000 		.4byte	.LBE112-.LBB112
 1080 0672 03       		.byte	0x3
 1081 0673 3C02     		.2byte	0x23c
 1082 0675 8C060000 		.4byte	0x68c
 1083 0679 2A       		.uleb128 0x2a
 1084 067a AB030000 		.4byte	0x3ab
 1085 067e D1000000 		.4byte	.LLST6
 1086 0682 2B       		.uleb128 0x2b
 1087 0683 E6000000 		.4byte	.LVL14
 1088 0687 18090000 		.4byte	0x918
 1089 068b 00       		.byte	0
 1090 068c 29       		.uleb128 0x29
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 46


 1091 068d C0030000 		.4byte	0x3c0
 1092 0691 E8000000 		.4byte	.LBB114
 1093 0695 04000000 		.4byte	.LBE114-.LBB114
 1094 0699 03       		.byte	0x3
 1095 069a 3F02     		.2byte	0x23f
 1096 069c B3060000 		.4byte	0x6b3
 1097 06a0 2A       		.uleb128 0x2a
 1098 06a1 CC030000 		.4byte	0x3cc
 1099 06a5 E4000000 		.4byte	.LLST7
 1100 06a9 2B       		.uleb128 0x2b
 1101 06aa EC000000 		.4byte	.LVL16
 1102 06ae 18090000 		.4byte	0x918
 1103 06b2 00       		.byte	0
 1104 06b3 2B       		.uleb128 0x2b
 1105 06b4 CE000000 		.4byte	.LVL11
 1106 06b8 23090000 		.4byte	0x923
 1107 06bc 00       		.byte	0
 1108 06bd 00       		.byte	0
 1109 06be 2B       		.uleb128 0x2b
 1110 06bf 7A000000 		.4byte	.LVL6
 1111 06c3 2F090000 		.4byte	0x92f
 1112 06c7 00       		.byte	0
 1113 06c8 00       		.byte	0
 1114 06c9 1F       		.uleb128 0x1f
 1115 06ca 46040000 		.4byte	0x446
 1116 06ce 08010000 		.4byte	.LBB116
 1117 06d2 04000000 		.4byte	.LBE116-.LBB116
 1118 06d6 01       		.byte	0x1
 1119 06d7 BC       		.byte	0xbc
 1120 06d8 FF060000 		.4byte	0x6ff
 1121 06dc 2A       		.uleb128 0x2a
 1122 06dd 52040000 		.4byte	0x452
 1123 06e1 F7000000 		.4byte	.LLST8
 1124 06e5 20       		.uleb128 0x20
 1125 06e6 0D030000 		.4byte	0x30d
 1126 06ea 08010000 		.4byte	.LBB117
 1127 06ee 04000000 		.4byte	.LBE117-.LBB117
 1128 06f2 0B       		.byte	0xb
 1129 06f3 6A       		.byte	0x6a
 1130 06f4 2A       		.uleb128 0x2a
 1131 06f5 19030000 		.4byte	0x319
 1132 06f9 F7000000 		.4byte	.LLST8
 1133 06fd 00       		.byte	0
 1134 06fe 00       		.byte	0
 1135 06ff 27       		.uleb128 0x27
 1136 0700 18000000 		.4byte	.LVL4
 1137 0704 0C090000 		.4byte	0x90c
 1138 0708 28       		.uleb128 0x28
 1139 0709 01       		.uleb128 0x1
 1140 070a 50       		.byte	0x50
 1141 070b 02       		.uleb128 0x2
 1142 070c 08       		.byte	0x8
 1143 070d CD       		.byte	0xcd
 1144 070e 28       		.uleb128 0x28
 1145 070f 01       		.uleb128 0x1
 1146 0710 51       		.byte	0x51
 1147 0711 02       		.uleb128 0x2
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 47


 1148 0712 74       		.byte	0x74
 1149 0713 01       		.sleb128 1
 1150 0714 28       		.uleb128 0x28
 1151 0715 01       		.uleb128 0x1
 1152 0716 52       		.byte	0x52
 1153 0717 02       		.uleb128 0x2
 1154 0718 75       		.byte	0x75
 1155 0719 00       		.sleb128 0
 1156 071a 00       		.byte	0
 1157 071b 00       		.byte	0
 1158 071c 2C       		.uleb128 0x2c
 1159 071d A8050000 		.4byte	.LASF91
 1160 0721 04       		.byte	0x4
 1161 0722 44       		.byte	0x44
 1162 0723 BF000000 		.4byte	0xbf
 1163 0727 2C       		.uleb128 0x2c
 1164 0728 F0060000 		.4byte	.LASF92
 1165 072c 05       		.byte	0x5
 1166 072d 48       		.byte	0x48
 1167 072e E0000000 		.4byte	0xe0
 1168 0732 2D       		.uleb128 0x2d
 1169 0733 42070000 		.4byte	0x742
 1170 0737 42070000 		.4byte	0x742
 1171 073b 2E       		.uleb128 0x2e
 1172 073c EA020000 		.4byte	0x2ea
 1173 0740 05       		.byte	0x5
 1174 0741 00       		.byte	0
 1175 0742 2F       		.uleb128 0x2f
 1176 0743 BF000000 		.4byte	0xbf
 1177 0747 2C       		.uleb128 0x2c
 1178 0748 8C050000 		.4byte	.LASF93
 1179 074c 08       		.byte	0x8
 1180 074d B2       		.byte	0xb2
 1181 074e 52070000 		.4byte	0x752
 1182 0752 2F       		.uleb128 0x2f
 1183 0753 32070000 		.4byte	0x732
 1184 0757 2C       		.uleb128 0x2c
 1185 0758 7F000000 		.4byte	.LASF94
 1186 075c 08       		.byte	0x8
 1187 075d B3       		.byte	0xb3
 1188 075e 62070000 		.4byte	0x762
 1189 0762 2F       		.uleb128 0x2f
 1190 0763 32070000 		.4byte	0x732
 1191 0767 2D       		.uleb128 0x2d
 1192 0768 BF000000 		.4byte	0xbf
 1193 076c 77070000 		.4byte	0x777
 1194 0770 2E       		.uleb128 0x2e
 1195 0771 EA020000 		.4byte	0x2ea
 1196 0775 05       		.byte	0x5
 1197 0776 00       		.byte	0
 1198 0777 2C       		.uleb128 0x2c
 1199 0778 B0070000 		.4byte	.LASF95
 1200 077c 08       		.byte	0x8
 1201 077d CA       		.byte	0xca
 1202 077e 67070000 		.4byte	0x767
 1203 0782 2D       		.uleb128 0x2d
 1204 0783 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 48


 1205 0787 92070000 		.4byte	0x792
 1206 078b 2E       		.uleb128 0x2e
 1207 078c EA020000 		.4byte	0x2ea
 1208 0790 05       		.byte	0x5
 1209 0791 00       		.byte	0
 1210 0792 2C       		.uleb128 0x2c
 1211 0793 34000000 		.4byte	.LASF96
 1212 0797 08       		.byte	0x8
 1213 0798 D2       		.byte	0xd2
 1214 0799 82070000 		.4byte	0x782
 1215 079d 2C       		.uleb128 0x2c
 1216 079e A4070000 		.4byte	.LASF97
 1217 07a2 08       		.byte	0x8
 1218 07a3 DA       		.byte	0xda
 1219 07a4 67070000 		.4byte	0x767
 1220 07a8 2C       		.uleb128 0x2c
 1221 07a9 1E050000 		.4byte	.LASF98
 1222 07ad 08       		.byte	0x8
 1223 07ae E2       		.byte	0xe2
 1224 07af E0000000 		.4byte	0xe0
 1225 07b3 2C       		.uleb128 0x2c
 1226 07b4 D1050000 		.4byte	.LASF99
 1227 07b8 08       		.byte	0x8
 1228 07b9 F7       		.byte	0xf7
 1229 07ba BF000000 		.4byte	0xbf
 1230 07be 30       		.uleb128 0x30
 1231 07bf 6D080000 		.4byte	.LASF100
 1232 07c3 08       		.byte	0x8
 1233 07c4 3F01     		.2byte	0x13f
 1234 07c6 EB000000 		.4byte	0xeb
 1235 07ca 30       		.uleb128 0x30
 1236 07cb 79050000 		.4byte	.LASF101
 1237 07cf 08       		.byte	0x8
 1238 07d0 5C01     		.2byte	0x15c
 1239 07d2 67070000 		.4byte	0x767
 1240 07d6 30       		.uleb128 0x30
 1241 07d7 F6010000 		.4byte	.LASF102
 1242 07db 08       		.byte	0x8
 1243 07dc 6101     		.2byte	0x161
 1244 07de 67070000 		.4byte	0x767
 1245 07e2 2D       		.uleb128 0x2d
 1246 07e3 D5000000 		.4byte	0xd5
 1247 07e7 F2070000 		.4byte	0x7f2
 1248 07eb 2E       		.uleb128 0x2e
 1249 07ec EA020000 		.4byte	0x2ea
 1250 07f0 05       		.byte	0x5
 1251 07f1 00       		.byte	0
 1252 07f2 30       		.uleb128 0x30
 1253 07f3 5C080000 		.4byte	.LASF103
 1254 07f7 08       		.byte	0x8
 1255 07f8 6701     		.2byte	0x167
 1256 07fa E2070000 		.4byte	0x7e2
 1257 07fe 2D       		.uleb128 0x2d
 1258 07ff 0E080000 		.4byte	0x80e
 1259 0803 0E080000 		.4byte	0x80e
 1260 0807 2E       		.uleb128 0x2e
 1261 0808 EA020000 		.4byte	0x2ea
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 49


 1262 080c 05       		.byte	0x5
 1263 080d 00       		.byte	0
 1264 080e 2F       		.uleb128 0x2f
 1265 080f D5000000 		.4byte	0xd5
 1266 0813 30       		.uleb128 0x30
 1267 0814 7F040000 		.4byte	.LASF104
 1268 0818 08       		.byte	0x8
 1269 0819 7401     		.2byte	0x174
 1270 081b 1F080000 		.4byte	0x81f
 1271 081f 2F       		.uleb128 0x2f
 1272 0820 FE070000 		.4byte	0x7fe
 1273 0824 30       		.uleb128 0x30
 1274 0825 9F010000 		.4byte	.LASF105
 1275 0829 08       		.byte	0x8
 1276 082a BA01     		.2byte	0x1ba
 1277 082c 67070000 		.4byte	0x767
 1278 0830 2D       		.uleb128 0x2d
 1279 0831 40080000 		.4byte	0x840
 1280 0835 40080000 		.4byte	0x840
 1281 0839 2E       		.uleb128 0x2e
 1282 083a EA020000 		.4byte	0x2ea
 1283 083e 00       		.byte	0
 1284 083f 00       		.byte	0
 1285 0840 2F       		.uleb128 0x2f
 1286 0841 64010000 		.4byte	0x164
 1287 0845 30       		.uleb128 0x30
 1288 0846 95070000 		.4byte	.LASF106
 1289 084a 08       		.byte	0x8
 1290 084b CA02     		.2byte	0x2ca
 1291 084d 51080000 		.4byte	0x851
 1292 0851 2F       		.uleb128 0x2f
 1293 0852 30080000 		.4byte	0x830
 1294 0856 2D       		.uleb128 0x2d
 1295 0857 66080000 		.4byte	0x866
 1296 085b 66080000 		.4byte	0x866
 1297 085f 2E       		.uleb128 0x2e
 1298 0860 EA020000 		.4byte	0x2ea
 1299 0864 02       		.byte	0x2
 1300 0865 00       		.byte	0
 1301 0866 2F       		.uleb128 0x2f
 1302 0867 01020000 		.4byte	0x201
 1303 086b 30       		.uleb128 0x30
 1304 086c 2D020000 		.4byte	.LASF107
 1305 0870 08       		.byte	0x8
 1306 0871 DD02     		.2byte	0x2dd
 1307 0873 77080000 		.4byte	0x877
 1308 0877 2F       		.uleb128 0x2f
 1309 0878 56080000 		.4byte	0x856
 1310 087c 2D       		.uleb128 0x2d
 1311 087d 94010000 		.4byte	0x194
 1312 0881 8C080000 		.4byte	0x88c
 1313 0885 2E       		.uleb128 0x2e
 1314 0886 EA020000 		.4byte	0x2ea
 1315 088a 00       		.byte	0
 1316 088b 00       		.byte	0
 1317 088c 30       		.uleb128 0x30
 1318 088d 25000000 		.4byte	.LASF108
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 50


 1319 0891 08       		.byte	0x8
 1320 0892 FB02     		.2byte	0x2fb
 1321 0894 7C080000 		.4byte	0x87c
 1322 0898 2D       		.uleb128 0x2d
 1323 0899 4B020000 		.4byte	0x24b
 1324 089d A8080000 		.4byte	0x8a8
 1325 08a1 2E       		.uleb128 0x2e
 1326 08a2 EA020000 		.4byte	0x2ea
 1327 08a6 02       		.byte	0x2
 1328 08a7 00       		.byte	0
 1329 08a8 30       		.uleb128 0x30
 1330 08a9 5C030000 		.4byte	.LASF109
 1331 08ad 08       		.byte	0x8
 1332 08ae 0403     		.2byte	0x304
 1333 08b0 98080000 		.4byte	0x898
 1334 08b4 2C       		.uleb128 0x2c
 1335 08b5 D8030000 		.4byte	.LASF110
 1336 08b9 0C       		.byte	0xc
 1337 08ba 40       		.byte	0x40
 1338 08bb BF000000 		.4byte	0xbf
 1339 08bf 2C       		.uleb128 0x2c
 1340 08c0 36070000 		.4byte	.LASF111
 1341 08c4 0C       		.byte	0xc
 1342 08c5 47       		.byte	0x47
 1343 08c6 CA000000 		.4byte	0xca
 1344 08ca 2C       		.uleb128 0x2c
 1345 08cb 4C020000 		.4byte	.LASF112
 1346 08cf 0C       		.byte	0xc
 1347 08d0 4A       		.byte	0x4a
 1348 08d1 BF000000 		.4byte	0xbf
 1349 08d5 30       		.uleb128 0x30
 1350 08d6 3C050000 		.4byte	.LASF113
 1351 08da 0D       		.byte	0xd
 1352 08db 1207     		.2byte	0x712
 1353 08dd E1080000 		.4byte	0x8e1
 1354 08e1 31       		.uleb128 0x31
 1355 08e2 BF020000 		.4byte	0x2bf
 1356 08e6 2D       		.uleb128 0x2d
 1357 08e7 F6080000 		.4byte	0x8f6
 1358 08eb F6080000 		.4byte	0x8f6
 1359 08ef 2E       		.uleb128 0x2e
 1360 08f0 EA020000 		.4byte	0x2ea
 1361 08f4 FF       		.byte	0xff
 1362 08f5 00       		.byte	0
 1363 08f6 2F       		.uleb128 0x2f
 1364 08f7 93000000 		.4byte	0x93
 1365 08fb 30       		.uleb128 0x30
 1366 08fc DF040000 		.4byte	.LASF114
 1367 0900 03       		.byte	0x3
 1368 0901 AB01     		.2byte	0x1ab
 1369 0903 07090000 		.4byte	0x907
 1370 0907 2F       		.uleb128 0x2f
 1371 0908 E6080000 		.4byte	0x8e6
 1372 090c 32       		.uleb128 0x32
 1373 090d 7B080000 		.4byte	.LASF115
 1374 0911 7B080000 		.4byte	.LASF115
 1375 0915 03       		.byte	0x3
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 51


 1376 0916 B102     		.2byte	0x2b1
 1377 0918 33       		.uleb128 0x33
 1378 0919 34010000 		.4byte	.LASF116
 1379 091d 34010000 		.4byte	.LASF116
 1380 0921 05       		.byte	0x5
 1381 0922 4F       		.byte	0x4f
 1382 0923 32       		.uleb128 0x32
 1383 0924 8F080000 		.4byte	.LASF117
 1384 0928 8F080000 		.4byte	.LASF117
 1385 092c 03       		.byte	0x3
 1386 092d E901     		.2byte	0x1e9
 1387 092f 32       		.uleb128 0x32
 1388 0930 49050000 		.4byte	.LASF118
 1389 0934 49050000 		.4byte	.LASF118
 1390 0938 03       		.byte	0x3
 1391 0939 CB01     		.2byte	0x1cb
 1392 093b 00       		.byte	0
 1393              		.section	.debug_abbrev,"",%progbits
 1394              	.Ldebug_abbrev0:
 1395 0000 01       		.uleb128 0x1
 1396 0001 11       		.uleb128 0x11
 1397 0002 01       		.byte	0x1
 1398 0003 25       		.uleb128 0x25
 1399 0004 0E       		.uleb128 0xe
 1400 0005 13       		.uleb128 0x13
 1401 0006 0B       		.uleb128 0xb
 1402 0007 03       		.uleb128 0x3
 1403 0008 0E       		.uleb128 0xe
 1404 0009 1B       		.uleb128 0x1b
 1405 000a 0E       		.uleb128 0xe
 1406 000b 55       		.uleb128 0x55
 1407 000c 17       		.uleb128 0x17
 1408 000d 11       		.uleb128 0x11
 1409 000e 01       		.uleb128 0x1
 1410 000f 10       		.uleb128 0x10
 1411 0010 17       		.uleb128 0x17
 1412 0011 00       		.byte	0
 1413 0012 00       		.byte	0
 1414 0013 02       		.uleb128 0x2
 1415 0014 24       		.uleb128 0x24
 1416 0015 00       		.byte	0
 1417 0016 0B       		.uleb128 0xb
 1418 0017 0B       		.uleb128 0xb
 1419 0018 3E       		.uleb128 0x3e
 1420 0019 0B       		.uleb128 0xb
 1421 001a 03       		.uleb128 0x3
 1422 001b 0E       		.uleb128 0xe
 1423 001c 00       		.byte	0
 1424 001d 00       		.byte	0
 1425 001e 03       		.uleb128 0x3
 1426 001f 16       		.uleb128 0x16
 1427 0020 00       		.byte	0
 1428 0021 03       		.uleb128 0x3
 1429 0022 0E       		.uleb128 0xe
 1430 0023 3A       		.uleb128 0x3a
 1431 0024 0B       		.uleb128 0xb
 1432 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 52


 1433 0026 0B       		.uleb128 0xb
 1434 0027 49       		.uleb128 0x49
 1435 0028 13       		.uleb128 0x13
 1436 0029 00       		.byte	0
 1437 002a 00       		.byte	0
 1438 002b 04       		.uleb128 0x4
 1439 002c 24       		.uleb128 0x24
 1440 002d 00       		.byte	0
 1441 002e 0B       		.uleb128 0xb
 1442 002f 0B       		.uleb128 0xb
 1443 0030 3E       		.uleb128 0x3e
 1444 0031 0B       		.uleb128 0xb
 1445 0032 03       		.uleb128 0x3
 1446 0033 08       		.uleb128 0x8
 1447 0034 00       		.byte	0
 1448 0035 00       		.byte	0
 1449 0036 05       		.uleb128 0x5
 1450 0037 16       		.uleb128 0x16
 1451 0038 00       		.byte	0
 1452 0039 03       		.uleb128 0x3
 1453 003a 0E       		.uleb128 0xe
 1454 003b 3A       		.uleb128 0x3a
 1455 003c 0B       		.uleb128 0xb
 1456 003d 3B       		.uleb128 0x3b
 1457 003e 05       		.uleb128 0x5
 1458 003f 49       		.uleb128 0x49
 1459 0040 13       		.uleb128 0x13
 1460 0041 00       		.byte	0
 1461 0042 00       		.byte	0
 1462 0043 06       		.uleb128 0x6
 1463 0044 13       		.uleb128 0x13
 1464 0045 01       		.byte	0x1
 1465 0046 0B       		.uleb128 0xb
 1466 0047 0B       		.uleb128 0xb
 1467 0048 3A       		.uleb128 0x3a
 1468 0049 0B       		.uleb128 0xb
 1469 004a 3B       		.uleb128 0x3b
 1470 004b 05       		.uleb128 0x5
 1471 004c 01       		.uleb128 0x1
 1472 004d 13       		.uleb128 0x13
 1473 004e 00       		.byte	0
 1474 004f 00       		.byte	0
 1475 0050 07       		.uleb128 0x7
 1476 0051 0D       		.uleb128 0xd
 1477 0052 00       		.byte	0
 1478 0053 03       		.uleb128 0x3
 1479 0054 0E       		.uleb128 0xe
 1480 0055 3A       		.uleb128 0x3a
 1481 0056 0B       		.uleb128 0xb
 1482 0057 3B       		.uleb128 0x3b
 1483 0058 05       		.uleb128 0x5
 1484 0059 49       		.uleb128 0x49
 1485 005a 13       		.uleb128 0x13
 1486 005b 38       		.uleb128 0x38
 1487 005c 0B       		.uleb128 0xb
 1488 005d 00       		.byte	0
 1489 005e 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 53


 1490 005f 08       		.uleb128 0x8
 1491 0060 04       		.uleb128 0x4
 1492 0061 01       		.byte	0x1
 1493 0062 0B       		.uleb128 0xb
 1494 0063 0B       		.uleb128 0xb
 1495 0064 49       		.uleb128 0x49
 1496 0065 13       		.uleb128 0x13
 1497 0066 3A       		.uleb128 0x3a
 1498 0067 0B       		.uleb128 0xb
 1499 0068 3B       		.uleb128 0x3b
 1500 0069 05       		.uleb128 0x5
 1501 006a 01       		.uleb128 0x1
 1502 006b 13       		.uleb128 0x13
 1503 006c 00       		.byte	0
 1504 006d 00       		.byte	0
 1505 006e 09       		.uleb128 0x9
 1506 006f 28       		.uleb128 0x28
 1507 0070 00       		.byte	0
 1508 0071 03       		.uleb128 0x3
 1509 0072 0E       		.uleb128 0xe
 1510 0073 1C       		.uleb128 0x1c
 1511 0074 0B       		.uleb128 0xb
 1512 0075 00       		.byte	0
 1513 0076 00       		.byte	0
 1514 0077 0A       		.uleb128 0xa
 1515 0078 0D       		.uleb128 0xd
 1516 0079 00       		.byte	0
 1517 007a 03       		.uleb128 0x3
 1518 007b 08       		.uleb128 0x8
 1519 007c 3A       		.uleb128 0x3a
 1520 007d 0B       		.uleb128 0xb
 1521 007e 3B       		.uleb128 0x3b
 1522 007f 05       		.uleb128 0x5
 1523 0080 49       		.uleb128 0x49
 1524 0081 13       		.uleb128 0x13
 1525 0082 38       		.uleb128 0x38
 1526 0083 0B       		.uleb128 0xb
 1527 0084 00       		.byte	0
 1528 0085 00       		.byte	0
 1529 0086 0B       		.uleb128 0xb
 1530 0087 2E       		.uleb128 0x2e
 1531 0088 01       		.byte	0x1
 1532 0089 03       		.uleb128 0x3
 1533 008a 0E       		.uleb128 0xe
 1534 008b 3A       		.uleb128 0x3a
 1535 008c 0B       		.uleb128 0xb
 1536 008d 3B       		.uleb128 0x3b
 1537 008e 0B       		.uleb128 0xb
 1538 008f 27       		.uleb128 0x27
 1539 0090 19       		.uleb128 0x19
 1540 0091 49       		.uleb128 0x49
 1541 0092 13       		.uleb128 0x13
 1542 0093 20       		.uleb128 0x20
 1543 0094 0B       		.uleb128 0xb
 1544 0095 01       		.uleb128 0x1
 1545 0096 13       		.uleb128 0x13
 1546 0097 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 54


 1547 0098 00       		.byte	0
 1548 0099 0C       		.uleb128 0xc
 1549 009a 34       		.uleb128 0x34
 1550 009b 00       		.byte	0
 1551 009c 03       		.uleb128 0x3
 1552 009d 0E       		.uleb128 0xe
 1553 009e 3A       		.uleb128 0x3a
 1554 009f 0B       		.uleb128 0xb
 1555 00a0 3B       		.uleb128 0x3b
 1556 00a1 0B       		.uleb128 0xb
 1557 00a2 49       		.uleb128 0x49
 1558 00a3 13       		.uleb128 0x13
 1559 00a4 00       		.byte	0
 1560 00a5 00       		.byte	0
 1561 00a6 0D       		.uleb128 0xd
 1562 00a7 2E       		.uleb128 0x2e
 1563 00a8 01       		.byte	0x1
 1564 00a9 03       		.uleb128 0x3
 1565 00aa 0E       		.uleb128 0xe
 1566 00ab 3A       		.uleb128 0x3a
 1567 00ac 0B       		.uleb128 0xb
 1568 00ad 3B       		.uleb128 0x3b
 1569 00ae 0B       		.uleb128 0xb
 1570 00af 27       		.uleb128 0x27
 1571 00b0 19       		.uleb128 0x19
 1572 00b1 20       		.uleb128 0x20
 1573 00b2 0B       		.uleb128 0xb
 1574 00b3 01       		.uleb128 0x1
 1575 00b4 13       		.uleb128 0x13
 1576 00b5 00       		.byte	0
 1577 00b6 00       		.byte	0
 1578 00b7 0E       		.uleb128 0xe
 1579 00b8 05       		.uleb128 0x5
 1580 00b9 00       		.byte	0
 1581 00ba 03       		.uleb128 0x3
 1582 00bb 08       		.uleb128 0x8
 1583 00bc 3A       		.uleb128 0x3a
 1584 00bd 0B       		.uleb128 0xb
 1585 00be 3B       		.uleb128 0x3b
 1586 00bf 0B       		.uleb128 0xb
 1587 00c0 49       		.uleb128 0x49
 1588 00c1 13       		.uleb128 0x13
 1589 00c2 00       		.byte	0
 1590 00c3 00       		.byte	0
 1591 00c4 0F       		.uleb128 0xf
 1592 00c5 2E       		.uleb128 0x2e
 1593 00c6 01       		.byte	0x1
 1594 00c7 03       		.uleb128 0x3
 1595 00c8 0E       		.uleb128 0xe
 1596 00c9 3A       		.uleb128 0x3a
 1597 00ca 0B       		.uleb128 0xb
 1598 00cb 3B       		.uleb128 0x3b
 1599 00cc 05       		.uleb128 0x5
 1600 00cd 27       		.uleb128 0x27
 1601 00ce 19       		.uleb128 0x19
 1602 00cf 20       		.uleb128 0x20
 1603 00d0 0B       		.uleb128 0xb
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 55


 1604 00d1 01       		.uleb128 0x1
 1605 00d2 13       		.uleb128 0x13
 1606 00d3 00       		.byte	0
 1607 00d4 00       		.byte	0
 1608 00d5 10       		.uleb128 0x10
 1609 00d6 05       		.uleb128 0x5
 1610 00d7 00       		.byte	0
 1611 00d8 03       		.uleb128 0x3
 1612 00d9 08       		.uleb128 0x8
 1613 00da 3A       		.uleb128 0x3a
 1614 00db 0B       		.uleb128 0xb
 1615 00dc 3B       		.uleb128 0x3b
 1616 00dd 05       		.uleb128 0x5
 1617 00de 49       		.uleb128 0x49
 1618 00df 13       		.uleb128 0x13
 1619 00e0 00       		.byte	0
 1620 00e1 00       		.byte	0
 1621 00e2 11       		.uleb128 0x11
 1622 00e3 2E       		.uleb128 0x2e
 1623 00e4 00       		.byte	0
 1624 00e5 03       		.uleb128 0x3
 1625 00e6 0E       		.uleb128 0xe
 1626 00e7 3A       		.uleb128 0x3a
 1627 00e8 0B       		.uleb128 0xb
 1628 00e9 3B       		.uleb128 0x3b
 1629 00ea 05       		.uleb128 0x5
 1630 00eb 27       		.uleb128 0x27
 1631 00ec 19       		.uleb128 0x19
 1632 00ed 49       		.uleb128 0x49
 1633 00ee 13       		.uleb128 0x13
 1634 00ef 20       		.uleb128 0x20
 1635 00f0 0B       		.uleb128 0xb
 1636 00f1 00       		.byte	0
 1637 00f2 00       		.byte	0
 1638 00f3 12       		.uleb128 0x12
 1639 00f4 05       		.uleb128 0x5
 1640 00f5 00       		.byte	0
 1641 00f6 03       		.uleb128 0x3
 1642 00f7 0E       		.uleb128 0xe
 1643 00f8 3A       		.uleb128 0x3a
 1644 00f9 0B       		.uleb128 0xb
 1645 00fa 3B       		.uleb128 0x3b
 1646 00fb 05       		.uleb128 0x5
 1647 00fc 49       		.uleb128 0x49
 1648 00fd 13       		.uleb128 0x13
 1649 00fe 00       		.byte	0
 1650 00ff 00       		.byte	0
 1651 0100 13       		.uleb128 0x13
 1652 0101 2E       		.uleb128 0x2e
 1653 0102 00       		.byte	0
 1654 0103 03       		.uleb128 0x3
 1655 0104 0E       		.uleb128 0xe
 1656 0105 3A       		.uleb128 0x3a
 1657 0106 0B       		.uleb128 0xb
 1658 0107 3B       		.uleb128 0x3b
 1659 0108 05       		.uleb128 0x5
 1660 0109 27       		.uleb128 0x27
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 56


 1661 010a 19       		.uleb128 0x19
 1662 010b 20       		.uleb128 0x20
 1663 010c 0B       		.uleb128 0xb
 1664 010d 00       		.byte	0
 1665 010e 00       		.byte	0
 1666 010f 14       		.uleb128 0x14
 1667 0110 2E       		.uleb128 0x2e
 1668 0111 00       		.byte	0
 1669 0112 03       		.uleb128 0x3
 1670 0113 0E       		.uleb128 0xe
 1671 0114 3A       		.uleb128 0x3a
 1672 0115 0B       		.uleb128 0xb
 1673 0116 3B       		.uleb128 0x3b
 1674 0117 0B       		.uleb128 0xb
 1675 0118 27       		.uleb128 0x27
 1676 0119 19       		.uleb128 0x19
 1677 011a 49       		.uleb128 0x49
 1678 011b 13       		.uleb128 0x13
 1679 011c 20       		.uleb128 0x20
 1680 011d 0B       		.uleb128 0xb
 1681 011e 00       		.byte	0
 1682 011f 00       		.byte	0
 1683 0120 15       		.uleb128 0x15
 1684 0121 34       		.uleb128 0x34
 1685 0122 00       		.byte	0
 1686 0123 03       		.uleb128 0x3
 1687 0124 0E       		.uleb128 0xe
 1688 0125 3A       		.uleb128 0x3a
 1689 0126 0B       		.uleb128 0xb
 1690 0127 3B       		.uleb128 0x3b
 1691 0128 05       		.uleb128 0x5
 1692 0129 49       		.uleb128 0x49
 1693 012a 13       		.uleb128 0x13
 1694 012b 00       		.byte	0
 1695 012c 00       		.byte	0
 1696 012d 16       		.uleb128 0x16
 1697 012e 0B       		.uleb128 0xb
 1698 012f 01       		.byte	0x1
 1699 0130 00       		.byte	0
 1700 0131 00       		.byte	0
 1701 0132 17       		.uleb128 0x17
 1702 0133 2E       		.uleb128 0x2e
 1703 0134 01       		.byte	0x1
 1704 0135 3F       		.uleb128 0x3f
 1705 0136 19       		.uleb128 0x19
 1706 0137 03       		.uleb128 0x3
 1707 0138 0E       		.uleb128 0xe
 1708 0139 3A       		.uleb128 0x3a
 1709 013a 0B       		.uleb128 0xb
 1710 013b 3B       		.uleb128 0x3b
 1711 013c 05       		.uleb128 0x5
 1712 013d 49       		.uleb128 0x49
 1713 013e 13       		.uleb128 0x13
 1714 013f 20       		.uleb128 0x20
 1715 0140 0B       		.uleb128 0xb
 1716 0141 00       		.byte	0
 1717 0142 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 57


 1718 0143 18       		.uleb128 0x18
 1719 0144 18       		.uleb128 0x18
 1720 0145 00       		.byte	0
 1721 0146 00       		.byte	0
 1722 0147 00       		.byte	0
 1723 0148 19       		.uleb128 0x19
 1724 0149 34       		.uleb128 0x34
 1725 014a 00       		.byte	0
 1726 014b 03       		.uleb128 0x3
 1727 014c 08       		.uleb128 0x8
 1728 014d 3A       		.uleb128 0x3a
 1729 014e 0B       		.uleb128 0xb
 1730 014f 3B       		.uleb128 0x3b
 1731 0150 05       		.uleb128 0x5
 1732 0151 49       		.uleb128 0x49
 1733 0152 13       		.uleb128 0x13
 1734 0153 00       		.byte	0
 1735 0154 00       		.byte	0
 1736 0155 1A       		.uleb128 0x1a
 1737 0156 2E       		.uleb128 0x2e
 1738 0157 01       		.byte	0x1
 1739 0158 3F       		.uleb128 0x3f
 1740 0159 19       		.uleb128 0x19
 1741 015a 03       		.uleb128 0x3
 1742 015b 0E       		.uleb128 0xe
 1743 015c 3A       		.uleb128 0x3a
 1744 015d 0B       		.uleb128 0xb
 1745 015e 3B       		.uleb128 0x3b
 1746 015f 0B       		.uleb128 0xb
 1747 0160 27       		.uleb128 0x27
 1748 0161 19       		.uleb128 0x19
 1749 0162 49       		.uleb128 0x49
 1750 0163 13       		.uleb128 0x13
 1751 0164 11       		.uleb128 0x11
 1752 0165 01       		.uleb128 0x1
 1753 0166 12       		.uleb128 0x12
 1754 0167 06       		.uleb128 0x6
 1755 0168 40       		.uleb128 0x40
 1756 0169 18       		.uleb128 0x18
 1757 016a 9742     		.uleb128 0x2117
 1758 016c 19       		.uleb128 0x19
 1759 016d 01       		.uleb128 0x1
 1760 016e 13       		.uleb128 0x13
 1761 016f 00       		.byte	0
 1762 0170 00       		.byte	0
 1763 0171 1B       		.uleb128 0x1b
 1764 0172 05       		.uleb128 0x5
 1765 0173 00       		.byte	0
 1766 0174 03       		.uleb128 0x3
 1767 0175 0E       		.uleb128 0xe
 1768 0176 3A       		.uleb128 0x3a
 1769 0177 0B       		.uleb128 0xb
 1770 0178 3B       		.uleb128 0x3b
 1771 0179 0B       		.uleb128 0xb
 1772 017a 49       		.uleb128 0x49
 1773 017b 13       		.uleb128 0x13
 1774 017c 02       		.uleb128 0x2
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 58


 1775 017d 17       		.uleb128 0x17
 1776 017e 00       		.byte	0
 1777 017f 00       		.byte	0
 1778 0180 1C       		.uleb128 0x1c
 1779 0181 34       		.uleb128 0x34
 1780 0182 00       		.byte	0
 1781 0183 03       		.uleb128 0x3
 1782 0184 08       		.uleb128 0x8
 1783 0185 3A       		.uleb128 0x3a
 1784 0186 0B       		.uleb128 0xb
 1785 0187 3B       		.uleb128 0x3b
 1786 0188 0B       		.uleb128 0xb
 1787 0189 49       		.uleb128 0x49
 1788 018a 13       		.uleb128 0x13
 1789 018b 02       		.uleb128 0x2
 1790 018c 17       		.uleb128 0x17
 1791 018d 00       		.byte	0
 1792 018e 00       		.byte	0
 1793 018f 1D       		.uleb128 0x1d
 1794 0190 34       		.uleb128 0x34
 1795 0191 00       		.byte	0
 1796 0192 03       		.uleb128 0x3
 1797 0193 0E       		.uleb128 0xe
 1798 0194 3A       		.uleb128 0x3a
 1799 0195 0B       		.uleb128 0xb
 1800 0196 3B       		.uleb128 0x3b
 1801 0197 0B       		.uleb128 0xb
 1802 0198 49       		.uleb128 0x49
 1803 0199 13       		.uleb128 0x13
 1804 019a 02       		.uleb128 0x2
 1805 019b 18       		.uleb128 0x18
 1806 019c 00       		.byte	0
 1807 019d 00       		.byte	0
 1808 019e 1E       		.uleb128 0x1e
 1809 019f 2E       		.uleb128 0x2e
 1810 01a0 01       		.byte	0x1
 1811 01a1 3F       		.uleb128 0x3f
 1812 01a2 19       		.uleb128 0x19
 1813 01a3 03       		.uleb128 0x3
 1814 01a4 0E       		.uleb128 0xe
 1815 01a5 3A       		.uleb128 0x3a
 1816 01a6 0B       		.uleb128 0xb
 1817 01a7 3B       		.uleb128 0x3b
 1818 01a8 05       		.uleb128 0x5
 1819 01a9 49       		.uleb128 0x49
 1820 01aa 13       		.uleb128 0x13
 1821 01ab 3C       		.uleb128 0x3c
 1822 01ac 19       		.uleb128 0x19
 1823 01ad 01       		.uleb128 0x1
 1824 01ae 13       		.uleb128 0x13
 1825 01af 00       		.byte	0
 1826 01b0 00       		.byte	0
 1827 01b1 1F       		.uleb128 0x1f
 1828 01b2 1D       		.uleb128 0x1d
 1829 01b3 01       		.byte	0x1
 1830 01b4 31       		.uleb128 0x31
 1831 01b5 13       		.uleb128 0x13
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 59


 1832 01b6 11       		.uleb128 0x11
 1833 01b7 01       		.uleb128 0x1
 1834 01b8 12       		.uleb128 0x12
 1835 01b9 06       		.uleb128 0x6
 1836 01ba 58       		.uleb128 0x58
 1837 01bb 0B       		.uleb128 0xb
 1838 01bc 59       		.uleb128 0x59
 1839 01bd 0B       		.uleb128 0xb
 1840 01be 01       		.uleb128 0x1
 1841 01bf 13       		.uleb128 0x13
 1842 01c0 00       		.byte	0
 1843 01c1 00       		.byte	0
 1844 01c2 20       		.uleb128 0x20
 1845 01c3 1D       		.uleb128 0x1d
 1846 01c4 01       		.byte	0x1
 1847 01c5 31       		.uleb128 0x31
 1848 01c6 13       		.uleb128 0x13
 1849 01c7 11       		.uleb128 0x11
 1850 01c8 01       		.uleb128 0x1
 1851 01c9 12       		.uleb128 0x12
 1852 01ca 06       		.uleb128 0x6
 1853 01cb 58       		.uleb128 0x58
 1854 01cc 0B       		.uleb128 0xb
 1855 01cd 59       		.uleb128 0x59
 1856 01ce 0B       		.uleb128 0xb
 1857 01cf 00       		.byte	0
 1858 01d0 00       		.byte	0
 1859 01d1 21       		.uleb128 0x21
 1860 01d2 0B       		.uleb128 0xb
 1861 01d3 01       		.byte	0x1
 1862 01d4 11       		.uleb128 0x11
 1863 01d5 01       		.uleb128 0x1
 1864 01d6 12       		.uleb128 0x12
 1865 01d7 06       		.uleb128 0x6
 1866 01d8 00       		.byte	0
 1867 01d9 00       		.byte	0
 1868 01da 22       		.uleb128 0x22
 1869 01db 34       		.uleb128 0x34
 1870 01dc 00       		.byte	0
 1871 01dd 31       		.uleb128 0x31
 1872 01de 13       		.uleb128 0x13
 1873 01df 02       		.uleb128 0x2
 1874 01e0 17       		.uleb128 0x17
 1875 01e1 00       		.byte	0
 1876 01e2 00       		.byte	0
 1877 01e3 23       		.uleb128 0x23
 1878 01e4 1D       		.uleb128 0x1d
 1879 01e5 00       		.byte	0
 1880 01e6 31       		.uleb128 0x31
 1881 01e7 13       		.uleb128 0x13
 1882 01e8 11       		.uleb128 0x11
 1883 01e9 01       		.uleb128 0x1
 1884 01ea 12       		.uleb128 0x12
 1885 01eb 06       		.uleb128 0x6
 1886 01ec 58       		.uleb128 0x58
 1887 01ed 0B       		.uleb128 0xb
 1888 01ee 59       		.uleb128 0x59
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 60


 1889 01ef 0B       		.uleb128 0xb
 1890 01f0 00       		.byte	0
 1891 01f1 00       		.byte	0
 1892 01f2 24       		.uleb128 0x24
 1893 01f3 34       		.uleb128 0x34
 1894 01f4 00       		.byte	0
 1895 01f5 31       		.uleb128 0x31
 1896 01f6 13       		.uleb128 0x13
 1897 01f7 00       		.byte	0
 1898 01f8 00       		.byte	0
 1899 01f9 25       		.uleb128 0x25
 1900 01fa 1D       		.uleb128 0x1d
 1901 01fb 00       		.byte	0
 1902 01fc 31       		.uleb128 0x31
 1903 01fd 13       		.uleb128 0x13
 1904 01fe 11       		.uleb128 0x11
 1905 01ff 01       		.uleb128 0x1
 1906 0200 12       		.uleb128 0x12
 1907 0201 06       		.uleb128 0x6
 1908 0202 58       		.uleb128 0x58
 1909 0203 0B       		.uleb128 0xb
 1910 0204 59       		.uleb128 0x59
 1911 0205 05       		.uleb128 0x5
 1912 0206 00       		.byte	0
 1913 0207 00       		.byte	0
 1914 0208 26       		.uleb128 0x26
 1915 0209 0B       		.uleb128 0xb
 1916 020a 01       		.byte	0x1
 1917 020b 11       		.uleb128 0x11
 1918 020c 01       		.uleb128 0x1
 1919 020d 12       		.uleb128 0x12
 1920 020e 06       		.uleb128 0x6
 1921 020f 01       		.uleb128 0x1
 1922 0210 13       		.uleb128 0x13
 1923 0211 00       		.byte	0
 1924 0212 00       		.byte	0
 1925 0213 27       		.uleb128 0x27
 1926 0214 898201   		.uleb128 0x4109
 1927 0217 01       		.byte	0x1
 1928 0218 11       		.uleb128 0x11
 1929 0219 01       		.uleb128 0x1
 1930 021a 31       		.uleb128 0x31
 1931 021b 13       		.uleb128 0x13
 1932 021c 00       		.byte	0
 1933 021d 00       		.byte	0
 1934 021e 28       		.uleb128 0x28
 1935 021f 8A8201   		.uleb128 0x410a
 1936 0222 00       		.byte	0
 1937 0223 02       		.uleb128 0x2
 1938 0224 18       		.uleb128 0x18
 1939 0225 9142     		.uleb128 0x2111
 1940 0227 18       		.uleb128 0x18
 1941 0228 00       		.byte	0
 1942 0229 00       		.byte	0
 1943 022a 29       		.uleb128 0x29
 1944 022b 1D       		.uleb128 0x1d
 1945 022c 01       		.byte	0x1
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 61


 1946 022d 31       		.uleb128 0x31
 1947 022e 13       		.uleb128 0x13
 1948 022f 11       		.uleb128 0x11
 1949 0230 01       		.uleb128 0x1
 1950 0231 12       		.uleb128 0x12
 1951 0232 06       		.uleb128 0x6
 1952 0233 58       		.uleb128 0x58
 1953 0234 0B       		.uleb128 0xb
 1954 0235 59       		.uleb128 0x59
 1955 0236 05       		.uleb128 0x5
 1956 0237 01       		.uleb128 0x1
 1957 0238 13       		.uleb128 0x13
 1958 0239 00       		.byte	0
 1959 023a 00       		.byte	0
 1960 023b 2A       		.uleb128 0x2a
 1961 023c 05       		.uleb128 0x5
 1962 023d 00       		.byte	0
 1963 023e 31       		.uleb128 0x31
 1964 023f 13       		.uleb128 0x13
 1965 0240 02       		.uleb128 0x2
 1966 0241 17       		.uleb128 0x17
 1967 0242 00       		.byte	0
 1968 0243 00       		.byte	0
 1969 0244 2B       		.uleb128 0x2b
 1970 0245 898201   		.uleb128 0x4109
 1971 0248 00       		.byte	0
 1972 0249 11       		.uleb128 0x11
 1973 024a 01       		.uleb128 0x1
 1974 024b 31       		.uleb128 0x31
 1975 024c 13       		.uleb128 0x13
 1976 024d 00       		.byte	0
 1977 024e 00       		.byte	0
 1978 024f 2C       		.uleb128 0x2c
 1979 0250 34       		.uleb128 0x34
 1980 0251 00       		.byte	0
 1981 0252 03       		.uleb128 0x3
 1982 0253 0E       		.uleb128 0xe
 1983 0254 3A       		.uleb128 0x3a
 1984 0255 0B       		.uleb128 0xb
 1985 0256 3B       		.uleb128 0x3b
 1986 0257 0B       		.uleb128 0xb
 1987 0258 49       		.uleb128 0x49
 1988 0259 13       		.uleb128 0x13
 1989 025a 3F       		.uleb128 0x3f
 1990 025b 19       		.uleb128 0x19
 1991 025c 3C       		.uleb128 0x3c
 1992 025d 19       		.uleb128 0x19
 1993 025e 00       		.byte	0
 1994 025f 00       		.byte	0
 1995 0260 2D       		.uleb128 0x2d
 1996 0261 01       		.uleb128 0x1
 1997 0262 01       		.byte	0x1
 1998 0263 49       		.uleb128 0x49
 1999 0264 13       		.uleb128 0x13
 2000 0265 01       		.uleb128 0x1
 2001 0266 13       		.uleb128 0x13
 2002 0267 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 62


 2003 0268 00       		.byte	0
 2004 0269 2E       		.uleb128 0x2e
 2005 026a 21       		.uleb128 0x21
 2006 026b 00       		.byte	0
 2007 026c 49       		.uleb128 0x49
 2008 026d 13       		.uleb128 0x13
 2009 026e 2F       		.uleb128 0x2f
 2010 026f 0B       		.uleb128 0xb
 2011 0270 00       		.byte	0
 2012 0271 00       		.byte	0
 2013 0272 2F       		.uleb128 0x2f
 2014 0273 26       		.uleb128 0x26
 2015 0274 00       		.byte	0
 2016 0275 49       		.uleb128 0x49
 2017 0276 13       		.uleb128 0x13
 2018 0277 00       		.byte	0
 2019 0278 00       		.byte	0
 2020 0279 30       		.uleb128 0x30
 2021 027a 34       		.uleb128 0x34
 2022 027b 00       		.byte	0
 2023 027c 03       		.uleb128 0x3
 2024 027d 0E       		.uleb128 0xe
 2025 027e 3A       		.uleb128 0x3a
 2026 027f 0B       		.uleb128 0xb
 2027 0280 3B       		.uleb128 0x3b
 2028 0281 05       		.uleb128 0x5
 2029 0282 49       		.uleb128 0x49
 2030 0283 13       		.uleb128 0x13
 2031 0284 3F       		.uleb128 0x3f
 2032 0285 19       		.uleb128 0x19
 2033 0286 3C       		.uleb128 0x3c
 2034 0287 19       		.uleb128 0x19
 2035 0288 00       		.byte	0
 2036 0289 00       		.byte	0
 2037 028a 31       		.uleb128 0x31
 2038 028b 35       		.uleb128 0x35
 2039 028c 00       		.byte	0
 2040 028d 49       		.uleb128 0x49
 2041 028e 13       		.uleb128 0x13
 2042 028f 00       		.byte	0
 2043 0290 00       		.byte	0
 2044 0291 32       		.uleb128 0x32
 2045 0292 2E       		.uleb128 0x2e
 2046 0293 00       		.byte	0
 2047 0294 3F       		.uleb128 0x3f
 2048 0295 19       		.uleb128 0x19
 2049 0296 3C       		.uleb128 0x3c
 2050 0297 19       		.uleb128 0x19
 2051 0298 6E       		.uleb128 0x6e
 2052 0299 0E       		.uleb128 0xe
 2053 029a 03       		.uleb128 0x3
 2054 029b 0E       		.uleb128 0xe
 2055 029c 3A       		.uleb128 0x3a
 2056 029d 0B       		.uleb128 0xb
 2057 029e 3B       		.uleb128 0x3b
 2058 029f 05       		.uleb128 0x5
 2059 02a0 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 63


 2060 02a1 00       		.byte	0
 2061 02a2 33       		.uleb128 0x33
 2062 02a3 2E       		.uleb128 0x2e
 2063 02a4 00       		.byte	0
 2064 02a5 3F       		.uleb128 0x3f
 2065 02a6 19       		.uleb128 0x19
 2066 02a7 3C       		.uleb128 0x3c
 2067 02a8 19       		.uleb128 0x19
 2068 02a9 6E       		.uleb128 0x6e
 2069 02aa 0E       		.uleb128 0xe
 2070 02ab 03       		.uleb128 0x3
 2071 02ac 0E       		.uleb128 0xe
 2072 02ad 3A       		.uleb128 0x3a
 2073 02ae 0B       		.uleb128 0xb
 2074 02af 3B       		.uleb128 0x3b
 2075 02b0 0B       		.uleb128 0xb
 2076 02b1 00       		.byte	0
 2077 02b2 00       		.byte	0
 2078 02b3 00       		.byte	0
 2079              		.section	.debug_loc,"",%progbits
 2080              	.Ldebug_loc0:
 2081              	.LLST0:
 2082 0000 00000000 		.4byte	.LVL0
 2083 0004 14000000 		.4byte	.LVL3
 2084 0008 0100     		.2byte	0x1
 2085 000a 50       		.byte	0x50
 2086 000b 14000000 		.4byte	.LVL3
 2087 000f 17000000 		.4byte	.LVL4-1
 2088 0013 0100     		.2byte	0x1
 2089 0015 52       		.byte	0x52
 2090 0016 17000000 		.4byte	.LVL4-1
 2091 001a 60000000 		.4byte	.LVL5
 2092 001e 0100     		.2byte	0x1
 2093 0020 55       		.byte	0x55
 2094 0021 79000000 		.4byte	.LVL6-1
 2095 0025 F6000000 		.4byte	.LVL18
 2096 0029 0400     		.2byte	0x4
 2097 002b F3       		.byte	0xf3
 2098 002c 01       		.uleb128 0x1
 2099 002d 50       		.byte	0x50
 2100 002e 9F       		.byte	0x9f
 2101 002f F6000000 		.4byte	.LVL18
 2102 0033 08010000 		.4byte	.LVL19
 2103 0037 0100     		.2byte	0x1
 2104 0039 55       		.byte	0x55
 2105 003a 08010000 		.4byte	.LVL19
 2106 003e 40010000 		.4byte	.LFE139
 2107 0042 0400     		.2byte	0x4
 2108 0044 F3       		.byte	0xf3
 2109 0045 01       		.uleb128 0x1
 2110 0046 50       		.byte	0x50
 2111 0047 9F       		.byte	0x9f
 2112 0048 00000000 		.4byte	0
 2113 004c 00000000 		.4byte	0
 2114              	.LLST1:
 2115 0050 F4000000 		.4byte	.LVL17
 2116 0054 F6000000 		.4byte	.LVL18
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 64


 2117 0058 0200     		.2byte	0x2
 2118 005a 30       		.byte	0x30
 2119 005b 9F       		.byte	0x9f
 2120 005c 08010000 		.4byte	.LVL19
 2121 0060 40010000 		.4byte	.LFE139
 2122 0064 0100     		.2byte	0x1
 2123 0066 50       		.byte	0x50
 2124 0067 00000000 		.4byte	0
 2125 006b 00000000 		.4byte	0
 2126              	.LLST2:
 2127 006f 08000000 		.4byte	.LVL1
 2128 0073 0A000000 		.4byte	.LVL2
 2129 0077 0100     		.2byte	0x1
 2130 0079 56       		.byte	0x56
 2131 007a 00000000 		.4byte	0
 2132 007e 00000000 		.4byte	0
 2133              	.LLST3:
 2134 0082 7A000000 		.4byte	.LVL6
 2135 0086 90000000 		.4byte	.LVL7
 2136 008a 0100     		.2byte	0x1
 2137 008c 50       		.byte	0x50
 2138 008d B6000000 		.4byte	.LVL10
 2139 0091 CD000000 		.4byte	.LVL11-1
 2140 0095 0100     		.2byte	0x1
 2141 0097 50       		.byte	0x50
 2142 0098 00000000 		.4byte	0
 2143 009c 00000000 		.4byte	0
 2144              	.LLST4:
 2145 00a0 AC000000 		.4byte	.LVL8
 2146 00a4 B6000000 		.4byte	.LVL10
 2147 00a8 0100     		.2byte	0x1
 2148 00aa 55       		.byte	0x55
 2149 00ab 00000000 		.4byte	0
 2150 00af 00000000 		.4byte	0
 2151              	.LLST5:
 2152 00b3 CE000000 		.4byte	.LVL11
 2153 00b7 E2000000 		.4byte	.LVL13
 2154 00bb 0100     		.2byte	0x1
 2155 00bd 50       		.byte	0x50
 2156 00be E8000000 		.4byte	.LVL15
 2157 00c2 EB000000 		.4byte	.LVL16-1
 2158 00c6 0100     		.2byte	0x1
 2159 00c8 50       		.byte	0x50
 2160 00c9 00000000 		.4byte	0
 2161 00cd 00000000 		.4byte	0
 2162              	.LLST6:
 2163 00d1 DE000000 		.4byte	.LVL12
 2164 00d5 E2000000 		.4byte	.LVL13
 2165 00d9 0100     		.2byte	0x1
 2166 00db 50       		.byte	0x50
 2167 00dc 00000000 		.4byte	0
 2168 00e0 00000000 		.4byte	0
 2169              	.LLST7:
 2170 00e4 E8000000 		.4byte	.LVL15
 2171 00e8 EB000000 		.4byte	.LVL16-1
 2172 00ec 0100     		.2byte	0x1
 2173 00ee 50       		.byte	0x50
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 65


 2174 00ef 00000000 		.4byte	0
 2175 00f3 00000000 		.4byte	0
 2176              	.LLST8:
 2177 00f7 08010000 		.4byte	.LVL19
 2178 00fb 0C010000 		.4byte	.LVL20
 2179 00ff 0100     		.2byte	0x1
 2180 0101 56       		.byte	0x56
 2181 0102 00000000 		.4byte	0
 2182 0106 00000000 		.4byte	0
 2183              		.section	.debug_aranges,"",%progbits
 2184 0000 1C000000 		.4byte	0x1c
 2185 0004 0200     		.2byte	0x2
 2186 0006 00000000 		.4byte	.Ldebug_info0
 2187 000a 04       		.byte	0x4
 2188 000b 00       		.byte	0
 2189 000c 0000     		.2byte	0
 2190 000e 0000     		.2byte	0
 2191 0010 00000000 		.4byte	.LFB139
 2192 0014 40010000 		.4byte	.LFE139-.LFB139
 2193 0018 00000000 		.4byte	0
 2194 001c 00000000 		.4byte	0
 2195              		.section	.debug_ranges,"",%progbits
 2196              	.Ldebug_ranges0:
 2197 0000 00000000 		.4byte	.LFB139
 2198 0004 40010000 		.4byte	.LFE139
 2199 0008 00000000 		.4byte	0
 2200 000c 00000000 		.4byte	0
 2201              		.section	.debug_line,"",%progbits
 2202              	.Ldebug_line0:
 2203 0000 16030000 		.section	.debug_str,"MS",%progbits,1
 2203      02008102 
 2203      00000201 
 2203      FB0E0D00 
 2203      01010101 
 2204              	.LASF78:
 2205 0000 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 2205      616C5F67 
 2205      65745F49 
 2205      52515F6E 
 2205      65737469 
 2206              	.LASF38:
 2207 001d 73706563 		.ascii	"spec_id\000"
 2207      5F696400 
 2208              	.LASF108:
 2209 0025 45455F63 		.ascii	"EE_counter_RAM\000"
 2209      6F756E74 
 2209      65725F52 
 2209      414D00
 2210              	.LASF96:
 2211 0034 45455F74 		.ascii	"EE_th_next\000"
 2211      685F6E65 
 2211      787400
 2212              	.LASF23:
 2213 003f 4576656E 		.ascii	"EventMaskType\000"
 2213      744D6173 
 2213      6B547970 
 2213      6500
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 66


 2214              	.LASF82:
 2215 004d 45455F6F 		.ascii	"EE_oo_prepare_to_block\000"
 2215      6F5F7072 
 2215      65706172 
 2215      655F746F 
 2215      5F626C6F 
 2216              	.LASF10:
 2217 0064 756E7369 		.ascii	"unsigned int\000"
 2217      676E6564 
 2217      20696E74 
 2217      00
 2218              	.LASF44:
 2219 0071 6E657874 		.ascii	"next\000"
 2219      00
 2220              	.LASF24:
 2221 0076 5469636B 		.ascii	"TickType\000"
 2221      54797065 
 2221      00
 2222              	.LASF94:
 2223 007f 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 2223      685F6469 
 2223      73706174 
 2223      63685F70 
 2223      72696F00 
 2224              	.LASF5:
 2225 0093 5F5F696E 		.ascii	"__int32_t\000"
 2225      7433325F 
 2225      7400
 2226              	.LASF123:
 2227 009d 45455F6F 		.ascii	"EE_oo_WaitEvent\000"
 2227      6F5F5761 
 2227      69744576 
 2227      656E7400 
 2228              	.LASF25:
 2229 00ad 436F756E 		.ascii	"CounterObjectType\000"
 2229      7465724F 
 2229      626A6563 
 2229      74547970 
 2229      6500
 2230              	.LASF26:
 2231 00bf 436F756E 		.ascii	"CounterType\000"
 2231      74657254 
 2231      79706500 
 2232              	.LASF124:
 2233 00cb 4D61736B 		.ascii	"Mask\000"
 2233      00
 2234              	.LASF74:
 2235 00d0 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 2235      6F5F6361 
 2235      6C6C5F50 
 2235      6F737454 
 2235      61736B48 
 2236              	.LASF18:
 2237 00e8 45455F46 		.ascii	"EE_FREG\000"
 2237      52454700 
 2238              	.LASF28:
 2239 00f0 7469636B 		.ascii	"ticksperbase\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 67


 2239      73706572 
 2239      62617365 
 2239      00
 2240              	.LASF77:
 2241 00fd 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 2241      5254495F 
 2241      7365745F 
 2241      74685F65 
 2241      715F6469 
 2242              	.LASF30:
 2243 011d 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 2243      6F5F636F 
 2243      756E7465 
 2243      725F524F 
 2243      4D5F7479 
 2244              	.LASF116:
 2245 0134 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 2245      6F727465 
 2245      785F6D78 
 2245      5F636861 
 2245      6E67655F 
 2246              	.LASF54:
 2247 0150 53746172 		.ascii	"StartupHook_Context\000"
 2247      74757048 
 2247      6F6F6B5F 
 2247      436F6E74 
 2247      65787400 
 2248              	.LASF83:
 2249 0164 69737461 		.ascii	"istat\000"
 2249      7400
 2250              	.LASF60:
 2251 016a 75696E74 		.ascii	"uint32_t\000"
 2251      33325F74 
 2251      00
 2252              	.LASF71:
 2253 0173 45455F73 		.ascii	"EE_stk_getfirst\000"
 2253      746B5F67 
 2253      65746669 
 2253      72737400 
 2254              	.LASF61:
 2255 0183 666C6F61 		.ascii	"float\000"
 2255      7400
 2256              	.LASF56:
 2257 0189 416C6172 		.ascii	"AlarmCallback_Context\000"
 2257      6D43616C 
 2257      6C626163 
 2257      6B5F436F 
 2257      6E746578 
 2258              	.LASF105:
 2259 019f 45455F74 		.ascii	"EE_th_resource_last\000"
 2259      685F7265 
 2259      736F7572 
 2259      63655F6C 
 2259      61737400 
 2260              	.LASF69:
 2261 01b3 696E6465 		.ascii	"index\000"
 2261      7800
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 68


 2262              	.LASF21:
 2263 01b9 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 2263      5950455F 
 2263      52515F4D 
 2263      41534B00 
 2264              	.LASF13:
 2265 01c9 45455F49 		.ascii	"EE_INT8\000"
 2265      4E543800 
 2266              	.LASF9:
 2267 01d1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2267      206C6F6E 
 2267      6720756E 
 2267      7369676E 
 2267      65642069 
 2268              	.LASF22:
 2269 01e8 5461736B 		.ascii	"TaskType\000"
 2269      54797065 
 2269      00
 2270              	.LASF39:
 2271 01f1 6B696E64 		.ascii	"kind\000"
 2271      00
 2272              	.LASF102:
 2273 01f6 45455F74 		.ascii	"EE_th_event_waitmask\000"
 2273      685F6576 
 2273      656E745F 
 2273      77616974 
 2273      6D61736B 
 2274              	.LASF79:
 2275 020b 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 2275      735F6D6F 
 2275      6E69746F 
 2275      72696E67 
 2275      5F746865 
 2276              	.LASF20:
 2277 0226 45455F54 		.ascii	"EE_TID\000"
 2277      494400
 2278              	.LASF107:
 2279 022d 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 2279      6F5F636F 
 2279      756E7465 
 2279      725F6F62 
 2279      6A656374 
 2280              	.LASF31:
 2281 0246 76616C75 		.ascii	"value\000"
 2281      6500
 2282              	.LASF112:
 2283 024c 45455F41 		.ascii	"EE_ApplicationMode\000"
 2283      70706C69 
 2283      63617469 
 2283      6F6E4D6F 
 2283      646500
 2284              	.LASF41:
 2285 025f 75736564 		.ascii	"used\000"
 2285      00
 2286              	.LASF119:
 2287 0264 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2287      43313120 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 69


 2287      352E342E 
 2287      31203230 
 2287      31363036 
 2288 0297 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2288      20726576 
 2288      6973696F 
 2288      6E203233 
 2288      37373135 
 2289 02ca 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2289      66756E63 
 2289      74696F6E 
 2289      2D736563 
 2289      74696F6E 
 2290              	.LASF122:
 2291 02f2 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 2291      6F727465 
 2291      785F6D78 
 2291      5F737573 
 2291      70656E64 
 2292              	.LASF75:
 2293 030a 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 2293      6F5F6361 
 2293      6C6C5F50 
 2293      72655461 
 2293      736B486F 
 2294              	.LASF52:
 2295 0321 50726554 		.ascii	"PreTaskHook_Context\000"
 2295      61736B48 
 2295      6F6F6B5F 
 2295      436F6E74 
 2295      65787400 
 2296              	.LASF27:
 2297 0335 6D617861 		.ascii	"maxallowedvalue\000"
 2297      6C6C6F77 
 2297      65647661 
 2297      6C756500 
 2298              	.LASF65:
 2299 0345 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 2299      6F727465 
 2299      785F6D78 
 2299      5F726573 
 2299      756D6549 
 2300              	.LASF109:
 2301 035c 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 2301      6F5F636F 
 2301      756E7465 
 2301      725F6F62 
 2301      6A656374 
 2302              	.LASF33:
 2303 0375 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 2303      6F5F636F 
 2303      756E7465 
 2303      725F5241 
 2303      4D5F7479 
 2304              	.LASF48:
 2305 038c 5441534B 		.ascii	"TASK_Context\000"
 2305      5F436F6E 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 70


 2305      74657874 
 2305      00
 2306              	.LASF81:
 2307 0399 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 2307      616C5F62 
 2307      6567696E 
 2307      5F6E6573 
 2307      7465645F 
 2308              	.LASF70:
 2309 03b7 7072696F 		.ascii	"prio\000"
 2309      00
 2310              	.LASF63:
 2311 03bc 63686172 		.ascii	"char\000"
 2311      00
 2312              	.LASF80:
 2313 03c1 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 2313      5254495F 
 2313      7365745F 
 2313      73657276 
 2313      6963655F 
 2314              	.LASF110:
 2315 03d8 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 2315      6F5F4952 
 2315      515F6469 
 2315      7361626C 
 2315      655F636F 
 2316              	.LASF47:
 2317 03f0 4B65726E 		.ascii	"Kernel_Context\000"
 2317      656C5F43 
 2317      6F6E7465 
 2317      787400
 2318              	.LASF67:
 2319 03ff 45455F61 		.ascii	"EE_as_set_execution_context\000"
 2319      735F7365 
 2319      745F6578 
 2319      65637574 
 2319      696F6E5F 
 2320              	.LASF37:
 2321 041b 436F756E 		.ascii	"CounterObjectKindType\000"
 2321      7465724F 
 2321      626A6563 
 2321      744B696E 
 2321      64547970 
 2322              	.LASF76:
 2323 0431 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 2323      616C5F72 
 2323      65616479 
 2323      32737461 
 2323      636B6564 
 2324              	.LASF8:
 2325 0446 6C6F6E67 		.ascii	"long long int\000"
 2325      206C6F6E 
 2325      6720696E 
 2325      7400
 2326              	.LASF12:
 2327 0454 45455F55 		.ascii	"EE_UINT8\000"
 2327      494E5438 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 71


 2327      00
 2328              	.LASF14:
 2329 045d 45455F55 		.ascii	"EE_UINT16\000"
 2329      494E5431 
 2329      3600
 2330              	.LASF68:
 2331 0467 45455F4F 		.ascii	"EE_ORTI_set_th_priority\000"
 2331      5254495F 
 2331      7365745F 
 2331      74685F70 
 2331      72696F72 
 2332              	.LASF104:
 2333 047f 45455F74 		.ascii	"EE_th_is_extended\000"
 2333      685F6973 
 2333      5F657874 
 2333      656E6465 
 2333      6400
 2334              	.LASF36:
 2335 0491 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 2335      6F5F636F 
 2335      756E7465 
 2335      725F6F62 
 2335      6A656374 
 2336              	.LASF73:
 2337 04b0 45455F68 		.ascii	"EE_hal_stkchange\000"
 2337      616C5F73 
 2337      746B6368 
 2337      616E6765 
 2337      00
 2338              	.LASF50:
 2339 04c1 4572726F 		.ascii	"ErrorHook_Context\000"
 2339      72486F6F 
 2339      6B5F436F 
 2339      6E746578 
 2339      7400
 2340              	.LASF11:
 2341 04d3 6C6F6E67 		.ascii	"long double\000"
 2341      20646F75 
 2341      626C6500 
 2342              	.LASF114:
 2343 04df 45455F72 		.ascii	"EE_rq_lookup\000"
 2343      715F6C6F 
 2343      6F6B7570 
 2343      00
 2344              	.LASF16:
 2345 04ec 45455F55 		.ascii	"EE_UINT32\000"
 2345      494E5433 
 2345      3200
 2346              	.LASF40:
 2347 04f6 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 2347      6F5F636F 
 2347      756E7465 
 2347      725F6F62 
 2347      6A656374 
 2348              	.LASF2:
 2349 0514 73686F72 		.ascii	"short int\000"
 2349      7420696E 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 72


 2349      7400
 2350              	.LASF98:
 2351 051e 45455F73 		.ascii	"EE_stkfirst\000"
 2351      746B6669 
 2351      72737400 
 2352              	.LASF42:
 2353 052a 636E7463 		.ascii	"cntcycle\000"
 2353      79636C65 
 2353      00
 2354              	.LASF4:
 2355 0533 6C6F6E67 		.ascii	"long int\000"
 2355      20696E74 
 2355      00
 2356              	.LASF113:
 2357 053c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2357      52784275 
 2357      66666572 
 2357      00
 2358              	.LASF118:
 2359 0549 45455F72 		.ascii	"EE_rq_queryfirst\000"
 2359      715F7175 
 2359      65727966 
 2359      69727374 
 2359      00
 2360              	.LASF87:
 2361 055a 45455F6F 		.ascii	"EE_oo_reschedule_on_block\000"
 2361      6F5F7265 
 2361      73636865 
 2361      64756C65 
 2361      5F6F6E5F 
 2362              	.LASF90:
 2363 0574 666C6167 		.ascii	"flag\000"
 2363      00
 2364              	.LASF101:
 2365 0579 45455F74 		.ascii	"EE_th_event_active\000"
 2365      685F6576 
 2365      656E745F 
 2365      61637469 
 2365      766500
 2366              	.LASF93:
 2367 058c 45455F74 		.ascii	"EE_th_ready_prio\000"
 2367      685F7265 
 2367      6164795F 
 2367      7072696F 
 2367      00
 2368              	.LASF46:
 2369 059d 53746174 		.ascii	"StatusType\000"
 2369      75735479 
 2369      706500
 2370              	.LASF91:
 2371 05a8 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 2371      52515F6E 
 2371      65737469 
 2371      6E675F6C 
 2371      6576656C 
 2372              	.LASF19:
 2373 05bd 45455F54 		.ascii	"EE_TYPEBOOL\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 73


 2373      59504542 
 2373      4F4F4C00 
 2374              	.LASF17:
 2375 05c9 45455F55 		.ascii	"EE_UREG\000"
 2375      52454700 
 2376              	.LASF99:
 2377 05d1 45455F73 		.ascii	"EE_sys_ceiling\000"
 2377      79735F63 
 2377      65696C69 
 2377      6E6700
 2378              	.LASF15:
 2379 05e0 45455F49 		.ascii	"EE_INT32\000"
 2379      4E543332 
 2379      00
 2380              	.LASF64:
 2381 05e9 73697A65 		.ascii	"sizetype\000"
 2381      74797065 
 2381      00
 2382              	.LASF51:
 2383 05f2 50726F74 		.ascii	"ProtectionHook_Context\000"
 2383      65637469 
 2383      6F6E486F 
 2383      6F6B5F43 
 2383      6F6E7465 
 2384              	.LASF7:
 2385 0609 6C6F6E67 		.ascii	"long unsigned int\000"
 2385      20756E73 
 2385      69676E65 
 2385      6420696E 
 2385      7400
 2386              	.LASF72:
 2387 061b 45455F73 		.ascii	"EE_stk_queryfirst\000"
 2387      746B5F71 
 2387      75657279 
 2387      66697273 
 2387      7400
 2388              	.LASF57:
 2389 062d 49646C65 		.ascii	"Idle_Context\000"
 2389      5F436F6E 
 2389      74657874 
 2389      00
 2390              	.LASF59:
 2391 063a 696E7433 		.ascii	"int32_t\000"
 2391      325F7400 
 2392              	.LASF120:
 2393 0642 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_evwait.c\000"
 2393      72617465 
 2393      645F536F 
 2393      75726365 
 2393      5C50536F 
 2394              	.LASF53:
 2395 066f 506F7374 		.ascii	"PostTaskHook_Context\000"
 2395      5461736B 
 2395      486F6F6B 
 2395      5F436F6E 
 2395      74657874 
 2396              	.LASF85:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 74


 2397 0684 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 2397      616C5F65 
 2397      6E645F6E 
 2397      65737465 
 2397      645F7072 
 2398              	.LASF58:
 2399 06a0 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 2399      59504543 
 2399      4F4E5445 
 2399      585400
 2400              	.LASF1:
 2401 06af 756E7369 		.ascii	"unsigned char\000"
 2401      676E6564 
 2401      20636861 
 2401      7200
 2402              	.LASF6:
 2403 06bd 5F5F7569 		.ascii	"__uint32_t\000"
 2403      6E743332 
 2403      5F7400
 2404              	.LASF89:
 2405 06c8 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 2405      6F5F7275 
 2405      6E5F6E65 
 2405      78745F74 
 2405      61736B00 
 2406              	.LASF66:
 2407 06dc 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 2407      5254495F 
 2407      7365745F 
 2407      73657276 
 2407      69636500 
 2408              	.LASF92:
 2409 06f0 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 2409      74645F65 
 2409      6E646379 
 2409      636C655F 
 2409      6E657874 
 2410              	.LASF32:
 2411 0709 66697273 		.ascii	"first\000"
 2411      7400
 2412              	.LASF45:
 2413 070f 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 2413      6F5F636F 
 2413      756E7465 
 2413      725F6F62 
 2413      6A656374 
 2414              	.LASF29:
 2415 072d 6D696E63 		.ascii	"mincycle\000"
 2415      79636C65 
 2415      00
 2416              	.LASF111:
 2417 0736 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 2417      6F5F4952 
 2417      515F7375 
 2417      7370656E 
 2417      645F7374 
 2418              	.LASF0:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 75


 2419 074f 7369676E 		.ascii	"signed char\000"
 2419      65642063 
 2419      68617200 
 2420              	.LASF43:
 2421 075b 64656C74 		.ascii	"delta\000"
 2421      6100
 2422              	.LASF3:
 2423 0761 73686F72 		.ascii	"short unsigned int\000"
 2423      7420756E 
 2423      7369676E 
 2423      65642069 
 2423      6E7400
 2424              	.LASF84:
 2425 0774 63757272 		.ascii	"current\000"
 2425      656E7400 
 2426              	.LASF88:
 2427 077c 6E657874 		.ascii	"nexttask\000"
 2427      7461736B 
 2427      00
 2428              	.LASF34:
 2429 0785 45455F41 		.ascii	"EE_ALARM\000"
 2429      4C41524D 
 2429      00
 2430              	.LASF62:
 2431 078e 646F7562 		.ascii	"double\000"
 2431      6C6500
 2432              	.LASF106:
 2433 0795 45455F63 		.ascii	"EE_counter_ROM\000"
 2433      6F756E74 
 2433      65725F52 
 2433      4F4D00
 2434              	.LASF97:
 2435 07a4 45455F74 		.ascii	"EE_th_rnact\000"
 2435      685F726E 
 2435      61637400 
 2436              	.LASF95:
 2437 07b0 45455F74 		.ascii	"EE_th_status\000"
 2437      685F7374 
 2437      61747573 
 2437      00
 2438              	.LASF86:
 2439 07bd 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 2439      5254495F 
 2439      7365745F 
 2439      73657276 
 2439      6963655F 
 2440              	.LASF121:
 2441 07d5 433A5C4D 		.ascii	"C:\\My_Files\\College_Documents\\AMA EOS\\EOS\\LAB\\"
 2441      795F4669 
 2441      6C65735C 
 2441      436F6C6C 
 2441      6567655F 
 2442 0803 4C41425F 		.ascii	"LAB_2_Submission\\Json Parser\\code\\w06_criticalRe"
 2442      325F5375 
 2442      626D6973 
 2442      73696F6E 
 2442      5C4A736F 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccCA49mX.s 			page 76


 2443 0833 67696F6E 		.ascii	"gion.cydsn\000"
 2443      2E637964 
 2443      736E00
 2444              	.LASF49:
 2445 083e 49535232 		.ascii	"ISR2_Context\000"
 2445      5F436F6E 
 2445      74657874 
 2445      00
 2446              	.LASF35:
 2447 084b 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 2447      43484544 
 2447      554C4554 
 2447      41424C45 
 2447      00
 2448              	.LASF103:
 2449 085c 45455F74 		.ascii	"EE_th_waswaiting\000"
 2449      685F7761 
 2449      73776169 
 2449      74696E67 
 2449      00
 2450              	.LASF100:
 2451 086d 45455F72 		.ascii	"EE_rq_bitmask\000"
 2451      715F6269 
 2451      746D6173 
 2451      6B00
 2452              	.LASF115:
 2453 087b 70727654 		.ascii	"prvTraceStoreEvent2\000"
 2453      72616365 
 2453      53746F72 
 2453      65457665 
 2453      6E743200 
 2454              	.LASF117:
 2455 088f 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 2455      71327374 
 2455      6B5F6578 
 2455      6368616E 
 2455      676500
 2456              	.LASF55:
 2457 08a2 53687574 		.ascii	"ShutdownHook_Context\000"
 2457      646F776E 
 2457      486F6F6B 
 2457      5F436F6E 
 2457      74657874 
 2458              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
