ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_schedule.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_Schedule,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_Schedule
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_Schedule, %function
  25              	EE_oo_Schedule:
  26              	.LFB70:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_schedule.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * CVS: $Id: ee_schedule.c,v 1.1 2005/07/16 12:23:42 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #include "ErikaOS_1_ee_internal.inc"
  53:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  54:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /* Schedule: 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - the internal resource is released; 
  56:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - no check if resources are still used by the task
  57:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - then rescheduling takes place 
  58:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - and then the internal resource is taken again
  59:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - returns
  60:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       Extended status
  61:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       E_OS_CALLLEVEL if called at interrupt level 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       E_OS_RESOURCE if the calling task occupies resources
  63:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** */
  64:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifndef __PRIVATE_SCHEDULE__
  66:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  67:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** StatusType EE_oo_Schedule(void)
  68:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** {
  28              		.loc 1 68 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              	.LBB60:
  41              	.LBB61:
  42              	.LBB62:
  43              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 3


   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 4


  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 5


 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 6


 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 7


 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  44              		.loc 2 260 0
  45              		.syntax unified
  46              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  47 0002 EFF31084 		mrs r4, primask
  48              	@ 0 "" 2
  49              	.LVL0:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  50              		.loc 2 261 0
  51              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  52 0006 72B6     		cpsid i
  53              	@ 0 "" 2
  54              	.LVL1:
  55              		.thumb
  56              		.syntax unified
  57              	.LBE62:
  58              	.LBE61:
  59              	.LBE60:
  60              	.LBB63:
  61              	.LBB64:
  62              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 8


   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 9


  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 10


 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 11


 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 12


 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  63              		.loc 3 240 0
  64 0008 2B4B     		ldr	r3, .L11
  65 000a 1D68     		ldr	r5, [r3]
  66              	.LBE64:
  67              	.LBE63:
  69:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   register EE_TID current, rq;
  70:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* Error Value */
  71:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   register StatusType ev;
  72:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* Primitive Lock Procedure */
  73:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  74:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  75:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_SCHEDULE);
  76:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_as_monitoring_the_stack();
  78:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  79:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   current = EE_stk_queryfirst();
  80:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   rq = EE_rq_queryfirst();
  68              		.loc 1 80 0
  69 000c FFF7FEFF 		bl	EE_rq_queryfirst
  70              	.LVL2:
  71              	.LBB65:
  72              	.LBB66:
  73              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 13


  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  74              		.loc 4 79 0
  75 0010 2A4B     		ldr	r3, .L11+4
  76 0012 1B68     		ldr	r3, [r3]
  77              	.LBE66:
  78              	.LBE65:
  81:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  82:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifdef EE_SERVICE_PROTECTION__
  83:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 14


  84:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       then the Operating System shall ignore the service AND shall return
  86:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  87:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( EE_oo_check_disableint_error() ) {
  88:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_DISABLEDINT;
  89:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
  90:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_SERVICE_PROTECTION__ */
  91:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
  93:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
  94:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       AND is currently not inside a Category 1 ISR the Operating System module
  95:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       shall not perform the requested action (the service call shall have no
  96:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
  97:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
  98:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* check for a call at interrupt level */
  99:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U) || (current == EE_NIL)
  79              		.loc 1 99 0
  80 0014 002B     		cmp	r3, #0
  81 0016 42D1     		bne	.L5
  82              		.loc 1 99 0 is_stmt 0 discriminator 1
  83 0018 B5F1FF3F 		cmp	r5, #-1
  84 001c 41D0     		beq	.L6
 100:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if !defined (EE_SERVICE_PROTECTION__)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 102:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 	 * check is always FALSE, hence it is not needed  */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #else
 104:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 105:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif
 106:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   {
 107:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_CALLEVEL;
 108:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 109:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_SERVICE_PROTECTION__ */
 110:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 111:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifdef __OO_EXTENDED_STATUS__
 112:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifndef __OO_NO_RESOURCES__
 113:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* check for busy resources */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( EE_th_resource_last[current] != EE_UREG_MINUS1 )
  85              		.loc 1 114 0 is_stmt 1
  86 001e 284B     		ldr	r3, .L11+8
  87 0020 53F82530 		ldr	r3, [r3, r5, lsl #2]
  88 0024 B3F1FF3F 		cmp	r3, #-1
  89 0028 3DD1     		bne	.L7
 115:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   {
 116:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_RESOURCE;
 117:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 118:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* __OO_NO_RESOURCES__ */
 119:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 120:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifdef EE_AS_USER_SPINLOCKS__
 121:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* [OS624]: The AUTOSAR Operating System Schedule API service shall check if it
 122:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       has been called while the calling TASK has occupied a spinlock. In
 123:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       extended status an error E_OS_SPINLOCK shall be returned and the scheduler
 124:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       shall not be called. (BSW4080021) */
 125:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( EE_as_has_spinlocks_locked(current) ) {
 126:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_SPINLOCK;
 127:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 128:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 129:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 15


 130:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* __OO_EXTENDED_STATUS__ */
 131:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 132:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 133:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) &&	\
 134:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 135:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /*  If a TASK is inside CallTrustedFunction() and TASK
 136:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       rescheduling takes place within the same OSApplication scheduling of
 137:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       other TASKs which belong to the same OS-Application as the caller needs
 138:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       to be restricted.
 139:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EG: To Assure that I CANNOT let a TASK release internal resource, if this
 140:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         means schedule a TASK of the same OSApplication, unless the
 141:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         OSApplication is TRUSTED. */
 142:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if (  (EE_as_active_app == EE_th_app[rq + 1]) &&
 143:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         (EE_as_Application_RAM[EE_as_active_app].
 144:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****           TrustedFunctionCallsCounter != 0U) &&
 145:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         (EE_as_Application_ROM[EE_as_active_app].Mode != EE_MEMPROT_TRUST_MODE )
 146:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****      )
 147:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   {
 148:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OK;
 149:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 150:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 152:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* Check if there is a preemption */
 153:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( rq != EE_NIL ) {
  90              		.loc 1 153 0
  91 002a B0F1FF3F 		cmp	r0, #-1
  92 002e 3CD0     		beq	.L8
 154:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     /* The standard says that "Schedule enables a processor assignment
 155:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        to other TASKs with lower priority than the ceiling priority of
 156:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        the internal resource and higher priority than the priority of
 157:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        the calling TASK". That means that only TASKs currently in the
 158:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        ready queue with the ready priority > than the ready priority
 159:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        of the running TASK can be executed... */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     if ( EE_th_ready_prio[current] < EE_th_ready_prio[rq] ) {
  93              		.loc 1 160 0
  94 0030 244B     		ldr	r3, .L11+12
  95 0032 53F82560 		ldr	r6, [r3, r5, lsl #2]
  96 0036 53F82030 		ldr	r3, [r3, r0, lsl #2]
  97 003a 9E42     		cmp	r6, r3
  98 003c 37D2     		bcs	.L9
 161:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_oo_call_PostTaskHook();
 162:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* release the internal resource */
 163:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling &= ~EE_th_dispatch_prio[current];
  99              		.loc 1 163 0
 100 003e 224A     		ldr	r2, .L11+16
 101 0040 52F82570 		ldr	r7, [r2, r5, lsl #2]
 102 0044 DFF88CE0 		ldr	lr, .L11+28
 103 0048 DEF80030 		ldr	r3, [lr]
 104 004c 23EA0703 		bic	r3, r3, r7
 164:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* set the ready priority bit. In that way we prevent preemption
 166:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * from all the tasks with lower priority than the current task.
 167:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        *
 168:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * NOTE: Setting the ready priority is legal because if the task
 169:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * has been scheduled it must be that the system_ceiling <
 170:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * ready_priority, and so (system_ceiling &ready_priority)=0!!!
 171:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * after a task has been put in execution, the dispatch priority
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 16


 172:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * is set. no other bits are set when this function is called
 173:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * (all the resources must be unlocked, and all the task that
 174:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * preempts the running task must have been finished!.
 175:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        */
 176:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling |= EE_th_ready_prio[current];
 105              		.loc 1 176 0
 106 0050 3343     		orrs	r3, r3, r6
 177:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 178:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* we have to put the task in the ready status */
 179:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_th_status[current] = READY;
 107              		.loc 1 179 0
 108 0052 1E49     		ldr	r1, .L11+20
 109 0054 4FF0020C 		mov	ip, #2
 110 0058 41F825C0 		str	ip, [r1, r5, lsl #2]
 180:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* but not in the ready queue!!! 
 181:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****          the task remains into the stacked queue!
 182:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       */
 183:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 184:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* get the new internal resource */
 185:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 111              		.loc 1 185 0
 112 005c 52F82020 		ldr	r2, [r2, r0, lsl #2]
 113 0060 1343     		orrs	r3, r3, r2
 114 0062 CEF80030 		str	r3, [lr]
 186:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* put the task in running state */
 187:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_th_status[rq] = RUNNING;
 115              		.loc 1 187 0
 116 0066 0023     		movs	r3, #0
 117 0068 41F82030 		str	r3, [r1, r0, lsl #2]
 118              	.LBB67:
 119              	.LBB68:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 17


 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 18


 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 19


 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 20


 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 21


 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 22


 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 120              		.loc 3 566 0
 121 006c FFF7FEFF 		bl	EE_rq2stk_exchange
 122              	.LVL3:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 123              		.loc 3 567 0
 124 0070 174B     		ldr	r3, .L11+24
 125 0072 53F82030 		ldr	r3, [r3, r0, lsl #2]
 126 0076 43B1     		cbz	r3, .L3
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 127              		.loc 3 569 0
 128 0078 0022     		movs	r2, #0
 129 007a 154B     		ldr	r3, .L11+24
 130 007c 43F82020 		str	r2, [r3, r0, lsl #2]
 131              	.LVL4:
 132              	.LBB69:
 133              	.LBB70:
 134              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 23


  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 24


  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 25


 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 135              		.loc 5 154 0
 136 0080 40F00040 		orr	r0, r0, #-2147483648
 137              	.LVL5:
 138 0084 FFF7FEFF 		bl	EE_cortex_mx_change_context
 139              	.LVL6:
 140 0088 01E0     		b	.L4
 141              	.LVL7:
 142              	.L3:
 143              	.LBE70:
 144              	.LBE69:
 145              	.LBB71:
 146              	.LBB72:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 147              		.loc 5 167 0
 148 008a FFF7FEFF 		bl	EE_cortex_mx_change_context
 149              	.LVL8:
 150              	.L4:
 151              	.LBE72:
 152              	.LBE71:
 153              	.LBE68:
 154              	.LBE67:
 188:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 189:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_ORTI_set_th_eq_dispatch_prio(current);
 190:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_ORTI_set_th_eq_dispatch_prio(rq);
 191:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 192:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* Execute context SWITCH, this method return when we have a switch
 193:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****          back on the previous TASK contest. */
 194:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_oo_run_next_task();
 195:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 26


 196:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* release the ready priority bit and... */
 197:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling &= ~EE_th_ready_prio[current];
 155              		.loc 1 197 0
 156 008e 114A     		ldr	r2, .L11+28
 157 0090 1368     		ldr	r3, [r2]
 158 0092 23EA0603 		bic	r3, r3, r6
 198:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* ...get again the internal resource */
 199:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling |= EE_th_dispatch_prio[current];
 159              		.loc 1 199 0
 160 0096 3B43     		orrs	r3, r3, r7
 161 0098 1360     		str	r3, [r2]
 162              	.LVL9:
 200:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 201:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_ORTI_set_th_eq_dispatch_prio(current);
 202:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     }
 203:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OK;
 163              		.loc 1 203 0
 164 009a 0020     		movs	r0, #0
 165 009c 08E0     		b	.L2
 166              	.LVL10:
 167              	.L5:
 107:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 168              		.loc 1 107 0
 169 009e 0220     		movs	r0, #2
 170              	.LVL11:
 171 00a0 06E0     		b	.L2
 172              	.LVL12:
 173              	.L6:
 174 00a2 0220     		movs	r0, #2
 175              	.LVL13:
 176 00a4 04E0     		b	.L2
 177              	.LVL14:
 178              	.L7:
 116:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 179              		.loc 1 116 0
 180 00a6 0620     		movs	r0, #6
 181              	.LVL15:
 182 00a8 02E0     		b	.L2
 183              	.LVL16:
 184              	.L8:
 204:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else {
 205:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OK;
 185              		.loc 1 205 0
 186 00aa 0020     		movs	r0, #0
 187              	.LVL17:
 188 00ac 00E0     		b	.L2
 189              	.LVL18:
 190              	.L9:
 203:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else {
 191              		.loc 1 203 0
 192 00ae 0020     		movs	r0, #0
 193              	.LVL19:
 194              	.L2:
 195              	.LBB73:
 196              	.LBB74:
 197              	.LBB75:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 27


 198              		.loc 2 232 0
 199              		.syntax unified
 200              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 201 00b0 84F31088 		msr primask, r4
 202              	@ 0 "" 2
 203              	.LVL20:
 204              		.thumb
 205              		.syntax unified
 206              	.LBE75:
 207              	.LBE74:
 208              	.LBE73:
 206:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   }
 207:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 208:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( ev != E_OK ) {
 209:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     EE_ORTI_set_lasterror(ev);
 210:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     EE_oo_notify_error_service(OSServiceId_Schedule, ev);
 211:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   }
 212:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_SCHEDULE);
 214:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 215:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 216:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   return ev;
 217:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** }
 209              		.loc 1 217 0
 210 00b4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 211              	.L12:
 212 00b6 00BF     		.align	2
 213              	.L11:
 214 00b8 00000000 		.word	EE_stkfirst
 215 00bc 00000000 		.word	EE_IRQ_nesting_level
 216 00c0 00000000 		.word	EE_th_resource_last
 217 00c4 00000000 		.word	EE_th_ready_prio
 218 00c8 00000000 		.word	EE_th_dispatch_prio
 219 00cc 00000000 		.word	EE_th_status
 220 00d0 00000000 		.word	EE_th_waswaiting
 221 00d4 00000000 		.word	EE_sys_ceiling
 222              		.cfi_endproc
 223              	.LFE70:
 224              		.size	EE_oo_Schedule, .-EE_oo_Schedule
 225              		.text
 226              	.Letext0:
 227              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 228              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 229              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 230              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 231              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 232              		.section	.debug_info,"",%progbits
 233              	.Ldebug_info0:
 234 0000 20070000 		.4byte	0x720
 235 0004 0400     		.2byte	0x4
 236 0006 00000000 		.4byte	.Ldebug_abbrev0
 237 000a 04       		.byte	0x4
 238 000b 01       		.uleb128 0x1
 239 000c 46050000 		.4byte	.LASF100
 240 0010 0C       		.byte	0xc
 241 0011 81070000 		.4byte	.LASF101
 242 0015 25020000 		.4byte	.LASF102
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 28


 243 0019 00000000 		.4byte	.Ldebug_ranges0+0
 244 001d 00000000 		.4byte	0
 245 0021 00000000 		.4byte	.Ldebug_line0
 246 0025 02       		.uleb128 0x2
 247 0026 01       		.byte	0x1
 248 0027 06       		.byte	0x6
 249 0028 15010000 		.4byte	.LASF0
 250 002c 02       		.uleb128 0x2
 251 002d 01       		.byte	0x1
 252 002e 08       		.byte	0x8
 253 002f EB040000 		.4byte	.LASF1
 254 0033 02       		.uleb128 0x2
 255 0034 02       		.byte	0x2
 256 0035 05       		.byte	0x5
 257 0036 20050000 		.4byte	.LASF2
 258 003a 02       		.uleb128 0x2
 259 003b 02       		.byte	0x2
 260 003c 07       		.byte	0x7
 261 003d 93020000 		.4byte	.LASF3
 262 0041 02       		.uleb128 0x2
 263 0042 04       		.byte	0x4
 264 0043 05       		.byte	0x5
 265 0044 5A010000 		.4byte	.LASF4
 266 0048 02       		.uleb128 0x2
 267 0049 04       		.byte	0x4
 268 004a 07       		.byte	0x7
 269 004b 02020000 		.4byte	.LASF5
 270 004f 02       		.uleb128 0x2
 271 0050 08       		.byte	0x8
 272 0051 05       		.byte	0x5
 273 0052 07010000 		.4byte	.LASF6
 274 0056 02       		.uleb128 0x2
 275 0057 08       		.byte	0x8
 276 0058 07       		.byte	0x7
 277 0059 7A000000 		.4byte	.LASF7
 278 005d 03       		.uleb128 0x3
 279 005e 04       		.byte	0x4
 280 005f 05       		.byte	0x5
 281 0060 696E7400 		.ascii	"int\000"
 282 0064 02       		.uleb128 0x2
 283 0065 04       		.byte	0x4
 284 0066 07       		.byte	0x7
 285 0067 E5010000 		.4byte	.LASF8
 286 006b 02       		.uleb128 0x2
 287 006c 08       		.byte	0x8
 288 006d 04       		.byte	0x4
 289 006e B8030000 		.4byte	.LASF9
 290 0072 04       		.uleb128 0x4
 291 0073 21030000 		.4byte	.LASF10
 292 0077 06       		.byte	0x6
 293 0078 3E       		.byte	0x3e
 294 0079 2C000000 		.4byte	0x2c
 295 007d 04       		.uleb128 0x4
 296 007e F2010000 		.4byte	.LASF11
 297 0082 06       		.byte	0x6
 298 0083 3F       		.byte	0x3f
 299 0084 25000000 		.4byte	0x25
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 29


 300 0088 04       		.uleb128 0x4
 301 0089 B9040000 		.4byte	.LASF12
 302 008d 06       		.byte	0x6
 303 008e 52       		.byte	0x52
 304 008f 3A000000 		.4byte	0x3a
 305 0093 04       		.uleb128 0x4
 306 0094 1D070000 		.4byte	.LASF13
 307 0098 06       		.byte	0x6
 308 0099 53       		.byte	0x53
 309 009a 5D000000 		.4byte	0x5d
 310 009e 04       		.uleb128 0x4
 311 009f 13070000 		.4byte	.LASF14
 312 00a3 06       		.byte	0x6
 313 00a4 54       		.byte	0x54
 314 00a5 64000000 		.4byte	0x64
 315 00a9 04       		.uleb128 0x4
 316 00aa FA010000 		.4byte	.LASF15
 317 00ae 02       		.byte	0x2
 318 00af 4D       		.byte	0x4d
 319 00b0 9E000000 		.4byte	0x9e
 320 00b4 04       		.uleb128 0x4
 321 00b5 B0070000 		.4byte	.LASF16
 322 00b9 02       		.byte	0x2
 323 00ba 4F       		.byte	0x4f
 324 00bb 9E000000 		.4byte	0x9e
 325 00bf 04       		.uleb128 0x4
 326 00c0 6E000000 		.4byte	.LASF17
 327 00c4 02       		.byte	0x2
 328 00c5 54       		.byte	0x54
 329 00c6 A9000000 		.4byte	0xa9
 330 00ca 04       		.uleb128 0x4
 331 00cb C6010000 		.4byte	.LASF18
 332 00cf 02       		.byte	0x2
 333 00d0 78       		.byte	0x78
 334 00d1 93000000 		.4byte	0x93
 335 00d5 05       		.uleb128 0x5
 336 00d6 4F030000 		.4byte	.LASF19
 337 00da 07       		.byte	0x7
 338 00db 1101     		.2byte	0x111
 339 00dd 88000000 		.4byte	0x88
 340 00e1 05       		.uleb128 0x5
 341 00e2 EE000000 		.4byte	.LASF20
 342 00e6 07       		.byte	0x7
 343 00e7 F701     		.2byte	0x1f7
 344 00e9 CA000000 		.4byte	0xca
 345 00ed 05       		.uleb128 0x5
 346 00ee 42000000 		.4byte	.LASF21
 347 00f2 07       		.byte	0x7
 348 00f3 3502     		.2byte	0x235
 349 00f5 A9000000 		.4byte	0xa9
 350 00f9 05       		.uleb128 0x5
 351 00fa 04060000 		.4byte	.LASF22
 352 00fe 07       		.byte	0x7
 353 00ff 5D02     		.2byte	0x25d
 354 0101 A9000000 		.4byte	0xa9
 355 0105 05       		.uleb128 0x5
 356 0106 2A030000 		.4byte	.LASF23
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 30


 357 010a 07       		.byte	0x7
 358 010b 6C02     		.2byte	0x26c
 359 010d A9000000 		.4byte	0xa9
 360 0111 06       		.uleb128 0x6
 361 0112 0C       		.byte	0xc
 362 0113 07       		.byte	0x7
 363 0114 7202     		.2byte	0x272
 364 0116 42010000 		.4byte	0x142
 365 011a 07       		.uleb128 0x7
 366 011b F7000000 		.4byte	.LASF24
 367 011f 07       		.byte	0x7
 368 0120 7302     		.2byte	0x273
 369 0122 ED000000 		.4byte	0xed
 370 0126 00       		.byte	0
 371 0127 07       		.uleb128 0x7
 372 0128 18040000 		.4byte	.LASF25
 373 012c 07       		.byte	0x7
 374 012d 7402     		.2byte	0x274
 375 012f ED000000 		.4byte	0xed
 376 0133 04       		.byte	0x4
 377 0134 07       		.uleb128 0x7
 378 0135 AC010000 		.4byte	.LASF26
 379 0139 07       		.byte	0x7
 380 013a 7502     		.2byte	0x275
 381 013c ED000000 		.4byte	0xed
 382 0140 08       		.byte	0x8
 383 0141 00       		.byte	0
 384 0142 05       		.uleb128 0x5
 385 0143 2F050000 		.4byte	.LASF27
 386 0147 07       		.byte	0x7
 387 0148 7A02     		.2byte	0x27a
 388 014a 11010000 		.4byte	0x111
 389 014e 06       		.uleb128 0x6
 390 014f 08       		.byte	0x8
 391 0150 07       		.byte	0x7
 392 0151 7D02     		.2byte	0x27d
 393 0153 72010000 		.4byte	0x172
 394 0157 07       		.uleb128 0x7
 395 0158 CD010000 		.4byte	.LASF28
 396 015c 07       		.byte	0x7
 397 015d 7E02     		.2byte	0x27e
 398 015f ED000000 		.4byte	0xed
 399 0163 00       		.byte	0
 400 0164 07       		.uleb128 0x7
 401 0165 FE050000 		.4byte	.LASF29
 402 0169 07       		.byte	0x7
 403 016a 7F02     		.2byte	0x27f
 404 016c F9000000 		.4byte	0xf9
 405 0170 04       		.byte	0x4
 406 0171 00       		.byte	0
 407 0172 05       		.uleb128 0x5
 408 0173 2E010000 		.4byte	.LASF30
 409 0177 07       		.byte	0x7
 410 0178 8002     		.2byte	0x280
 411 017a 4E010000 		.4byte	0x14e
 412 017e 08       		.uleb128 0x8
 413 017f 01       		.byte	0x1
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 31


 414 0180 2C000000 		.4byte	0x2c
 415 0184 07       		.byte	0x7
 416 0185 8A02     		.2byte	0x28a
 417 0187 98010000 		.4byte	0x198
 418 018b 09       		.uleb128 0x9
 419 018c F9040000 		.4byte	.LASF31
 420 0190 00       		.byte	0
 421 0191 09       		.uleb128 0x9
 422 0192 C3040000 		.4byte	.LASF32
 423 0196 01       		.byte	0x1
 424 0197 00       		.byte	0
 425 0198 05       		.uleb128 0x5
 426 0199 B5020000 		.4byte	.LASF33
 427 019d 07       		.byte	0x7
 428 019e 8D02     		.2byte	0x28d
 429 01a0 7E010000 		.4byte	0x17e
 430 01a4 05       		.uleb128 0x5
 431 01a5 F7020000 		.4byte	.LASF34
 432 01a9 07       		.byte	0x7
 433 01aa 9002     		.2byte	0x290
 434 01ac 98010000 		.4byte	0x198
 435 01b0 06       		.uleb128 0x6
 436 01b1 0C       		.byte	0xc
 437 01b2 07       		.byte	0x7
 438 01b3 9402     		.2byte	0x294
 439 01b5 DF010000 		.4byte	0x1df
 440 01b9 0A       		.uleb128 0xa
 441 01ba 6300     		.ascii	"c\000"
 442 01bc 07       		.byte	0x7
 443 01bd 9602     		.2byte	0x296
 444 01bf 05010000 		.4byte	0x105
 445 01c3 00       		.byte	0
 446 01c4 07       		.uleb128 0x7
 447 01c5 68060000 		.4byte	.LASF35
 448 01c9 07       		.byte	0x7
 449 01ca 9802     		.2byte	0x298
 450 01cc F9000000 		.4byte	0xf9
 451 01d0 04       		.byte	0x4
 452 01d1 07       		.uleb128 0x7
 453 01d2 8E020000 		.4byte	.LASF36
 454 01d6 07       		.byte	0x7
 455 01d7 9A02     		.2byte	0x29a
 456 01d9 A4010000 		.4byte	0x1a4
 457 01dd 08       		.byte	0x8
 458 01de 00       		.byte	0
 459 01df 05       		.uleb128 0x5
 460 01e0 D0000000 		.4byte	.LASF37
 461 01e4 07       		.byte	0x7
 462 01e5 9B02     		.2byte	0x29b
 463 01e7 B0010000 		.4byte	0x1b0
 464 01eb 06       		.uleb128 0x6
 465 01ec 10       		.byte	0x10
 466 01ed 07       		.byte	0x7
 467 01ee 9F02     		.2byte	0x29f
 468 01f0 29020000 		.4byte	0x229
 469 01f4 07       		.uleb128 0x7
 470 01f5 49040000 		.4byte	.LASF38
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 32


 471 01f9 07       		.byte	0x7
 472 01fa A002     		.2byte	0x2a0
 473 01fc BF000000 		.4byte	0xbf
 474 0200 00       		.byte	0
 475 0201 07       		.uleb128 0x7
 476 0202 3A070000 		.4byte	.LASF39
 477 0206 07       		.byte	0x7
 478 0207 A102     		.2byte	0x2a1
 479 0209 ED000000 		.4byte	0xed
 480 020d 04       		.byte	0x4
 481 020e 07       		.uleb128 0x7
 482 020f CA000000 		.4byte	.LASF40
 483 0213 07       		.byte	0x7
 484 0214 A202     		.2byte	0x2a2
 485 0216 ED000000 		.4byte	0xed
 486 021a 08       		.byte	0x8
 487 021b 07       		.uleb128 0x7
 488 021c 3D000000 		.4byte	.LASF41
 489 0220 07       		.byte	0x7
 490 0221 A302     		.2byte	0x2a3
 491 0223 F9000000 		.4byte	0xf9
 492 0227 0C       		.byte	0xc
 493 0228 00       		.byte	0
 494 0229 05       		.uleb128 0x5
 495 022a 75040000 		.4byte	.LASF42
 496 022e 07       		.byte	0x7
 497 022f A402     		.2byte	0x2a4
 498 0231 EB010000 		.4byte	0x1eb
 499 0235 05       		.uleb128 0x5
 500 0236 A6000000 		.4byte	.LASF43
 501 023a 07       		.byte	0x7
 502 023b 2103     		.2byte	0x321
 503 023d 2C000000 		.4byte	0x2c
 504 0241 08       		.uleb128 0x8
 505 0242 01       		.byte	0x1
 506 0243 2C000000 		.4byte	0x2c
 507 0247 07       		.byte	0x7
 508 0248 5904     		.2byte	0x459
 509 024a 91020000 		.4byte	0x291
 510 024e 09       		.uleb128 0x9
 511 024f 25040000 		.4byte	.LASF44
 512 0253 00       		.byte	0
 513 0254 09       		.uleb128 0x9
 514 0255 3C040000 		.4byte	.LASF45
 515 0259 01       		.byte	0x1
 516 025a 09       		.uleb128 0x9
 517 025b 00000000 		.4byte	.LASF46
 518 025f 02       		.byte	0x2
 519 0260 09       		.uleb128 0x9
 520 0261 73030000 		.4byte	.LASF47
 521 0265 03       		.byte	0x3
 522 0266 09       		.uleb128 0x9
 523 0267 A1030000 		.4byte	.LASF48
 524 026b 04       		.byte	0x4
 525 026c 09       		.uleb128 0x9
 526 026d 5F030000 		.4byte	.LASF49
 527 0271 05       		.byte	0x5
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 33


 528 0272 09       		.uleb128 0x9
 529 0273 45010000 		.4byte	.LASF50
 530 0277 06       		.byte	0x6
 531 0278 09       		.uleb128 0x9
 532 0279 16060000 		.4byte	.LASF51
 533 027d 07       		.byte	0x7
 534 027e 09       		.uleb128 0x9
 535 027f 43070000 		.4byte	.LASF52
 536 0283 08       		.byte	0x8
 537 0284 09       		.uleb128 0x9
 538 0285 D4020000 		.4byte	.LASF53
 539 0289 09       		.byte	0x9
 540 028a 09       		.uleb128 0x9
 541 028b F0030000 		.4byte	.LASF54
 542 028f 0A       		.byte	0xa
 543 0290 00       		.byte	0
 544 0291 05       		.uleb128 0x5
 545 0292 4A060000 		.4byte	.LASF55
 546 0296 07       		.byte	0x7
 547 0297 6504     		.2byte	0x465
 548 0299 41020000 		.4byte	0x241
 549 029d 0B       		.uleb128 0xb
 550 029e 69070000 		.4byte	.LASF103
 551 02a2 02       		.byte	0x2
 552 02a3 F1       		.byte	0xf1
 553 02a4 B4000000 		.4byte	0xb4
 554 02a8 03       		.byte	0x3
 555 02a9 B9020000 		.4byte	0x2b9
 556 02ad 0C       		.uleb128 0xc
 557 02ae 8E060000 		.4byte	.LASF72
 558 02b2 02       		.byte	0x2
 559 02b3 F4       		.byte	0xf4
 560 02b4 B4000000 		.4byte	0xb4
 561 02b8 00       		.byte	0
 562 02b9 0D       		.uleb128 0xd
 563 02ba D4040000 		.4byte	.LASF56
 564 02be 02       		.byte	0x2
 565 02bf DC       		.byte	0xdc
 566 02c0 03       		.byte	0x3
 567 02c1 CF020000 		.4byte	0x2cf
 568 02c5 0E       		.uleb128 0xe
 569 02c6 6600     		.ascii	"f\000"
 570 02c8 02       		.byte	0x2
 571 02c9 DC       		.byte	0xdc
 572 02ca B4000000 		.4byte	0xb4
 573 02ce 00       		.byte	0
 574 02cf 0F       		.uleb128 0xf
 575 02d0 94060000 		.4byte	.LASF57
 576 02d4 07       		.byte	0x7
 577 02d5 9703     		.2byte	0x397
 578 02d7 03       		.byte	0x3
 579 02d8 E9020000 		.4byte	0x2e9
 580 02dc 10       		.uleb128 0x10
 581 02dd 73727600 		.ascii	"srv\000"
 582 02e1 07       		.byte	0x7
 583 02e2 9703     		.2byte	0x397
 584 02e4 72000000 		.4byte	0x72
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 34


 585 02e8 00       		.byte	0
 586 02e9 0F       		.uleb128 0xf
 587 02ea D4050000 		.4byte	.LASF58
 588 02ee 07       		.byte	0x7
 589 02ef 8404     		.2byte	0x484
 590 02f1 03       		.byte	0x3
 591 02f2 03030000 		.4byte	0x303
 592 02f6 10       		.uleb128 0x10
 593 02f7 63747800 		.ascii	"ctx\000"
 594 02fb 07       		.byte	0x7
 595 02fc 8504     		.2byte	0x485
 596 02fe 91020000 		.4byte	0x291
 597 0302 00       		.byte	0
 598 0303 0D       		.uleb128 0xd
 599 0304 A8060000 		.4byte	.LASF59
 600 0308 05       		.byte	0x5
 601 0309 98       		.byte	0x98
 602 030a 03       		.byte	0x3
 603 030b 1B030000 		.4byte	0x31b
 604 030f 0E       		.uleb128 0xe
 605 0310 74696400 		.ascii	"tid\000"
 606 0314 05       		.byte	0x5
 607 0315 98       		.byte	0x98
 608 0316 CA000000 		.4byte	0xca
 609 031a 00       		.byte	0
 610 031b 11       		.uleb128 0x11
 611 031c 93040000 		.4byte	.LASF63
 612 0320 03       		.byte	0x3
 613 0321 8D01     		.2byte	0x18d
 614 0323 03       		.byte	0x3
 615 0324 0D       		.uleb128 0xd
 616 0325 91000000 		.4byte	.LASF60
 617 0329 05       		.byte	0x5
 618 032a A5       		.byte	0xa5
 619 032b 03       		.byte	0x3
 620 032c 3C030000 		.4byte	0x33c
 621 0330 0E       		.uleb128 0xe
 622 0331 74696400 		.ascii	"tid\000"
 623 0335 05       		.byte	0x5
 624 0336 A5       		.byte	0xa5
 625 0337 CA000000 		.4byte	0xca
 626 033b 00       		.byte	0
 627 033c 12       		.uleb128 0x12
 628 033d B9060000 		.4byte	.LASF61
 629 0341 04       		.byte	0x4
 630 0342 4D       		.byte	0x4d
 631 0343 A9000000 		.4byte	0xa9
 632 0347 03       		.byte	0x3
 633 0348 12       		.uleb128 0x12
 634 0349 D3010000 		.4byte	.LASF62
 635 034d 03       		.byte	0x3
 636 034e EE       		.byte	0xee
 637 034f CA000000 		.4byte	0xca
 638 0353 03       		.byte	0x3
 639 0354 11       		.uleb128 0x11
 640 0355 FD030000 		.4byte	.LASF64
 641 0359 08       		.byte	0x8
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 35


 642 035a AB01     		.2byte	0x1ab
 643 035c 03       		.byte	0x3
 644 035d 0F       		.uleb128 0xf
 645 035e 4B000000 		.4byte	.LASF65
 646 0362 07       		.byte	0x7
 647 0363 A303     		.2byte	0x3a3
 648 0365 03       		.byte	0x3
 649 0366 76030000 		.4byte	0x376
 650 036a 10       		.uleb128 0x10
 651 036b 696400   		.ascii	"id\000"
 652 036e 07       		.byte	0x7
 653 036f A303     		.2byte	0x3a3
 654 0371 72000000 		.4byte	0x72
 655 0375 00       		.byte	0
 656 0376 12       		.uleb128 0x12
 657 0377 70060000 		.4byte	.LASF66
 658 037b 09       		.byte	0x9
 659 037c 60       		.byte	0x60
 660 037d B4000000 		.4byte	0xb4
 661 0381 03       		.byte	0x3
 662 0382 0F       		.uleb128 0xf
 663 0383 2A060000 		.4byte	.LASF67
 664 0387 07       		.byte	0x7
 665 0388 D203     		.2byte	0x3d2
 666 038a 03       		.byte	0x3
 667 038b 9C030000 		.4byte	0x39c
 668 038f 10       		.uleb128 0x10
 669 0390 746D7000 		.ascii	"tmp\000"
 670 0394 07       		.byte	0x7
 671 0395 D203     		.2byte	0x3d2
 672 0397 CA000000 		.4byte	0xca
 673 039b 00       		.byte	0
 674 039c 11       		.uleb128 0x11
 675 039d 4E040000 		.4byte	.LASF68
 676 03a1 03       		.byte	0x3
 677 03a2 9A01     		.2byte	0x19a
 678 03a4 03       		.byte	0x3
 679 03a5 0D       		.uleb128 0xd
 680 03a6 21000000 		.4byte	.LASF69
 681 03aa 09       		.byte	0x9
 682 03ab 68       		.byte	0x68
 683 03ac 03       		.byte	0x3
 684 03ad BB030000 		.4byte	0x3bb
 685 03b1 0E       		.uleb128 0xe
 686 03b2 6600     		.ascii	"f\000"
 687 03b4 09       		.byte	0x9
 688 03b5 68       		.byte	0x68
 689 03b6 B4000000 		.4byte	0xb4
 690 03ba 00       		.byte	0
 691 03bb 0F       		.uleb128 0xf
 692 03bc 63010000 		.4byte	.LASF70
 693 03c0 07       		.byte	0x7
 694 03c1 A803     		.2byte	0x3a8
 695 03c3 03       		.byte	0x3
 696 03c4 D4030000 		.4byte	0x3d4
 697 03c8 10       		.uleb128 0x10
 698 03c9 696400   		.ascii	"id\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 36


 699 03cc 07       		.byte	0x7
 700 03cd A803     		.2byte	0x3a8
 701 03cf 72000000 		.4byte	0x72
 702 03d3 00       		.byte	0
 703 03d4 0F       		.uleb128 0xf
 704 03d5 26070000 		.4byte	.LASF71
 705 03d9 03       		.byte	0x3
 706 03da 3202     		.2byte	0x232
 707 03dc 03       		.byte	0x3
 708 03dd EE030000 		.4byte	0x3ee
 709 03e1 13       		.uleb128 0x13
 710 03e2 746D7000 		.ascii	"tmp\000"
 711 03e6 03       		.byte	0x3
 712 03e7 3402     		.2byte	0x234
 713 03e9 E1000000 		.4byte	0xe1
 714 03ed 00       		.byte	0
 715 03ee 14       		.uleb128 0x14
 716 03ef A6020000 		.4byte	.LASF104
 717 03f3 01       		.byte	0x1
 718 03f4 43       		.byte	0x43
 719 03f5 35020000 		.4byte	0x235
 720 03f9 00000000 		.4byte	.LFB70
 721 03fd D8000000 		.4byte	.LFE70-.LFB70
 722 0401 01       		.uleb128 0x1
 723 0402 9C       		.byte	0x9c
 724 0403 4C050000 		.4byte	0x54c
 725 0407 0C       		.uleb128 0xc
 726 0408 34040000 		.4byte	.LASF73
 727 040c 01       		.byte	0x1
 728 040d 45       		.byte	0x45
 729 040e CA000000 		.4byte	0xca
 730 0412 15       		.uleb128 0x15
 731 0413 727100   		.ascii	"rq\000"
 732 0416 01       		.byte	0x1
 733 0417 45       		.byte	0x45
 734 0418 CA000000 		.4byte	0xca
 735 041c 00000000 		.4byte	.LLST0
 736 0420 16       		.uleb128 0x16
 737 0421 657600   		.ascii	"ev\000"
 738 0424 01       		.byte	0x1
 739 0425 47       		.byte	0x47
 740 0426 35020000 		.4byte	0x235
 741 042a 01       		.uleb128 0x1
 742 042b 50       		.byte	0x50
 743 042c 17       		.uleb128 0x17
 744 042d 2A050000 		.4byte	.LASF74
 745 0431 01       		.byte	0x1
 746 0432 49       		.byte	0x49
 747 0433 B4000000 		.4byte	0xb4
 748 0437 01       		.uleb128 0x1
 749 0438 54       		.byte	0x54
 750 0439 18       		.uleb128 0x18
 751 043a 76030000 		.4byte	0x376
 752 043e 02000000 		.4byte	.LBB60
 753 0442 06000000 		.4byte	.LBE60-.LBB60
 754 0446 01       		.byte	0x1
 755 0447 49       		.byte	0x49
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 37


 756 0448 70040000 		.4byte	0x470
 757 044c 19       		.uleb128 0x19
 758 044d 9D020000 		.4byte	0x29d
 759 0451 02000000 		.4byte	.LBB61
 760 0455 06000000 		.4byte	.LBE61-.LBB61
 761 0459 09       		.byte	0x9
 762 045a 62       		.byte	0x62
 763 045b 1A       		.uleb128 0x1a
 764 045c 02000000 		.4byte	.LBB62
 765 0460 06000000 		.4byte	.LBE62-.LBB62
 766 0464 1B       		.uleb128 0x1b
 767 0465 AD020000 		.4byte	0x2ad
 768 0469 4A000000 		.4byte	.LLST1
 769 046d 00       		.byte	0
 770 046e 00       		.byte	0
 771 046f 00       		.byte	0
 772 0470 1C       		.uleb128 0x1c
 773 0471 48030000 		.4byte	0x348
 774 0475 08000000 		.4byte	.LBB63
 775 0479 04000000 		.4byte	.LBE63-.LBB63
 776 047d 01       		.byte	0x1
 777 047e 4F       		.byte	0x4f
 778 047f 1C       		.uleb128 0x1c
 779 0480 3C030000 		.4byte	0x33c
 780 0484 10000000 		.4byte	.LBB65
 781 0488 04000000 		.4byte	.LBE65-.LBB65
 782 048c 01       		.byte	0x1
 783 048d 63       		.byte	0x63
 784 048e 18       		.uleb128 0x18
 785 048f D4030000 		.4byte	0x3d4
 786 0493 6C000000 		.4byte	.LBB67
 787 0497 22000000 		.4byte	.LBE67-.LBB67
 788 049b 01       		.byte	0x1
 789 049c C2       		.byte	0xc2
 790 049d 0C050000 		.4byte	0x50c
 791 04a1 1A       		.uleb128 0x1a
 792 04a2 6C000000 		.4byte	.LBB68
 793 04a6 22000000 		.4byte	.LBE68-.LBB68
 794 04aa 1B       		.uleb128 0x1b
 795 04ab E1030000 		.4byte	0x3e1
 796 04af 5D000000 		.4byte	.LLST2
 797 04b3 1D       		.uleb128 0x1d
 798 04b4 03030000 		.4byte	0x303
 799 04b8 80000000 		.4byte	.LBB69
 800 04bc 0A000000 		.4byte	.LBE69-.LBB69
 801 04c0 03       		.byte	0x3
 802 04c1 3C02     		.2byte	0x23c
 803 04c3 DA040000 		.4byte	0x4da
 804 04c7 1E       		.uleb128 0x1e
 805 04c8 0F030000 		.4byte	0x30f
 806 04cc 7B000000 		.4byte	.LLST3
 807 04d0 1F       		.uleb128 0x1f
 808 04d1 88000000 		.4byte	.LVL6
 809 04d5 00070000 		.4byte	0x700
 810 04d9 00       		.byte	0
 811 04da 1D       		.uleb128 0x1d
 812 04db 24030000 		.4byte	0x324
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 38


 813 04df 8A000000 		.4byte	.LBB71
 814 04e3 04000000 		.4byte	.LBE71-.LBB71
 815 04e7 03       		.byte	0x3
 816 04e8 3F02     		.2byte	0x23f
 817 04ea 01050000 		.4byte	0x501
 818 04ee 1E       		.uleb128 0x1e
 819 04ef 30030000 		.4byte	0x330
 820 04f3 8E000000 		.4byte	.LLST4
 821 04f7 1F       		.uleb128 0x1f
 822 04f8 8E000000 		.4byte	.LVL8
 823 04fc 00070000 		.4byte	0x700
 824 0500 00       		.byte	0
 825 0501 1F       		.uleb128 0x1f
 826 0502 70000000 		.4byte	.LVL3
 827 0506 0B070000 		.4byte	0x70b
 828 050a 00       		.byte	0
 829 050b 00       		.byte	0
 830 050c 18       		.uleb128 0x18
 831 050d A5030000 		.4byte	0x3a5
 832 0511 B0000000 		.4byte	.LBB73
 833 0515 04000000 		.4byte	.LBE73-.LBB73
 834 0519 01       		.byte	0x1
 835 051a D6       		.byte	0xd6
 836 051b 42050000 		.4byte	0x542
 837 051f 1E       		.uleb128 0x1e
 838 0520 B1030000 		.4byte	0x3b1
 839 0524 A1000000 		.4byte	.LLST5
 840 0528 19       		.uleb128 0x19
 841 0529 B9020000 		.4byte	0x2b9
 842 052d B0000000 		.4byte	.LBB74
 843 0531 04000000 		.4byte	.LBE74-.LBB74
 844 0535 09       		.byte	0x9
 845 0536 6A       		.byte	0x6a
 846 0537 1E       		.uleb128 0x1e
 847 0538 C5020000 		.4byte	0x2c5
 848 053c A1000000 		.4byte	.LLST5
 849 0540 00       		.byte	0
 850 0541 00       		.byte	0
 851 0542 1F       		.uleb128 0x1f
 852 0543 10000000 		.4byte	.LVL2
 853 0547 17070000 		.4byte	0x717
 854 054b 00       		.byte	0
 855 054c 20       		.uleb128 0x20
 856 054d FE060000 		.4byte	.LASF75
 857 0551 04       		.byte	0x4
 858 0552 44       		.byte	0x44
 859 0553 A9000000 		.4byte	0xa9
 860 0557 20       		.uleb128 0x20
 861 0558 93010000 		.4byte	.LASF76
 862 055c 05       		.byte	0x5
 863 055d 48       		.byte	0x48
 864 055e CA000000 		.4byte	0xca
 865 0562 21       		.uleb128 0x21
 866 0563 79050000 		.4byte	0x579
 867 0567 72050000 		.4byte	0x572
 868 056b 22       		.uleb128 0x22
 869 056c 72050000 		.4byte	0x572
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 39


 870 0570 05       		.byte	0x5
 871 0571 00       		.byte	0
 872 0572 02       		.uleb128 0x2
 873 0573 04       		.byte	0x4
 874 0574 07       		.byte	0x7
 875 0575 98030000 		.4byte	.LASF77
 876 0579 23       		.uleb128 0x23
 877 057a A9000000 		.4byte	0xa9
 878 057e 20       		.uleb128 0x20
 879 057f 58070000 		.4byte	.LASF78
 880 0583 07       		.byte	0x7
 881 0584 B2       		.byte	0xb2
 882 0585 89050000 		.4byte	0x589
 883 0589 23       		.uleb128 0x23
 884 058a 62050000 		.4byte	0x562
 885 058e 20       		.uleb128 0x20
 886 058f 0D030000 		.4byte	.LASF79
 887 0593 07       		.byte	0x7
 888 0594 B3       		.byte	0xb3
 889 0595 99050000 		.4byte	0x599
 890 0599 23       		.uleb128 0x23
 891 059a 62050000 		.4byte	0x562
 892 059e 21       		.uleb128 0x21
 893 059f A9000000 		.4byte	0xa9
 894 05a3 AE050000 		.4byte	0x5ae
 895 05a7 22       		.uleb128 0x22
 896 05a8 72050000 		.4byte	0x572
 897 05ac 05       		.byte	0x5
 898 05ad 00       		.byte	0
 899 05ae 20       		.uleb128 0x20
 900 05af EA020000 		.4byte	.LASF80
 901 05b3 07       		.byte	0x7
 902 05b4 CA       		.byte	0xca
 903 05b5 9E050000 		.4byte	0x59e
 904 05b9 21       		.uleb128 0x21
 905 05ba CA000000 		.4byte	0xca
 906 05be C9050000 		.4byte	0x5c9
 907 05c2 22       		.uleb128 0x22
 908 05c3 72050000 		.4byte	0x572
 909 05c7 05       		.byte	0x5
 910 05c8 00       		.byte	0
 911 05c9 20       		.uleb128 0x20
 912 05ca 02050000 		.4byte	.LASF81
 913 05ce 07       		.byte	0x7
 914 05cf D2       		.byte	0xd2
 915 05d0 B9050000 		.4byte	0x5b9
 916 05d4 20       		.uleb128 0x20
 917 05d5 D6060000 		.4byte	.LASF82
 918 05d9 07       		.byte	0x7
 919 05da DA       		.byte	0xda
 920 05db 9E050000 		.4byte	0x59e
 921 05df 20       		.uleb128 0x20
 922 05e0 62000000 		.4byte	.LASF83
 923 05e4 07       		.byte	0x7
 924 05e5 E2       		.byte	0xe2
 925 05e6 CA000000 		.4byte	0xca
 926 05ea 20       		.uleb128 0x20
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 40


 927 05eb 66040000 		.4byte	.LASF84
 928 05ef 07       		.byte	0x7
 929 05f0 F7       		.byte	0xf7
 930 05f1 A9000000 		.4byte	0xa9
 931 05f5 24       		.uleb128 0x24
 932 05f6 F0050000 		.4byte	.LASF85
 933 05fa 07       		.byte	0x7
 934 05fb 3F01     		.2byte	0x13f
 935 05fd D5000000 		.4byte	0xd5
 936 0601 24       		.uleb128 0x24
 937 0602 0D050000 		.4byte	.LASF86
 938 0606 07       		.byte	0x7
 939 0607 5C01     		.2byte	0x15c
 940 0609 9E050000 		.4byte	0x59e
 941 060d 21       		.uleb128 0x21
 942 060e BF000000 		.4byte	0xbf
 943 0612 1D060000 		.4byte	0x61d
 944 0616 22       		.uleb128 0x22
 945 0617 72050000 		.4byte	0x572
 946 061b 05       		.byte	0x5
 947 061c 00       		.byte	0
 948 061d 24       		.uleb128 0x24
 949 061e 14020000 		.4byte	.LASF87
 950 0622 07       		.byte	0x7
 951 0623 6701     		.2byte	0x167
 952 0625 0D060000 		.4byte	0x60d
 953 0629 24       		.uleb128 0x24
 954 062a 0D000000 		.4byte	.LASF88
 955 062e 07       		.byte	0x7
 956 062f BA01     		.2byte	0x1ba
 957 0631 9E050000 		.4byte	0x59e
 958 0635 21       		.uleb128 0x21
 959 0636 45060000 		.4byte	0x645
 960 063a 45060000 		.4byte	0x645
 961 063e 22       		.uleb128 0x22
 962 063f 72050000 		.4byte	0x572
 963 0643 00       		.byte	0
 964 0644 00       		.byte	0
 965 0645 23       		.uleb128 0x23
 966 0646 42010000 		.4byte	0x142
 967 064a 24       		.uleb128 0x24
 968 064b AA040000 		.4byte	.LASF89
 969 064f 07       		.byte	0x7
 970 0650 CA02     		.2byte	0x2ca
 971 0652 56060000 		.4byte	0x656
 972 0656 23       		.uleb128 0x23
 973 0657 35060000 		.4byte	0x635
 974 065b 21       		.uleb128 0x21
 975 065c 6B060000 		.4byte	0x66b
 976 0660 6B060000 		.4byte	0x66b
 977 0664 22       		.uleb128 0x22
 978 0665 72050000 		.4byte	0x572
 979 0669 02       		.byte	0x2
 980 066a 00       		.byte	0
 981 066b 23       		.uleb128 0x23
 982 066c DF010000 		.4byte	0x1df
 983 0670 24       		.uleb128 0x24
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 41


 984 0671 36030000 		.4byte	.LASF90
 985 0675 07       		.byte	0x7
 986 0676 DD02     		.2byte	0x2dd
 987 0678 7C060000 		.4byte	0x67c
 988 067c 23       		.uleb128 0x23
 989 067d 5B060000 		.4byte	0x65b
 990 0681 21       		.uleb128 0x21
 991 0682 72010000 		.4byte	0x172
 992 0686 91060000 		.4byte	0x691
 993 068a 22       		.uleb128 0x22
 994 068b 72050000 		.4byte	0x572
 995 068f 00       		.byte	0
 996 0690 00       		.byte	0
 997 0691 24       		.uleb128 0x24
 998 0692 59060000 		.4byte	.LASF91
 999 0696 07       		.byte	0x7
 1000 0697 FB02     		.2byte	0x2fb
 1001 0699 81060000 		.4byte	0x681
 1002 069d 21       		.uleb128 0x21
 1003 069e 29020000 		.4byte	0x229
 1004 06a2 AD060000 		.4byte	0x6ad
 1005 06a6 22       		.uleb128 0x22
 1006 06a7 72050000 		.4byte	0x572
 1007 06ab 02       		.byte	0x2
 1008 06ac 00       		.byte	0
 1009 06ad 24       		.uleb128 0x24
 1010 06ae B1000000 		.4byte	.LASF92
 1011 06b2 07       		.byte	0x7
 1012 06b3 0403     		.2byte	0x304
 1013 06b5 9D060000 		.4byte	0x69d
 1014 06b9 20       		.uleb128 0x20
 1015 06ba 7B010000 		.4byte	.LASF93
 1016 06be 0A       		.byte	0xa
 1017 06bf 40       		.byte	0x40
 1018 06c0 A9000000 		.4byte	0xa9
 1019 06c4 20       		.uleb128 0x20
 1020 06c5 C4030000 		.4byte	.LASF94
 1021 06c9 0A       		.byte	0xa
 1022 06ca 47       		.byte	0x47
 1023 06cb B4000000 		.4byte	0xb4
 1024 06cf 20       		.uleb128 0x20
 1025 06d0 DD030000 		.4byte	.LASF95
 1026 06d4 0A       		.byte	0xa
 1027 06d5 4A       		.byte	0x4a
 1028 06d6 A9000000 		.4byte	0xa9
 1029 06da 21       		.uleb128 0x21
 1030 06db EA060000 		.4byte	0x6ea
 1031 06df EA060000 		.4byte	0x6ea
 1032 06e3 22       		.uleb128 0x22
 1033 06e4 72050000 		.4byte	0x572
 1034 06e8 FF       		.byte	0xff
 1035 06e9 00       		.byte	0
 1036 06ea 23       		.uleb128 0x23
 1037 06eb 7D000000 		.4byte	0x7d
 1038 06ef 24       		.uleb128 0x24
 1039 06f0 21010000 		.4byte	.LASF96
 1040 06f4 03       		.byte	0x3
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 42


 1041 06f5 AB01     		.2byte	0x1ab
 1042 06f7 FB060000 		.4byte	0x6fb
 1043 06fb 23       		.uleb128 0x23
 1044 06fc DA060000 		.4byte	0x6da
 1045 0700 25       		.uleb128 0x25
 1046 0701 E2060000 		.4byte	.LASF97
 1047 0705 E2060000 		.4byte	.LASF97
 1048 0709 05       		.byte	0x5
 1049 070a 4F       		.byte	0x4f
 1050 070b 26       		.uleb128 0x26
 1051 070c 85030000 		.4byte	.LASF98
 1052 0710 85030000 		.4byte	.LASF98
 1053 0714 03       		.byte	0x3
 1054 0715 E901     		.2byte	0x1e9
 1055 0717 26       		.uleb128 0x26
 1056 0718 B5010000 		.4byte	.LASF99
 1057 071c B5010000 		.4byte	.LASF99
 1058 0720 03       		.byte	0x3
 1059 0721 CB01     		.2byte	0x1cb
 1060 0723 00       		.byte	0
 1061              		.section	.debug_abbrev,"",%progbits
 1062              	.Ldebug_abbrev0:
 1063 0000 01       		.uleb128 0x1
 1064 0001 11       		.uleb128 0x11
 1065 0002 01       		.byte	0x1
 1066 0003 25       		.uleb128 0x25
 1067 0004 0E       		.uleb128 0xe
 1068 0005 13       		.uleb128 0x13
 1069 0006 0B       		.uleb128 0xb
 1070 0007 03       		.uleb128 0x3
 1071 0008 0E       		.uleb128 0xe
 1072 0009 1B       		.uleb128 0x1b
 1073 000a 0E       		.uleb128 0xe
 1074 000b 55       		.uleb128 0x55
 1075 000c 17       		.uleb128 0x17
 1076 000d 11       		.uleb128 0x11
 1077 000e 01       		.uleb128 0x1
 1078 000f 10       		.uleb128 0x10
 1079 0010 17       		.uleb128 0x17
 1080 0011 00       		.byte	0
 1081 0012 00       		.byte	0
 1082 0013 02       		.uleb128 0x2
 1083 0014 24       		.uleb128 0x24
 1084 0015 00       		.byte	0
 1085 0016 0B       		.uleb128 0xb
 1086 0017 0B       		.uleb128 0xb
 1087 0018 3E       		.uleb128 0x3e
 1088 0019 0B       		.uleb128 0xb
 1089 001a 03       		.uleb128 0x3
 1090 001b 0E       		.uleb128 0xe
 1091 001c 00       		.byte	0
 1092 001d 00       		.byte	0
 1093 001e 03       		.uleb128 0x3
 1094 001f 24       		.uleb128 0x24
 1095 0020 00       		.byte	0
 1096 0021 0B       		.uleb128 0xb
 1097 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 43


 1098 0023 3E       		.uleb128 0x3e
 1099 0024 0B       		.uleb128 0xb
 1100 0025 03       		.uleb128 0x3
 1101 0026 08       		.uleb128 0x8
 1102 0027 00       		.byte	0
 1103 0028 00       		.byte	0
 1104 0029 04       		.uleb128 0x4
 1105 002a 16       		.uleb128 0x16
 1106 002b 00       		.byte	0
 1107 002c 03       		.uleb128 0x3
 1108 002d 0E       		.uleb128 0xe
 1109 002e 3A       		.uleb128 0x3a
 1110 002f 0B       		.uleb128 0xb
 1111 0030 3B       		.uleb128 0x3b
 1112 0031 0B       		.uleb128 0xb
 1113 0032 49       		.uleb128 0x49
 1114 0033 13       		.uleb128 0x13
 1115 0034 00       		.byte	0
 1116 0035 00       		.byte	0
 1117 0036 05       		.uleb128 0x5
 1118 0037 16       		.uleb128 0x16
 1119 0038 00       		.byte	0
 1120 0039 03       		.uleb128 0x3
 1121 003a 0E       		.uleb128 0xe
 1122 003b 3A       		.uleb128 0x3a
 1123 003c 0B       		.uleb128 0xb
 1124 003d 3B       		.uleb128 0x3b
 1125 003e 05       		.uleb128 0x5
 1126 003f 49       		.uleb128 0x49
 1127 0040 13       		.uleb128 0x13
 1128 0041 00       		.byte	0
 1129 0042 00       		.byte	0
 1130 0043 06       		.uleb128 0x6
 1131 0044 13       		.uleb128 0x13
 1132 0045 01       		.byte	0x1
 1133 0046 0B       		.uleb128 0xb
 1134 0047 0B       		.uleb128 0xb
 1135 0048 3A       		.uleb128 0x3a
 1136 0049 0B       		.uleb128 0xb
 1137 004a 3B       		.uleb128 0x3b
 1138 004b 05       		.uleb128 0x5
 1139 004c 01       		.uleb128 0x1
 1140 004d 13       		.uleb128 0x13
 1141 004e 00       		.byte	0
 1142 004f 00       		.byte	0
 1143 0050 07       		.uleb128 0x7
 1144 0051 0D       		.uleb128 0xd
 1145 0052 00       		.byte	0
 1146 0053 03       		.uleb128 0x3
 1147 0054 0E       		.uleb128 0xe
 1148 0055 3A       		.uleb128 0x3a
 1149 0056 0B       		.uleb128 0xb
 1150 0057 3B       		.uleb128 0x3b
 1151 0058 05       		.uleb128 0x5
 1152 0059 49       		.uleb128 0x49
 1153 005a 13       		.uleb128 0x13
 1154 005b 38       		.uleb128 0x38
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 44


 1155 005c 0B       		.uleb128 0xb
 1156 005d 00       		.byte	0
 1157 005e 00       		.byte	0
 1158 005f 08       		.uleb128 0x8
 1159 0060 04       		.uleb128 0x4
 1160 0061 01       		.byte	0x1
 1161 0062 0B       		.uleb128 0xb
 1162 0063 0B       		.uleb128 0xb
 1163 0064 49       		.uleb128 0x49
 1164 0065 13       		.uleb128 0x13
 1165 0066 3A       		.uleb128 0x3a
 1166 0067 0B       		.uleb128 0xb
 1167 0068 3B       		.uleb128 0x3b
 1168 0069 05       		.uleb128 0x5
 1169 006a 01       		.uleb128 0x1
 1170 006b 13       		.uleb128 0x13
 1171 006c 00       		.byte	0
 1172 006d 00       		.byte	0
 1173 006e 09       		.uleb128 0x9
 1174 006f 28       		.uleb128 0x28
 1175 0070 00       		.byte	0
 1176 0071 03       		.uleb128 0x3
 1177 0072 0E       		.uleb128 0xe
 1178 0073 1C       		.uleb128 0x1c
 1179 0074 0B       		.uleb128 0xb
 1180 0075 00       		.byte	0
 1181 0076 00       		.byte	0
 1182 0077 0A       		.uleb128 0xa
 1183 0078 0D       		.uleb128 0xd
 1184 0079 00       		.byte	0
 1185 007a 03       		.uleb128 0x3
 1186 007b 08       		.uleb128 0x8
 1187 007c 3A       		.uleb128 0x3a
 1188 007d 0B       		.uleb128 0xb
 1189 007e 3B       		.uleb128 0x3b
 1190 007f 05       		.uleb128 0x5
 1191 0080 49       		.uleb128 0x49
 1192 0081 13       		.uleb128 0x13
 1193 0082 38       		.uleb128 0x38
 1194 0083 0B       		.uleb128 0xb
 1195 0084 00       		.byte	0
 1196 0085 00       		.byte	0
 1197 0086 0B       		.uleb128 0xb
 1198 0087 2E       		.uleb128 0x2e
 1199 0088 01       		.byte	0x1
 1200 0089 03       		.uleb128 0x3
 1201 008a 0E       		.uleb128 0xe
 1202 008b 3A       		.uleb128 0x3a
 1203 008c 0B       		.uleb128 0xb
 1204 008d 3B       		.uleb128 0x3b
 1205 008e 0B       		.uleb128 0xb
 1206 008f 27       		.uleb128 0x27
 1207 0090 19       		.uleb128 0x19
 1208 0091 49       		.uleb128 0x49
 1209 0092 13       		.uleb128 0x13
 1210 0093 20       		.uleb128 0x20
 1211 0094 0B       		.uleb128 0xb
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 45


 1212 0095 01       		.uleb128 0x1
 1213 0096 13       		.uleb128 0x13
 1214 0097 00       		.byte	0
 1215 0098 00       		.byte	0
 1216 0099 0C       		.uleb128 0xc
 1217 009a 34       		.uleb128 0x34
 1218 009b 00       		.byte	0
 1219 009c 03       		.uleb128 0x3
 1220 009d 0E       		.uleb128 0xe
 1221 009e 3A       		.uleb128 0x3a
 1222 009f 0B       		.uleb128 0xb
 1223 00a0 3B       		.uleb128 0x3b
 1224 00a1 0B       		.uleb128 0xb
 1225 00a2 49       		.uleb128 0x49
 1226 00a3 13       		.uleb128 0x13
 1227 00a4 00       		.byte	0
 1228 00a5 00       		.byte	0
 1229 00a6 0D       		.uleb128 0xd
 1230 00a7 2E       		.uleb128 0x2e
 1231 00a8 01       		.byte	0x1
 1232 00a9 03       		.uleb128 0x3
 1233 00aa 0E       		.uleb128 0xe
 1234 00ab 3A       		.uleb128 0x3a
 1235 00ac 0B       		.uleb128 0xb
 1236 00ad 3B       		.uleb128 0x3b
 1237 00ae 0B       		.uleb128 0xb
 1238 00af 27       		.uleb128 0x27
 1239 00b0 19       		.uleb128 0x19
 1240 00b1 20       		.uleb128 0x20
 1241 00b2 0B       		.uleb128 0xb
 1242 00b3 01       		.uleb128 0x1
 1243 00b4 13       		.uleb128 0x13
 1244 00b5 00       		.byte	0
 1245 00b6 00       		.byte	0
 1246 00b7 0E       		.uleb128 0xe
 1247 00b8 05       		.uleb128 0x5
 1248 00b9 00       		.byte	0
 1249 00ba 03       		.uleb128 0x3
 1250 00bb 08       		.uleb128 0x8
 1251 00bc 3A       		.uleb128 0x3a
 1252 00bd 0B       		.uleb128 0xb
 1253 00be 3B       		.uleb128 0x3b
 1254 00bf 0B       		.uleb128 0xb
 1255 00c0 49       		.uleb128 0x49
 1256 00c1 13       		.uleb128 0x13
 1257 00c2 00       		.byte	0
 1258 00c3 00       		.byte	0
 1259 00c4 0F       		.uleb128 0xf
 1260 00c5 2E       		.uleb128 0x2e
 1261 00c6 01       		.byte	0x1
 1262 00c7 03       		.uleb128 0x3
 1263 00c8 0E       		.uleb128 0xe
 1264 00c9 3A       		.uleb128 0x3a
 1265 00ca 0B       		.uleb128 0xb
 1266 00cb 3B       		.uleb128 0x3b
 1267 00cc 05       		.uleb128 0x5
 1268 00cd 27       		.uleb128 0x27
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 46


 1269 00ce 19       		.uleb128 0x19
 1270 00cf 20       		.uleb128 0x20
 1271 00d0 0B       		.uleb128 0xb
 1272 00d1 01       		.uleb128 0x1
 1273 00d2 13       		.uleb128 0x13
 1274 00d3 00       		.byte	0
 1275 00d4 00       		.byte	0
 1276 00d5 10       		.uleb128 0x10
 1277 00d6 05       		.uleb128 0x5
 1278 00d7 00       		.byte	0
 1279 00d8 03       		.uleb128 0x3
 1280 00d9 08       		.uleb128 0x8
 1281 00da 3A       		.uleb128 0x3a
 1282 00db 0B       		.uleb128 0xb
 1283 00dc 3B       		.uleb128 0x3b
 1284 00dd 05       		.uleb128 0x5
 1285 00de 49       		.uleb128 0x49
 1286 00df 13       		.uleb128 0x13
 1287 00e0 00       		.byte	0
 1288 00e1 00       		.byte	0
 1289 00e2 11       		.uleb128 0x11
 1290 00e3 2E       		.uleb128 0x2e
 1291 00e4 00       		.byte	0
 1292 00e5 03       		.uleb128 0x3
 1293 00e6 0E       		.uleb128 0xe
 1294 00e7 3A       		.uleb128 0x3a
 1295 00e8 0B       		.uleb128 0xb
 1296 00e9 3B       		.uleb128 0x3b
 1297 00ea 05       		.uleb128 0x5
 1298 00eb 27       		.uleb128 0x27
 1299 00ec 19       		.uleb128 0x19
 1300 00ed 20       		.uleb128 0x20
 1301 00ee 0B       		.uleb128 0xb
 1302 00ef 00       		.byte	0
 1303 00f0 00       		.byte	0
 1304 00f1 12       		.uleb128 0x12
 1305 00f2 2E       		.uleb128 0x2e
 1306 00f3 00       		.byte	0
 1307 00f4 03       		.uleb128 0x3
 1308 00f5 0E       		.uleb128 0xe
 1309 00f6 3A       		.uleb128 0x3a
 1310 00f7 0B       		.uleb128 0xb
 1311 00f8 3B       		.uleb128 0x3b
 1312 00f9 0B       		.uleb128 0xb
 1313 00fa 27       		.uleb128 0x27
 1314 00fb 19       		.uleb128 0x19
 1315 00fc 49       		.uleb128 0x49
 1316 00fd 13       		.uleb128 0x13
 1317 00fe 20       		.uleb128 0x20
 1318 00ff 0B       		.uleb128 0xb
 1319 0100 00       		.byte	0
 1320 0101 00       		.byte	0
 1321 0102 13       		.uleb128 0x13
 1322 0103 34       		.uleb128 0x34
 1323 0104 00       		.byte	0
 1324 0105 03       		.uleb128 0x3
 1325 0106 08       		.uleb128 0x8
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 47


 1326 0107 3A       		.uleb128 0x3a
 1327 0108 0B       		.uleb128 0xb
 1328 0109 3B       		.uleb128 0x3b
 1329 010a 05       		.uleb128 0x5
 1330 010b 49       		.uleb128 0x49
 1331 010c 13       		.uleb128 0x13
 1332 010d 00       		.byte	0
 1333 010e 00       		.byte	0
 1334 010f 14       		.uleb128 0x14
 1335 0110 2E       		.uleb128 0x2e
 1336 0111 01       		.byte	0x1
 1337 0112 3F       		.uleb128 0x3f
 1338 0113 19       		.uleb128 0x19
 1339 0114 03       		.uleb128 0x3
 1340 0115 0E       		.uleb128 0xe
 1341 0116 3A       		.uleb128 0x3a
 1342 0117 0B       		.uleb128 0xb
 1343 0118 3B       		.uleb128 0x3b
 1344 0119 0B       		.uleb128 0xb
 1345 011a 27       		.uleb128 0x27
 1346 011b 19       		.uleb128 0x19
 1347 011c 49       		.uleb128 0x49
 1348 011d 13       		.uleb128 0x13
 1349 011e 11       		.uleb128 0x11
 1350 011f 01       		.uleb128 0x1
 1351 0120 12       		.uleb128 0x12
 1352 0121 06       		.uleb128 0x6
 1353 0122 40       		.uleb128 0x40
 1354 0123 18       		.uleb128 0x18
 1355 0124 9742     		.uleb128 0x2117
 1356 0126 19       		.uleb128 0x19
 1357 0127 01       		.uleb128 0x1
 1358 0128 13       		.uleb128 0x13
 1359 0129 00       		.byte	0
 1360 012a 00       		.byte	0
 1361 012b 15       		.uleb128 0x15
 1362 012c 34       		.uleb128 0x34
 1363 012d 00       		.byte	0
 1364 012e 03       		.uleb128 0x3
 1365 012f 08       		.uleb128 0x8
 1366 0130 3A       		.uleb128 0x3a
 1367 0131 0B       		.uleb128 0xb
 1368 0132 3B       		.uleb128 0x3b
 1369 0133 0B       		.uleb128 0xb
 1370 0134 49       		.uleb128 0x49
 1371 0135 13       		.uleb128 0x13
 1372 0136 02       		.uleb128 0x2
 1373 0137 17       		.uleb128 0x17
 1374 0138 00       		.byte	0
 1375 0139 00       		.byte	0
 1376 013a 16       		.uleb128 0x16
 1377 013b 34       		.uleb128 0x34
 1378 013c 00       		.byte	0
 1379 013d 03       		.uleb128 0x3
 1380 013e 08       		.uleb128 0x8
 1381 013f 3A       		.uleb128 0x3a
 1382 0140 0B       		.uleb128 0xb
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 48


 1383 0141 3B       		.uleb128 0x3b
 1384 0142 0B       		.uleb128 0xb
 1385 0143 49       		.uleb128 0x49
 1386 0144 13       		.uleb128 0x13
 1387 0145 02       		.uleb128 0x2
 1388 0146 18       		.uleb128 0x18
 1389 0147 00       		.byte	0
 1390 0148 00       		.byte	0
 1391 0149 17       		.uleb128 0x17
 1392 014a 34       		.uleb128 0x34
 1393 014b 00       		.byte	0
 1394 014c 03       		.uleb128 0x3
 1395 014d 0E       		.uleb128 0xe
 1396 014e 3A       		.uleb128 0x3a
 1397 014f 0B       		.uleb128 0xb
 1398 0150 3B       		.uleb128 0x3b
 1399 0151 0B       		.uleb128 0xb
 1400 0152 49       		.uleb128 0x49
 1401 0153 13       		.uleb128 0x13
 1402 0154 02       		.uleb128 0x2
 1403 0155 18       		.uleb128 0x18
 1404 0156 00       		.byte	0
 1405 0157 00       		.byte	0
 1406 0158 18       		.uleb128 0x18
 1407 0159 1D       		.uleb128 0x1d
 1408 015a 01       		.byte	0x1
 1409 015b 31       		.uleb128 0x31
 1410 015c 13       		.uleb128 0x13
 1411 015d 11       		.uleb128 0x11
 1412 015e 01       		.uleb128 0x1
 1413 015f 12       		.uleb128 0x12
 1414 0160 06       		.uleb128 0x6
 1415 0161 58       		.uleb128 0x58
 1416 0162 0B       		.uleb128 0xb
 1417 0163 59       		.uleb128 0x59
 1418 0164 0B       		.uleb128 0xb
 1419 0165 01       		.uleb128 0x1
 1420 0166 13       		.uleb128 0x13
 1421 0167 00       		.byte	0
 1422 0168 00       		.byte	0
 1423 0169 19       		.uleb128 0x19
 1424 016a 1D       		.uleb128 0x1d
 1425 016b 01       		.byte	0x1
 1426 016c 31       		.uleb128 0x31
 1427 016d 13       		.uleb128 0x13
 1428 016e 11       		.uleb128 0x11
 1429 016f 01       		.uleb128 0x1
 1430 0170 12       		.uleb128 0x12
 1431 0171 06       		.uleb128 0x6
 1432 0172 58       		.uleb128 0x58
 1433 0173 0B       		.uleb128 0xb
 1434 0174 59       		.uleb128 0x59
 1435 0175 0B       		.uleb128 0xb
 1436 0176 00       		.byte	0
 1437 0177 00       		.byte	0
 1438 0178 1A       		.uleb128 0x1a
 1439 0179 0B       		.uleb128 0xb
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 49


 1440 017a 01       		.byte	0x1
 1441 017b 11       		.uleb128 0x11
 1442 017c 01       		.uleb128 0x1
 1443 017d 12       		.uleb128 0x12
 1444 017e 06       		.uleb128 0x6
 1445 017f 00       		.byte	0
 1446 0180 00       		.byte	0
 1447 0181 1B       		.uleb128 0x1b
 1448 0182 34       		.uleb128 0x34
 1449 0183 00       		.byte	0
 1450 0184 31       		.uleb128 0x31
 1451 0185 13       		.uleb128 0x13
 1452 0186 02       		.uleb128 0x2
 1453 0187 17       		.uleb128 0x17
 1454 0188 00       		.byte	0
 1455 0189 00       		.byte	0
 1456 018a 1C       		.uleb128 0x1c
 1457 018b 1D       		.uleb128 0x1d
 1458 018c 00       		.byte	0
 1459 018d 31       		.uleb128 0x31
 1460 018e 13       		.uleb128 0x13
 1461 018f 11       		.uleb128 0x11
 1462 0190 01       		.uleb128 0x1
 1463 0191 12       		.uleb128 0x12
 1464 0192 06       		.uleb128 0x6
 1465 0193 58       		.uleb128 0x58
 1466 0194 0B       		.uleb128 0xb
 1467 0195 59       		.uleb128 0x59
 1468 0196 0B       		.uleb128 0xb
 1469 0197 00       		.byte	0
 1470 0198 00       		.byte	0
 1471 0199 1D       		.uleb128 0x1d
 1472 019a 1D       		.uleb128 0x1d
 1473 019b 01       		.byte	0x1
 1474 019c 31       		.uleb128 0x31
 1475 019d 13       		.uleb128 0x13
 1476 019e 11       		.uleb128 0x11
 1477 019f 01       		.uleb128 0x1
 1478 01a0 12       		.uleb128 0x12
 1479 01a1 06       		.uleb128 0x6
 1480 01a2 58       		.uleb128 0x58
 1481 01a3 0B       		.uleb128 0xb
 1482 01a4 59       		.uleb128 0x59
 1483 01a5 05       		.uleb128 0x5
 1484 01a6 01       		.uleb128 0x1
 1485 01a7 13       		.uleb128 0x13
 1486 01a8 00       		.byte	0
 1487 01a9 00       		.byte	0
 1488 01aa 1E       		.uleb128 0x1e
 1489 01ab 05       		.uleb128 0x5
 1490 01ac 00       		.byte	0
 1491 01ad 31       		.uleb128 0x31
 1492 01ae 13       		.uleb128 0x13
 1493 01af 02       		.uleb128 0x2
 1494 01b0 17       		.uleb128 0x17
 1495 01b1 00       		.byte	0
 1496 01b2 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 50


 1497 01b3 1F       		.uleb128 0x1f
 1498 01b4 898201   		.uleb128 0x4109
 1499 01b7 00       		.byte	0
 1500 01b8 11       		.uleb128 0x11
 1501 01b9 01       		.uleb128 0x1
 1502 01ba 31       		.uleb128 0x31
 1503 01bb 13       		.uleb128 0x13
 1504 01bc 00       		.byte	0
 1505 01bd 00       		.byte	0
 1506 01be 20       		.uleb128 0x20
 1507 01bf 34       		.uleb128 0x34
 1508 01c0 00       		.byte	0
 1509 01c1 03       		.uleb128 0x3
 1510 01c2 0E       		.uleb128 0xe
 1511 01c3 3A       		.uleb128 0x3a
 1512 01c4 0B       		.uleb128 0xb
 1513 01c5 3B       		.uleb128 0x3b
 1514 01c6 0B       		.uleb128 0xb
 1515 01c7 49       		.uleb128 0x49
 1516 01c8 13       		.uleb128 0x13
 1517 01c9 3F       		.uleb128 0x3f
 1518 01ca 19       		.uleb128 0x19
 1519 01cb 3C       		.uleb128 0x3c
 1520 01cc 19       		.uleb128 0x19
 1521 01cd 00       		.byte	0
 1522 01ce 00       		.byte	0
 1523 01cf 21       		.uleb128 0x21
 1524 01d0 01       		.uleb128 0x1
 1525 01d1 01       		.byte	0x1
 1526 01d2 49       		.uleb128 0x49
 1527 01d3 13       		.uleb128 0x13
 1528 01d4 01       		.uleb128 0x1
 1529 01d5 13       		.uleb128 0x13
 1530 01d6 00       		.byte	0
 1531 01d7 00       		.byte	0
 1532 01d8 22       		.uleb128 0x22
 1533 01d9 21       		.uleb128 0x21
 1534 01da 00       		.byte	0
 1535 01db 49       		.uleb128 0x49
 1536 01dc 13       		.uleb128 0x13
 1537 01dd 2F       		.uleb128 0x2f
 1538 01de 0B       		.uleb128 0xb
 1539 01df 00       		.byte	0
 1540 01e0 00       		.byte	0
 1541 01e1 23       		.uleb128 0x23
 1542 01e2 26       		.uleb128 0x26
 1543 01e3 00       		.byte	0
 1544 01e4 49       		.uleb128 0x49
 1545 01e5 13       		.uleb128 0x13
 1546 01e6 00       		.byte	0
 1547 01e7 00       		.byte	0
 1548 01e8 24       		.uleb128 0x24
 1549 01e9 34       		.uleb128 0x34
 1550 01ea 00       		.byte	0
 1551 01eb 03       		.uleb128 0x3
 1552 01ec 0E       		.uleb128 0xe
 1553 01ed 3A       		.uleb128 0x3a
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 51


 1554 01ee 0B       		.uleb128 0xb
 1555 01ef 3B       		.uleb128 0x3b
 1556 01f0 05       		.uleb128 0x5
 1557 01f1 49       		.uleb128 0x49
 1558 01f2 13       		.uleb128 0x13
 1559 01f3 3F       		.uleb128 0x3f
 1560 01f4 19       		.uleb128 0x19
 1561 01f5 3C       		.uleb128 0x3c
 1562 01f6 19       		.uleb128 0x19
 1563 01f7 00       		.byte	0
 1564 01f8 00       		.byte	0
 1565 01f9 25       		.uleb128 0x25
 1566 01fa 2E       		.uleb128 0x2e
 1567 01fb 00       		.byte	0
 1568 01fc 3F       		.uleb128 0x3f
 1569 01fd 19       		.uleb128 0x19
 1570 01fe 3C       		.uleb128 0x3c
 1571 01ff 19       		.uleb128 0x19
 1572 0200 6E       		.uleb128 0x6e
 1573 0201 0E       		.uleb128 0xe
 1574 0202 03       		.uleb128 0x3
 1575 0203 0E       		.uleb128 0xe
 1576 0204 3A       		.uleb128 0x3a
 1577 0205 0B       		.uleb128 0xb
 1578 0206 3B       		.uleb128 0x3b
 1579 0207 0B       		.uleb128 0xb
 1580 0208 00       		.byte	0
 1581 0209 00       		.byte	0
 1582 020a 26       		.uleb128 0x26
 1583 020b 2E       		.uleb128 0x2e
 1584 020c 00       		.byte	0
 1585 020d 3F       		.uleb128 0x3f
 1586 020e 19       		.uleb128 0x19
 1587 020f 3C       		.uleb128 0x3c
 1588 0210 19       		.uleb128 0x19
 1589 0211 6E       		.uleb128 0x6e
 1590 0212 0E       		.uleb128 0xe
 1591 0213 03       		.uleb128 0x3
 1592 0214 0E       		.uleb128 0xe
 1593 0215 3A       		.uleb128 0x3a
 1594 0216 0B       		.uleb128 0xb
 1595 0217 3B       		.uleb128 0x3b
 1596 0218 05       		.uleb128 0x5
 1597 0219 00       		.byte	0
 1598 021a 00       		.byte	0
 1599 021b 00       		.byte	0
 1600              		.section	.debug_loc,"",%progbits
 1601              	.Ldebug_loc0:
 1602              	.LLST0:
 1603 0000 10000000 		.4byte	.LVL2
 1604 0004 6F000000 		.4byte	.LVL3-1
 1605 0008 0100     		.2byte	0x1
 1606 000a 50       		.byte	0x50
 1607 000b 9E000000 		.4byte	.LVL10
 1608 000f A0000000 		.4byte	.LVL11
 1609 0013 0100     		.2byte	0x1
 1610 0015 50       		.byte	0x50
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 52


 1611 0016 A2000000 		.4byte	.LVL12
 1612 001a A4000000 		.4byte	.LVL13
 1613 001e 0100     		.2byte	0x1
 1614 0020 50       		.byte	0x50
 1615 0021 A6000000 		.4byte	.LVL14
 1616 0025 A8000000 		.4byte	.LVL15
 1617 0029 0100     		.2byte	0x1
 1618 002b 50       		.byte	0x50
 1619 002c AA000000 		.4byte	.LVL16
 1620 0030 AC000000 		.4byte	.LVL17
 1621 0034 0100     		.2byte	0x1
 1622 0036 50       		.byte	0x50
 1623 0037 AE000000 		.4byte	.LVL18
 1624 003b B0000000 		.4byte	.LVL19
 1625 003f 0100     		.2byte	0x1
 1626 0041 50       		.byte	0x50
 1627 0042 00000000 		.4byte	0
 1628 0046 00000000 		.4byte	0
 1629              	.LLST1:
 1630 004a 06000000 		.4byte	.LVL0
 1631 004e 08000000 		.4byte	.LVL1
 1632 0052 0100     		.2byte	0x1
 1633 0054 54       		.byte	0x54
 1634 0055 00000000 		.4byte	0
 1635 0059 00000000 		.4byte	0
 1636              	.LLST2:
 1637 005d 70000000 		.4byte	.LVL3
 1638 0061 84000000 		.4byte	.LVL5
 1639 0065 0100     		.2byte	0x1
 1640 0067 50       		.byte	0x50
 1641 0068 8A000000 		.4byte	.LVL7
 1642 006c 8D000000 		.4byte	.LVL8-1
 1643 0070 0100     		.2byte	0x1
 1644 0072 50       		.byte	0x50
 1645 0073 00000000 		.4byte	0
 1646 0077 00000000 		.4byte	0
 1647              	.LLST3:
 1648 007b 80000000 		.4byte	.LVL4
 1649 007f 84000000 		.4byte	.LVL5
 1650 0083 0100     		.2byte	0x1
 1651 0085 50       		.byte	0x50
 1652 0086 00000000 		.4byte	0
 1653 008a 00000000 		.4byte	0
 1654              	.LLST4:
 1655 008e 8A000000 		.4byte	.LVL7
 1656 0092 8D000000 		.4byte	.LVL8-1
 1657 0096 0100     		.2byte	0x1
 1658 0098 50       		.byte	0x50
 1659 0099 00000000 		.4byte	0
 1660 009d 00000000 		.4byte	0
 1661              	.LLST5:
 1662 00a1 B0000000 		.4byte	.LVL19
 1663 00a5 B4000000 		.4byte	.LVL20
 1664 00a9 0100     		.2byte	0x1
 1665 00ab 54       		.byte	0x54
 1666 00ac 00000000 		.4byte	0
 1667 00b0 00000000 		.4byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 53


 1668              		.section	.debug_aranges,"",%progbits
 1669 0000 1C000000 		.4byte	0x1c
 1670 0004 0200     		.2byte	0x2
 1671 0006 00000000 		.4byte	.Ldebug_info0
 1672 000a 04       		.byte	0x4
 1673 000b 00       		.byte	0
 1674 000c 0000     		.2byte	0
 1675 000e 0000     		.2byte	0
 1676 0010 00000000 		.4byte	.LFB70
 1677 0014 D8000000 		.4byte	.LFE70-.LFB70
 1678 0018 00000000 		.4byte	0
 1679 001c 00000000 		.4byte	0
 1680              		.section	.debug_ranges,"",%progbits
 1681              	.Ldebug_ranges0:
 1682 0000 00000000 		.4byte	.LFB70
 1683 0004 D8000000 		.4byte	.LFE70
 1684 0008 00000000 		.4byte	0
 1685 000c 00000000 		.4byte	0
 1686              		.section	.debug_line,"",%progbits
 1687              	.Ldebug_line0:
 1688 0000 EB010000 		.section	.debug_str,"MS",%progbits,1
 1688      02007801 
 1688      00000201 
 1688      FB0E0D00 
 1688      01010101 
 1689              	.LASF46:
 1690 0000 49535232 		.ascii	"ISR2_Context\000"
 1690      5F436F6E 
 1690      74657874 
 1690      00
 1691              	.LASF88:
 1692 000d 45455F74 		.ascii	"EE_th_resource_last\000"
 1692      685F7265 
 1692      736F7572 
 1692      63655F6C 
 1692      61737400 
 1693              	.LASF69:
 1694 0021 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1694      616C5F65 
 1694      6E645F6E 
 1694      65737465 
 1694      645F7072 
 1695              	.LASF41:
 1696 003d 6E657874 		.ascii	"next\000"
 1696      00
 1697              	.LASF21:
 1698 0042 5469636B 		.ascii	"TickType\000"
 1698      54797065 
 1698      00
 1699              	.LASF65:
 1700 004b 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1700      5254495F 
 1700      7365745F 
 1700      73657276 
 1700      6963655F 
 1701              	.LASF83:
 1702 0062 45455F73 		.ascii	"EE_stkfirst\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 54


 1702      746B6669 
 1702      72737400 
 1703              	.LASF17:
 1704 006e 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1704      59504542 
 1704      4F4F4C00 
 1705              	.LASF7:
 1706 007a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1706      206C6F6E 
 1706      6720756E 
 1706      7369676E 
 1706      65642069 
 1707              	.LASF60:
 1708 0091 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1708      616C5F72 
 1708      65616479 
 1708      32737461 
 1708      636B6564 
 1709              	.LASF43:
 1710 00a6 53746174 		.ascii	"StatusType\000"
 1710      75735479 
 1710      706500
 1711              	.LASF92:
 1712 00b1 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 1712      6F5F636F 
 1712      756E7465 
 1712      725F6F62 
 1712      6A656374 
 1713              	.LASF40:
 1714 00ca 64656C74 		.ascii	"delta\000"
 1714      6100
 1715              	.LASF37:
 1716 00d0 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 1716      6F5F636F 
 1716      756E7465 
 1716      725F6F62 
 1716      6A656374 
 1717              	.LASF20:
 1718 00ee 5461736B 		.ascii	"TaskType\000"
 1718      54797065 
 1718      00
 1719              	.LASF24:
 1720 00f7 6D617861 		.ascii	"maxallowedvalue\000"
 1720      6C6C6F77 
 1720      65647661 
 1720      6C756500 
 1721              	.LASF6:
 1722 0107 6C6F6E67 		.ascii	"long long int\000"
 1722      206C6F6E 
 1722      6720696E 
 1722      7400
 1723              	.LASF0:
 1724 0115 7369676E 		.ascii	"signed char\000"
 1724      65642063 
 1724      68617200 
 1725              	.LASF96:
 1726 0121 45455F72 		.ascii	"EE_rq_lookup\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 55


 1726      715F6C6F 
 1726      6F6B7570 
 1726      00
 1727              	.LASF30:
 1728 012e 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 1728      6F5F636F 
 1728      756E7465 
 1728      725F5241 
 1728      4D5F7479 
 1729              	.LASF50:
 1730 0145 506F7374 		.ascii	"PostTaskHook_Context\000"
 1730      5461736B 
 1730      486F6F6B 
 1730      5F436F6E 
 1730      74657874 
 1731              	.LASF4:
 1732 015a 6C6F6E67 		.ascii	"long int\000"
 1732      20696E74 
 1732      00
 1733              	.LASF70:
 1734 0163 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1734      5254495F 
 1734      7365745F 
 1734      73657276 
 1734      6963655F 
 1735              	.LASF93:
 1736 017b 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1736      6F5F4952 
 1736      515F6469 
 1736      7361626C 
 1736      655F636F 
 1737              	.LASF76:
 1738 0193 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1738      74645F65 
 1738      6E646379 
 1738      636C655F 
 1738      6E657874 
 1739              	.LASF26:
 1740 01ac 6D696E63 		.ascii	"mincycle\000"
 1740      79636C65 
 1740      00
 1741              	.LASF99:
 1742 01b5 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1742      715F7175 
 1742      65727966 
 1742      69727374 
 1742      00
 1743              	.LASF18:
 1744 01c6 45455F54 		.ascii	"EE_TID\000"
 1744      494400
 1745              	.LASF28:
 1746 01cd 76616C75 		.ascii	"value\000"
 1746      6500
 1747              	.LASF62:
 1748 01d3 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1748      746B5F71 
 1748      75657279 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 56


 1748      66697273 
 1748      7400
 1749              	.LASF8:
 1750 01e5 756E7369 		.ascii	"unsigned int\000"
 1750      676E6564 
 1750      20696E74 
 1750      00
 1751              	.LASF11:
 1752 01f2 45455F49 		.ascii	"EE_INT8\000"
 1752      4E543800 
 1753              	.LASF15:
 1754 01fa 45455F55 		.ascii	"EE_UREG\000"
 1754      52454700 
 1755              	.LASF5:
 1756 0202 6C6F6E67 		.ascii	"long unsigned int\000"
 1756      20756E73 
 1756      69676E65 
 1756      6420696E 
 1756      7400
 1757              	.LASF87:
 1758 0214 45455F74 		.ascii	"EE_th_waswaiting\000"
 1758      685F7761 
 1758      73776169 
 1758      74696E67 
 1758      00
 1759              	.LASF102:
 1760 0225 433A5C4D 		.ascii	"C:\\My_Files\\College_Documents\\AMA EOS\\EOS\\LAB\\"
 1760      795F4669 
 1760      6C65735C 
 1760      436F6C6C 
 1760      6567655F 
 1761 0253 4C41425F 		.ascii	"LAB_2_Submission\\Json Parser\\code\\w06_criticalRe"
 1761      325F5375 
 1761      626D6973 
 1761      73696F6E 
 1761      5C4A736F 
 1762 0283 67696F6E 		.ascii	"gion.cydsn\000"
 1762      2E637964 
 1762      736E00
 1763              	.LASF36:
 1764 028e 6B696E64 		.ascii	"kind\000"
 1764      00
 1765              	.LASF3:
 1766 0293 73686F72 		.ascii	"short unsigned int\000"
 1766      7420756E 
 1766      7369676E 
 1766      65642069 
 1766      6E7400
 1767              	.LASF104:
 1768 02a6 45455F6F 		.ascii	"EE_oo_Schedule\000"
 1768      6F5F5363 
 1768      68656475 
 1768      6C6500
 1769              	.LASF33:
 1770 02b5 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 1770      6F5F636F 
 1770      756E7465 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 57


 1770      725F6F62 
 1770      6A656374 
 1771              	.LASF53:
 1772 02d4 416C6172 		.ascii	"AlarmCallback_Context\000"
 1772      6D43616C 
 1772      6C626163 
 1772      6B5F436F 
 1772      6E746578 
 1773              	.LASF80:
 1774 02ea 45455F74 		.ascii	"EE_th_status\000"
 1774      685F7374 
 1774      61747573 
 1774      00
 1775              	.LASF34:
 1776 02f7 436F756E 		.ascii	"CounterObjectKindType\000"
 1776      7465724F 
 1776      626A6563 
 1776      744B696E 
 1776      64547970 
 1777              	.LASF79:
 1778 030d 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1778      685F6469 
 1778      73706174 
 1778      63685F70 
 1778      72696F00 
 1779              	.LASF10:
 1780 0321 45455F55 		.ascii	"EE_UINT8\000"
 1780      494E5438 
 1780      00
 1781              	.LASF23:
 1782 032a 436F756E 		.ascii	"CounterType\000"
 1782      74657254 
 1782      79706500 
 1783              	.LASF90:
 1784 0336 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 1784      6F5F636F 
 1784      756E7465 
 1784      725F6F62 
 1784      6A656374 
 1785              	.LASF19:
 1786 034f 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1786      5950455F 
 1786      52515F4D 
 1786      41534B00 
 1787              	.LASF49:
 1788 035f 50726554 		.ascii	"PreTaskHook_Context\000"
 1788      61736B48 
 1788      6F6F6B5F 
 1788      436F6E74 
 1788      65787400 
 1789              	.LASF47:
 1790 0373 4572726F 		.ascii	"ErrorHook_Context\000"
 1790      72486F6F 
 1790      6B5F436F 
 1790      6E746578 
 1790      7400
 1791              	.LASF98:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 58


 1792 0385 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1792      71327374 
 1792      6B5F6578 
 1792      6368616E 
 1792      676500
 1793              	.LASF77:
 1794 0398 73697A65 		.ascii	"sizetype\000"
 1794      74797065 
 1794      00
 1795              	.LASF48:
 1796 03a1 50726F74 		.ascii	"ProtectionHook_Context\000"
 1796      65637469 
 1796      6F6E486F 
 1796      6F6B5F43 
 1796      6F6E7465 
 1797              	.LASF9:
 1798 03b8 6C6F6E67 		.ascii	"long double\000"
 1798      20646F75 
 1798      626C6500 
 1799              	.LASF94:
 1800 03c4 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1800      6F5F4952 
 1800      515F7375 
 1800      7370656E 
 1800      645F7374 
 1801              	.LASF95:
 1802 03dd 45455F41 		.ascii	"EE_ApplicationMode\000"
 1802      70706C69 
 1802      63617469 
 1802      6F6E4D6F 
 1802      646500
 1803              	.LASF54:
 1804 03f0 49646C65 		.ascii	"Idle_Context\000"
 1804      5F436F6E 
 1804      74657874 
 1804      00
 1805              	.LASF64:
 1806 03fd 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 1806      735F6D6F 
 1806      6E69746F 
 1806      72696E67 
 1806      5F746865 
 1807              	.LASF25:
 1808 0418 7469636B 		.ascii	"ticksperbase\000"
 1808      73706572 
 1808      62617365 
 1808      00
 1809              	.LASF44:
 1810 0425 4B65726E 		.ascii	"Kernel_Context\000"
 1810      656C5F43 
 1810      6F6E7465 
 1810      787400
 1811              	.LASF73:
 1812 0434 63757272 		.ascii	"current\000"
 1812      656E7400 
 1813              	.LASF45:
 1814 043c 5441534B 		.ascii	"TASK_Context\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 59


 1814      5F436F6E 
 1814      74657874 
 1814      00
 1815              	.LASF38:
 1816 0449 75736564 		.ascii	"used\000"
 1816      00
 1817              	.LASF68:
 1818 044e 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1818      6F5F6361 
 1818      6C6C5F50 
 1818      6F737454 
 1818      61736B48 
 1819              	.LASF84:
 1820 0466 45455F73 		.ascii	"EE_sys_ceiling\000"
 1820      79735F63 
 1820      65696C69 
 1820      6E6700
 1821              	.LASF42:
 1822 0475 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 1822      6F5F636F 
 1822      756E7465 
 1822      725F6F62 
 1822      6A656374 
 1823              	.LASF63:
 1824 0493 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1824      6F5F6361 
 1824      6C6C5F50 
 1824      72655461 
 1824      736B486F 
 1825              	.LASF89:
 1826 04aa 45455F63 		.ascii	"EE_counter_ROM\000"
 1826      6F756E74 
 1826      65725F52 
 1826      4F4D00
 1827              	.LASF12:
 1828 04b9 45455F55 		.ascii	"EE_UINT16\000"
 1828      494E5431 
 1828      3600
 1829              	.LASF32:
 1830 04c3 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 1830      43484544 
 1830      554C4554 
 1830      41424C45 
 1830      00
 1831              	.LASF56:
 1832 04d4 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 1832      6F727465 
 1832      785F6D78 
 1832      5F726573 
 1832      756D6549 
 1833              	.LASF1:
 1834 04eb 756E7369 		.ascii	"unsigned char\000"
 1834      676E6564 
 1834      20636861 
 1834      7200
 1835              	.LASF31:
 1836 04f9 45455F41 		.ascii	"EE_ALARM\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 60


 1836      4C41524D 
 1836      00
 1837              	.LASF81:
 1838 0502 45455F74 		.ascii	"EE_th_next\000"
 1838      685F6E65 
 1838      787400
 1839              	.LASF86:
 1840 050d 45455F74 		.ascii	"EE_th_event_active\000"
 1840      685F6576 
 1840      656E745F 
 1840      61637469 
 1840      766500
 1841              	.LASF2:
 1842 0520 73686F72 		.ascii	"short int\000"
 1842      7420696E 
 1842      7400
 1843              	.LASF74:
 1844 052a 666C6167 		.ascii	"flag\000"
 1844      00
 1845              	.LASF27:
 1846 052f 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 1846      6F5F636F 
 1846      756E7465 
 1846      725F524F 
 1846      4D5F7479 
 1847              	.LASF100:
 1848 0546 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1848      43313120 
 1848      352E342E 
 1848      31203230 
 1848      31363036 
 1849 0579 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1849      20726576 
 1849      6973696F 
 1849      6E203233 
 1849      37373135 
 1850 05ac 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1850      66756E63 
 1850      74696F6E 
 1850      2D736563 
 1850      74696F6E 
 1851              	.LASF58:
 1852 05d4 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1852      735F7365 
 1852      745F6578 
 1852      65637574 
 1852      696F6E5F 
 1853              	.LASF85:
 1854 05f0 45455F72 		.ascii	"EE_rq_bitmask\000"
 1854      715F6269 
 1854      746D6173 
 1854      6B00
 1855              	.LASF29:
 1856 05fe 66697273 		.ascii	"first\000"
 1856      7400
 1857              	.LASF22:
 1858 0604 436F756E 		.ascii	"CounterObjectType\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 61


 1858      7465724F 
 1858      626A6563 
 1858      74547970 
 1858      6500
 1859              	.LASF51:
 1860 0616 53746172 		.ascii	"StartupHook_Context\000"
 1860      74757048 
 1860      6F6F6B5F 
 1860      436F6E74 
 1860      65787400 
 1861              	.LASF67:
 1862 062a 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1862      5254495F 
 1862      7365745F 
 1862      74685F65 
 1862      715F6469 
 1863              	.LASF55:
 1864 064a 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1864      59504543 
 1864      4F4E5445 
 1864      585400
 1865              	.LASF91:
 1866 0659 45455F63 		.ascii	"EE_counter_RAM\000"
 1866      6F756E74 
 1866      65725F52 
 1866      414D00
 1867              	.LASF35:
 1868 0668 73706563 		.ascii	"spec_id\000"
 1868      5F696400 
 1869              	.LASF66:
 1870 0670 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 1870      616C5F62 
 1870      6567696E 
 1870      5F6E6573 
 1870      7465645F 
 1871              	.LASF72:
 1872 068e 69737461 		.ascii	"istat\000"
 1872      7400
 1873              	.LASF57:
 1874 0694 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 1874      5254495F 
 1874      7365745F 
 1874      73657276 
 1874      69636500 
 1875              	.LASF59:
 1876 06a8 45455F68 		.ascii	"EE_hal_stkchange\000"
 1876      616C5F73 
 1876      746B6368 
 1876      616E6765 
 1876      00
 1877              	.LASF61:
 1878 06b9 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 1878      616C5F67 
 1878      65745F49 
 1878      52515F6E 
 1878      65737469 
 1879              	.LASF82:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 62


 1880 06d6 45455F74 		.ascii	"EE_th_rnact\000"
 1880      685F726E 
 1880      61637400 
 1881              	.LASF97:
 1882 06e2 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 1882      6F727465 
 1882      785F6D78 
 1882      5F636861 
 1882      6E67655F 
 1883              	.LASF75:
 1884 06fe 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1884      52515F6E 
 1884      65737469 
 1884      6E675F6C 
 1884      6576656C 
 1885              	.LASF14:
 1886 0713 45455F55 		.ascii	"EE_UINT32\000"
 1886      494E5433 
 1886      3200
 1887              	.LASF13:
 1888 071d 45455F49 		.ascii	"EE_INT32\000"
 1888      4E543332 
 1888      00
 1889              	.LASF71:
 1890 0726 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 1890      6F5F7275 
 1890      6E5F6E65 
 1890      78745F74 
 1890      61736B00 
 1891              	.LASF39:
 1892 073a 636E7463 		.ascii	"cntcycle\000"
 1892      79636C65 
 1892      00
 1893              	.LASF52:
 1894 0743 53687574 		.ascii	"ShutdownHook_Context\000"
 1894      646F776E 
 1894      486F6F6B 
 1894      5F436F6E 
 1894      74657874 
 1895              	.LASF78:
 1896 0758 45455F74 		.ascii	"EE_th_ready_prio\000"
 1896      685F7265 
 1896      6164795F 
 1896      7072696F 
 1896      00
 1897              	.LASF103:
 1898 0769 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 1898      6F727465 
 1898      785F6D78 
 1898      5F737573 
 1898      70656E64 
 1899              	.LASF101:
 1900 0781 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_schedule.c\000"
 1900      72617465 
 1900      645F536F 
 1900      75726365 
 1900      5C50536F 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccnsf14f.s 			page 63


 1901              	.LASF16:
 1902 07b0 45455F46 		.ascii	"EE_FREG\000"
 1902      52454700 
 1903              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
