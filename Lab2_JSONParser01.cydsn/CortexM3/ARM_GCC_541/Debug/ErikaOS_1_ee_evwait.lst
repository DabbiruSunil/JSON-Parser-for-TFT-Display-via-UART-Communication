ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_evwait.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_WaitEvent,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_WaitEvent
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_WaitEvent, %function
  25              	EE_oo_WaitEvent:
  26              	.LFB60:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_evwait.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * CVS: $Id: ee_evwait.c,v 1.3 2006/05/03 05:59:55 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  55:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #include "trcKernelPort.h"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif
  57:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  58:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** /* WaitEvent:
  59:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - can be called from an extended task only
  60:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - the task state is put to wait until an event in the mask has been set
  61:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - if the task blocks -> reschedulig + internal resource released
  62:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    - returns (only extended state)
  63:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        E_OS_RESOURCE task occupies a resource
  64:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        E_OS_ACCESS   if the task is not an extended task
  65:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        E_OS_CALLEVEL called at interrupt level
  66:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** */
  67:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  68:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifndef __PRIVATE_WAITEVENT__
  70:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  71:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** StatusType EE_oo_WaitEvent(EventMaskType Mask)
  72:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** {
  28              		.loc 1 72 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LBB86:
  40              	.LBB87:
  41              	.LBB88:
  42              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 3


   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 4


  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 5


 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 6


 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 7


 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  43              		.loc 2 260 0
  44              		.syntax unified
  45              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  46 0002 EFF31084 		mrs r4, primask
  47              	@ 0 "" 2
  48              	.LVL1:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  49              		.loc 2 261 0
  50              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  51 0006 72B6     		cpsid i
  52              	@ 0 "" 2
  53              	.LVL2:
  54              		.thumb
  55              		.syntax unified
  56              	.LBE88:
  57              	.LBE87:
  58              	.LBE86:
  59              	.LBB89:
  60              	.LBB90:
  61              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 8


   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 9


  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 10


 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 11


 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 12


 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  62              		.loc 3 240 0
  63 0008 3A4B     		ldr	r3, .L14
  64 000a 1D68     		ldr	r5, [r3]
  65              	.LBE90:
  66              	.LBE89:
  67              	.LBB91:
  68              	.LBB92:
  69              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 13


  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  70              		.loc 4 79 0
  71 000c 3A4B     		ldr	r3, .L14+4
  72 000e 1B68     		ldr	r3, [r3]
  73              	.LBE92:
  74              	.LBE91:
  73:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   register TaskType current;
  74:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Error Value */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   register StatusType ev;
  76:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Primitive Lock Procedure */
  77:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  78:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  79:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_WAITEVENT);
  80:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_as_monitoring_the_stack();
  82:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  83:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   current = EE_stk_queryfirst();
  84:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  85:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  86:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     traceTASK_WAIT_EVENT(current, Mask)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 14


  88:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
  89:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifdef EE_SERVICE_PROTECTION__
  90:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
  91:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  92:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       then the Operating System shall ignore the service AND shall return
  93:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  94:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
  95:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       AND is currently not inside a Category 1 ISR the Operating System module
  96:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       shall not perform the requested action (the service call shall have no
  97:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
  98:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
  99:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_oo_check_disableint_error() ) {
 100:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_DISABLEDINT;
 101:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 102:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_SERVICE_PROTECTION__ */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 104:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
 105:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check for a call at interrupt level:
 106:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****    * Note: this must be the FIRST error check!!! */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U) || (current == EE_NIL)
  75              		.loc 1 107 0
  76 0010 002B     		cmp	r3, #0
  77 0012 63D1     		bne	.L8
  78              		.loc 1 107 0 is_stmt 0 discriminator 1
  79 0014 B5F1FF3F 		cmp	r5, #-1
  80 0018 62D0     		beq	.L9
 108:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if !defined (EE_SERVICE_PROTECTION__)
 109:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 110:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 	 * check is always FALSE, hence it is not needed  */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #else
 112:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 113:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif
 114:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_CALLEVEL;
 116:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 117:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_SERVICE_PROTECTION__ */
 118:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 119:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifdef __OO_EXTENDED_STATUS__
 120:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifndef __OO_NO_RESOURCES__
 121:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check for busy resources */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_th_resource_last[current] != EE_UREG_MINUS1 )
  81              		.loc 1 122 0 is_stmt 1
  82 001a 384B     		ldr	r3, .L14+8
  83 001c 53F82530 		ldr	r3, [r3, r5, lsl #2]
  84 0020 B3F1FF3F 		cmp	r3, #-1
  85 0024 5ED1     		bne	.L10
 123:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   {
 124:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_RESOURCE;
 125:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 126:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* __OO_NO_RESOURCES__ */
 127:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check if the task is an extended TASK */
 128:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_th_is_extended[current] == EE_FALSE ) {
  86              		.loc 1 128 0
  87 0026 364B     		ldr	r3, .L14+12
  88 0028 53F82530 		ldr	r3, [r3, r5, lsl #2]
  89 002c 002B     		cmp	r3, #0
  90 002e 5BD0     		beq	.L11
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 15


 129:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_ACCESS;
 130:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 131:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #ifdef EE_AS_USER_SPINLOCKS__
 132:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* [OS622]: The AUTOSAR Operating System WaitEvent API service shall check if
 133:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       it has been called while the calling TASK has occupied a spinlock.
 134:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       In extended status an error E_OS_SPINLOCK shall be returned and the TASK
 135:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****       shall not enter the wait state. (BSW4080021) */
 136:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_as_has_spinlocks_locked(current) ) {
 137:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_SPINLOCK;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 139:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 140:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* __OO_EXTENDED_STATUS__ */
 141:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 142:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 143:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 144:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 145:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* If a TASK is inside CallTrustedFunction() and TASK
 146:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      rescheduling takes place within the same OSApplication scheduling of
 147:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      other TASKs which belong to the same OS-Application as the caller needs
 148:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      to be restricted.
 149:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      EG:To assure that I CANNOT let WAIT take place in a
 150:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****         Trusted Function Call!!! */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( EE_as_Application_RAM[EE_as_active_app].
 152:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****         TrustedFunctionCallsCounter != 0U )
 153:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   {
 154:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OS_ACCESS;
 155:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 156:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 158:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   /* Check if we have to wait */
 159:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( (EE_th_event_active[current] & Mask) == 0U ) {
  91              		.loc 1 159 0
  92 0030 344B     		ldr	r3, .L14+16
  93 0032 53F82530 		ldr	r3, [r3, r5, lsl #2]
  94 0036 0342     		tst	r3, r0
  95 0038 58D1     		bne	.L12
 160:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Set the waiting mask */
 161:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_th_event_waitmask[current] = Mask;
  96              		.loc 1 161 0
  97 003a 334B     		ldr	r3, .L14+20
  98 003c 43F82500 		str	r0, [r3, r5, lsl #2]
  99              	.LBB93:
 100              	.LBB94:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 16


 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 17


 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 18


 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 19


 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 20


 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 21


 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 22


 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 23


 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 688:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_ORTI_set_th_eq_dispatch_prio(rq);
 689:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 690:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* "Press TP start for the first time" for this new activation/release of
 691:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****             the TASK */
 692:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_as_tp_active_start_on_TASK_stacking(rq);
 693:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 694:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Execute context SWITCH, this method return when we have a switch
 695:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****            back on the previous TASK contest. */
 696:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_run_next_task();
 697:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       }
 698:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 699:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 700:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 701:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 702:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ( (defined(__OO_ECC1__)) || (defined(__OO_ECC2__)) ) && (defined(__MULTI__))
 703:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 704:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Prepare current Task to Block if Extended Task is configured */
 705:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_prepare_to_block(void) {
 706:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Get the current TASK */
 707:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current = EE_stk_queryfirst();
 708:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 709:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* The task must go into the WAITING state */
 710:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_th_status[current] = WAITING;
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 24


 101              		.loc 3 710 0
 102 0040 0122     		movs	r2, #1
 103 0042 324B     		ldr	r3, .L14+24
 104 0044 43F82520 		str	r2, [r3, r5, lsl #2]
 711:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 712:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00473]: The Operating System module shall reset a task's
 713:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OsTaskExecutionBudget on a transition to the SUSPENDED or WAITING states.
 714:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (SRS_Os_11008) */
 715:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_stop_budget(EE_as_tp_active.active_tp_RAM_ref, EE_EXECUTION_BUDGET);
 716:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 717:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Call the Post Task Hook before change stk data structure */
 718:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_call_PostTaskHook();
 719:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 720:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reset the thread priority bit in the system_ceiling */
 721:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= ~EE_th_dispatch_prio[current];
 105              		.loc 3 721 0
 106 0048 314B     		ldr	r3, .L14+28
 107 004a 53F82500 		ldr	r0, [r3, r5, lsl #2]
 108              	.LVL3:
 109 004e 3149     		ldr	r1, .L14+32
 110 0050 0B68     		ldr	r3, [r1]
 111 0052 23EA0003 		bic	r3, r3, r0
 112 0056 0B60     		str	r3, [r1]
 722:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* The ready priority is not touched, it is not the same as Schedule! */
 723:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 724:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reset ORTI priority */
 725:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_th_priority(current, 0U);
 726:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 727:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Since the task blocks, it has to be woken up by another EE_hal_stkchange */
 728:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_th_waswaiting[current] = EE_TRUE;
 113              		.loc 3 728 0
 114 0058 2F4B     		ldr	r3, .L14+36
 115 005a 43F82520 		str	r2, [r3, r5, lsl #2]
 116              	.LBB95:
 117              	.LBB96:
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 118              		.loc 3 469 0
 119 005e 2F4B     		ldr	r3, .L14+40
 120 0060 53F82520 		ldr	r2, [r3, r5, lsl #2]
 121 0064 234B     		ldr	r3, .L14
 122 0066 1A60     		str	r2, [r3]
 123              	.LBE96:
 124              	.LBE95:
 125              	.LBE94:
 126              	.LBE93:
 127              	.LBB97:
 128              	.LBB98:
 729:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 730:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Extract the TASK from the stacked queue */
 731:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (void)EE_stk_getfirst();
 732:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 733:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 734:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Reschedule on task blocking if Extended Task is configured */
 735:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reschedule_on_block(void)
 736:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 737:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID nexttask;
 738:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 25


 739:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   nexttask = EE_rq_queryfirst();
 129              		.loc 3 739 0
 130 0068 FFF7FEFF 		bl	EE_rq_queryfirst
 131              	.LVL4:
 740:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( (nexttask == EE_NIL) || (EE_sys_ceiling >= EE_th_ready_prio[nexttask]) ) {
 132              		.loc 3 740 0
 133 006c B0F1FF3F 		cmp	r0, #-1
 134 0070 06D0     		beq	.L3
 135 0072 2B4B     		ldr	r3, .L14+44
 136 0074 53F82020 		ldr	r2, [r3, r0, lsl #2]
 137 0078 264B     		ldr	r3, .L14+32
 138 007a 1B68     		ldr	r3, [r3]
 139 007c 9A42     		cmp	r2, r3
 140 007e 0DD8     		bhi	.L4
 141              	.L3:
 142              	.LBB99:
 143              	.LBB100:
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 144              		.loc 3 240 0
 145 0080 1C4B     		ldr	r3, .L14
 146 0082 1868     		ldr	r0, [r3]
 147              	.LVL5:
 148              	.LBE100:
 149              	.LBE99:
 741:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* we have to schedule an interrupted thread that is on the top
 742:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      * of its stack; the state is already STACKED! */
 743:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     nexttask = EE_stk_queryfirst();
 744:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( nexttask != EE_NIL ) {
 150              		.loc 3 744 0
 151 0084 B0F1FF3F 		cmp	r0, #-1
 152 0088 03D0     		beq	.L5
 745:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_status[nexttask] = RUNNING;
 153              		.loc 3 745 0
 154 008a 0022     		movs	r2, #0
 155 008c 1F4B     		ldr	r3, .L14+24
 156 008e 43F82020 		str	r2, [r3, r0, lsl #2]
 157              	.L5:
 158              	.LVL6:
 159              	.LBB101:
 160              	.LBB102:
 161              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 26


  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 27


  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 28


 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 162              		.loc 5 154 0
 163 0092 40F00040 		orr	r0, r0, #-2147483648
 164              	.LVL7:
 165 0096 FFF7FEFF 		bl	EE_cortex_mx_change_context
 166              	.LVL8:
 167 009a 1AE0     		b	.L6
 168              	.LVL9:
 169              	.L4:
 170              	.LBE102:
 171              	.LBE101:
 746:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 747:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       traceTASK_SWITCHED_IN(nexttask, EE_th_ready_prio[nexttask]);
 748:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 749:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 750:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Enable the TASK Timing Protection Set */
 751:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_as_tp_active_set_from_TASK(nexttask);
 752:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 753:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We are switching back to the Idle loop */
 754:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_as_set_execution_context( Idle_Context );
 755:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_as_tp_active_start_idle();
 756:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 757:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 758:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* CONTEXT SWITCH to a previous stacked Task */
 759:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_stkchange(nexttask);
 760:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else { 
 761:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* We have to schedule a ready thread that is not yet on the stack.
 762:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        This means that the TASK set in excution for the first time or that it
 763:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        was waiting. */
 764:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[nexttask] = RUNNING;
 172              		.loc 3 764 0
 173 009c 0021     		movs	r1, #0
 174 009e 1B4A     		ldr	r2, .L14+24
 175 00a0 42F82010 		str	r1, [r2, r0, lsl #2]
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 29


 765:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_sys_ceiling |= EE_th_dispatch_prio[nexttask];
 176              		.loc 3 765 0
 177 00a4 1A4A     		ldr	r2, .L14+28
 178 00a6 52F82020 		ldr	r2, [r2, r0, lsl #2]
 179 00aa 1343     		orrs	r3, r3, r2
 180 00ac 194A     		ldr	r2, .L14+32
 181 00ae 1360     		str	r3, [r2]
 182              	.LBB103:
 183              	.LBB104:
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 184              		.loc 3 566 0
 185 00b0 FFF7FEFF 		bl	EE_rq2stk_exchange
 186              	.LVL10:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 187              		.loc 3 567 0
 188 00b4 184B     		ldr	r3, .L14+36
 189 00b6 53F82030 		ldr	r3, [r3, r0, lsl #2]
 190 00ba 43B1     		cbz	r3, .L7
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 191              		.loc 3 569 0
 192 00bc 0022     		movs	r2, #0
 193 00be 164B     		ldr	r3, .L14+36
 194 00c0 43F82020 		str	r2, [r3, r0, lsl #2]
 195              	.LVL11:
 196              	.LBB105:
 197              	.LBB106:
 198              		.loc 5 154 0
 199 00c4 40F00040 		orr	r0, r0, #-2147483648
 200              	.LVL12:
 201 00c8 FFF7FEFF 		bl	EE_cortex_mx_change_context
 202              	.LVL13:
 203 00cc 01E0     		b	.L6
 204              	.LVL14:
 205              	.L7:
 206              	.LBE106:
 207              	.LBE105:
 208              	.LBB107:
 209              	.LBB108:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 210              		.loc 5 167 0
 211 00ce FFF7FEFF 		bl	EE_cortex_mx_change_context
 212              	.LVL15:
 213              	.L6:
 214              	.LBE108:
 215              	.LBE107:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 30


 216              	.LBE104:
 217              	.LBE103:
 218              	.LBE98:
 219              	.LBE97:
 162:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 163:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Prepare current TASK to block */
 164:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_oo_prepare_to_block();
 165:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 166:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* The TASK is not inserted in any queue! it will be woken
 167:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****        up by a SetEvent using a EE_hal_stkchange... */
 168:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 169:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Reschedule next TASK:
 170:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      * check if there is to schedule a ready thread or pop a preempted
 171:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****      * thread */
 172:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_oo_reschedule_on_block();
 173:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 174:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     /* Reset the waiting mask */
 175:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_th_event_waitmask[current] = 0U;
 220              		.loc 1 175 0
 221 00d2 0020     		movs	r0, #0
 222 00d4 0C4B     		ldr	r3, .L14+20
 223 00d6 43F82500 		str	r0, [r3, r5, lsl #2]
 224              	.LVL16:
 225 00da 08E0     		b	.L2
 226              	.LVL17:
 227              	.L8:
 115:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 228              		.loc 1 115 0
 229 00dc 0220     		movs	r0, #2
 230              	.LVL18:
 231 00de 06E0     		b	.L2
 232              	.LVL19:
 233              	.L9:
 234 00e0 0220     		movs	r0, #2
 235              	.LVL20:
 236 00e2 04E0     		b	.L2
 237              	.LVL21:
 238              	.L10:
 124:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 239              		.loc 1 124 0
 240 00e4 0620     		movs	r0, #6
 241              	.LVL22:
 242 00e6 02E0     		b	.L2
 243              	.LVL23:
 244              	.L11:
 129:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else
 245              		.loc 1 129 0
 246 00e8 0120     		movs	r0, #1
 247              	.LVL24:
 248 00ea 00E0     		b	.L2
 249              	.LVL25:
 250              	.L12:
 176:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OK;
 178:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   } else {
 179:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     ev = E_OK;
 251              		.loc 1 179 0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 31


 252 00ec 0020     		movs	r0, #0
 253              	.LVL26:
 254              	.L2:
 255              	.LBB109:
 256              	.LBB110:
 257              	.LBB111:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 258              		.loc 2 232 0
 259              		.syntax unified
 260              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 261 00ee 84F31088 		msr primask, r4
 262              	@ 0 "" 2
 263              	.LVL27:
 264              		.thumb
 265              		.syntax unified
 266              	.LBE111:
 267              	.LBE110:
 268              	.LBE109:
 180:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   }
 181:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 182:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   if ( ev != E_OK ) {
 183:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_ORTI_set_lasterror(ev);
 184:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****     EE_oo_notify_error_WaitEvent(Mask, ev);
 185:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   }
 186:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 187:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_WAITEVENT);
 188:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 189:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c ****   return ev;
 191:Generated_Source\PSoC5/ErikaOS_1_ee_evwait.c **** }
 269              		.loc 1 191 0
 270 00f2 38BD     		pop	{r3, r4, r5, pc}
 271              	.L15:
 272              		.align	2
 273              	.L14:
 274 00f4 00000000 		.word	EE_stkfirst
 275 00f8 00000000 		.word	EE_IRQ_nesting_level
 276 00fc 00000000 		.word	EE_th_resource_last
 277 0100 00000000 		.word	EE_th_is_extended
 278 0104 00000000 		.word	EE_th_event_active
 279 0108 00000000 		.word	EE_th_event_waitmask
 280 010c 00000000 		.word	EE_th_status
 281 0110 00000000 		.word	EE_th_dispatch_prio
 282 0114 00000000 		.word	EE_sys_ceiling
 283 0118 00000000 		.word	EE_th_waswaiting
 284 011c 00000000 		.word	EE_th_next
 285 0120 00000000 		.word	EE_th_ready_prio
 286              		.cfi_endproc
 287              	.LFE60:
 288              		.size	EE_oo_WaitEvent, .-EE_oo_WaitEvent
 289              		.text
 290              	.Letext0:
 291              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 292              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 293              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 294              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 295              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 32


 296              		.section	.debug_info,"",%progbits
 297              	.Ldebug_info0:
 298 0000 A6060000 		.4byte	0x6a6
 299 0004 0400     		.2byte	0x4
 300 0006 00000000 		.4byte	.Ldebug_abbrev0
 301 000a 04       		.byte	0x4
 302 000b 01       		.uleb128 0x1
 303 000c F5050000 		.4byte	.LASF85
 304 0010 0C       		.byte	0xc
 305 0011 BE020000 		.4byte	.LASF86
 306 0015 AD010000 		.4byte	.LASF87
 307 0019 00000000 		.4byte	.Ldebug_ranges0+0
 308 001d 00000000 		.4byte	0
 309 0021 00000000 		.4byte	.Ldebug_line0
 310 0025 02       		.uleb128 0x2
 311 0026 01       		.byte	0x1
 312 0027 06       		.byte	0x6
 313 0028 6F030000 		.4byte	.LASF0
 314 002c 02       		.uleb128 0x2
 315 002d 01       		.byte	0x1
 316 002e 08       		.byte	0x8
 317 002f 1C030000 		.4byte	.LASF1
 318 0033 02       		.uleb128 0x2
 319 0034 02       		.byte	0x2
 320 0035 05       		.byte	0x5
 321 0036 87000000 		.4byte	.LASF2
 322 003a 02       		.uleb128 0x2
 323 003b 02       		.byte	0x2
 324 003c 07       		.byte	0x7
 325 003d 18040000 		.4byte	.LASF3
 326 0041 02       		.uleb128 0x2
 327 0042 04       		.byte	0x4
 328 0043 05       		.byte	0x5
 329 0044 2E020000 		.4byte	.LASF4
 330 0048 02       		.uleb128 0x2
 331 0049 04       		.byte	0x4
 332 004a 07       		.byte	0x7
 333 004b D1040000 		.4byte	.LASF5
 334 004f 02       		.uleb128 0x2
 335 0050 08       		.byte	0x8
 336 0051 05       		.byte	0x5
 337 0052 87010000 		.4byte	.LASF6
 338 0056 02       		.uleb128 0x2
 339 0057 08       		.byte	0x8
 340 0058 07       		.byte	0x7
 341 0059 80030000 		.4byte	.LASF7
 342 005d 03       		.uleb128 0x3
 343 005e 04       		.byte	0x4
 344 005f 05       		.byte	0x5
 345 0060 696E7400 		.ascii	"int\000"
 346 0064 02       		.uleb128 0x2
 347 0065 04       		.byte	0x4
 348 0066 07       		.byte	0x7
 349 0067 C4030000 		.4byte	.LASF8
 350 006b 02       		.uleb128 0x2
 351 006c 08       		.byte	0x8
 352 006d 04       		.byte	0x4
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 33


 353 006e EB020000 		.4byte	.LASF9
 354 0072 04       		.uleb128 0x4
 355 0073 28000000 		.4byte	.LASF10
 356 0077 06       		.byte	0x6
 357 0078 3E       		.byte	0x3e
 358 0079 2C000000 		.4byte	0x2c
 359 007d 04       		.uleb128 0x4
 360 007e 95010000 		.4byte	.LASF11
 361 0082 06       		.byte	0x6
 362 0083 3F       		.byte	0x3f
 363 0084 25000000 		.4byte	0x25
 364 0088 04       		.uleb128 0x4
 365 0089 50040000 		.4byte	.LASF12
 366 008d 06       		.byte	0x6
 367 008e 52       		.byte	0x52
 368 008f 3A000000 		.4byte	0x3a
 369 0093 04       		.uleb128 0x4
 370 0094 EA030000 		.4byte	.LASF13
 371 0098 06       		.byte	0x6
 372 0099 53       		.byte	0x53
 373 009a 5D000000 		.4byte	0x5d
 374 009e 04       		.uleb128 0x4
 375 009f B4000000 		.4byte	.LASF14
 376 00a3 06       		.byte	0x6
 377 00a4 54       		.byte	0x54
 378 00a5 64000000 		.4byte	0x64
 379 00a9 04       		.uleb128 0x4
 380 00aa 3F000000 		.4byte	.LASF15
 381 00ae 02       		.byte	0x2
 382 00af 4D       		.byte	0x4d
 383 00b0 9E000000 		.4byte	0x9e
 384 00b4 04       		.uleb128 0x4
 385 00b5 AC000000 		.4byte	.LASF16
 386 00b9 02       		.byte	0x2
 387 00ba 4F       		.byte	0x4f
 388 00bb 9E000000 		.4byte	0x9e
 389 00bf 04       		.uleb128 0x4
 390 00c0 F6040000 		.4byte	.LASF17
 391 00c4 02       		.byte	0x2
 392 00c5 54       		.byte	0x54
 393 00c6 A9000000 		.4byte	0xa9
 394 00ca 04       		.uleb128 0x4
 395 00cb DC000000 		.4byte	.LASF18
 396 00cf 02       		.byte	0x2
 397 00d0 78       		.byte	0x78
 398 00d1 93000000 		.4byte	0x93
 399 00d5 05       		.uleb128 0x5
 400 00d6 9D010000 		.4byte	.LASF19
 401 00da 07       		.byte	0x7
 402 00db 1101     		.2byte	0x111
 403 00dd 88000000 		.4byte	0x88
 404 00e1 05       		.uleb128 0x5
 405 00e2 13030000 		.4byte	.LASF20
 406 00e6 07       		.byte	0x7
 407 00e7 F701     		.2byte	0x1f7
 408 00e9 CA000000 		.4byte	0xca
 409 00ed 05       		.uleb128 0x5
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 34


 410 00ee 68000000 		.4byte	.LASF21
 411 00f2 07       		.byte	0x7
 412 00f3 2C02     		.2byte	0x22c
 413 00f5 A9000000 		.4byte	0xa9
 414 00f9 05       		.uleb128 0x5
 415 00fa 91000000 		.4byte	.LASF22
 416 00fe 07       		.byte	0x7
 417 00ff 2103     		.2byte	0x321
 418 0101 2C000000 		.4byte	0x2c
 419 0105 06       		.uleb128 0x6
 420 0106 01       		.byte	0x1
 421 0107 2C000000 		.4byte	0x2c
 422 010b 07       		.byte	0x7
 423 010c 5904     		.2byte	0x459
 424 010e 55010000 		.4byte	0x155
 425 0112 07       		.uleb128 0x7
 426 0113 19000000 		.4byte	.LASF23
 427 0117 00       		.byte	0
 428 0118 07       		.uleb128 0x7
 429 0119 0B040000 		.4byte	.LASF24
 430 011d 01       		.byte	0x1
 431 011e 07       		.uleb128 0x7
 432 011f CF000000 		.4byte	.LASF25
 433 0123 02       		.byte	0x2
 434 0124 07       		.uleb128 0x7
 435 0125 24010000 		.4byte	.LASF26
 436 0129 03       		.byte	0x3
 437 012a 07       		.uleb128 0x7
 438 012b 37050000 		.4byte	.LASF27
 439 012f 04       		.byte	0x4
 440 0130 07       		.uleb128 0x7
 441 0131 7F050000 		.4byte	.LASF28
 442 0135 05       		.byte	0x5
 443 0136 07       		.uleb128 0x7
 444 0137 98050000 		.4byte	.LASF29
 445 013b 06       		.byte	0x6
 446 013c 07       		.uleb128 0x7
 447 013d B2060000 		.4byte	.LASF30
 448 0141 07       		.byte	0x7
 449 0142 07       		.uleb128 0x7
 450 0143 2B040000 		.4byte	.LASF31
 451 0147 08       		.byte	0x8
 452 0148 07       		.uleb128 0x7
 453 0149 5A040000 		.4byte	.LASF32
 454 014d 09       		.byte	0x9
 455 014e 07       		.uleb128 0x7
 456 014f 7A010000 		.4byte	.LASF33
 457 0153 0A       		.byte	0xa
 458 0154 00       		.byte	0
 459 0155 05       		.uleb128 0x5
 460 0156 E3000000 		.4byte	.LASF34
 461 015a 07       		.byte	0x7
 462 015b 6504     		.2byte	0x465
 463 015d 05010000 		.4byte	0x105
 464 0161 08       		.uleb128 0x8
 465 0162 46030000 		.4byte	.LASF88
 466 0166 02       		.byte	0x2
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 35


 467 0167 F1       		.byte	0xf1
 468 0168 B4000000 		.4byte	0xb4
 469 016c 03       		.byte	0x3
 470 016d 7D010000 		.4byte	0x17d
 471 0171 09       		.uleb128 0x9
 472 0172 03010000 		.4byte	.LASF53
 473 0176 02       		.byte	0x2
 474 0177 F4       		.byte	0xf4
 475 0178 B4000000 		.4byte	0xb4
 476 017c 00       		.byte	0
 477 017d 0A       		.uleb128 0xa
 478 017e A7040000 		.4byte	.LASF35
 479 0182 02       		.byte	0x2
 480 0183 DC       		.byte	0xdc
 481 0184 03       		.byte	0x3
 482 0185 93010000 		.4byte	0x193
 483 0189 0B       		.uleb128 0xb
 484 018a 6600     		.ascii	"f\000"
 485 018c 02       		.byte	0x2
 486 018d DC       		.byte	0xdc
 487 018e B4000000 		.4byte	0xb4
 488 0192 00       		.byte	0
 489 0193 0C       		.uleb128 0xc
 490 0194 37020000 		.4byte	.LASF36
 491 0198 07       		.byte	0x7
 492 0199 9703     		.2byte	0x397
 493 019b 03       		.byte	0x3
 494 019c AD010000 		.4byte	0x1ad
 495 01a0 0D       		.uleb128 0xd
 496 01a1 73727600 		.ascii	"srv\000"
 497 01a5 07       		.byte	0x7
 498 01a6 9703     		.2byte	0x397
 499 01a8 72000000 		.4byte	0x72
 500 01ac 00       		.byte	0
 501 01ad 0C       		.uleb128 0xc
 502 01ae 6B020000 		.4byte	.LASF37
 503 01b2 07       		.byte	0x7
 504 01b3 8404     		.2byte	0x484
 505 01b5 03       		.byte	0x3
 506 01b6 C7010000 		.4byte	0x1c7
 507 01ba 0D       		.uleb128 0xd
 508 01bb 63747800 		.ascii	"ctx\000"
 509 01bf 07       		.byte	0x7
 510 01c0 8504     		.2byte	0x485
 511 01c2 55010000 		.4byte	0x155
 512 01c6 00       		.byte	0
 513 01c7 0E       		.uleb128 0xe
 514 01c8 9C000000 		.4byte	.LASF41
 515 01cc 03       		.byte	0x3
 516 01cd D301     		.2byte	0x1d3
 517 01cf CA000000 		.4byte	0xca
 518 01d3 03       		.byte	0x3
 519 01d4 0C       		.uleb128 0xc
 520 01d5 47000000 		.4byte	.LASF38
 521 01d9 07       		.byte	0x7
 522 01da D303     		.2byte	0x3d3
 523 01dc 03       		.byte	0x3
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 36


 524 01dd FA010000 		.4byte	0x1fa
 525 01e1 0F       		.uleb128 0xf
 526 01e2 09010000 		.4byte	.LASF39
 527 01e6 07       		.byte	0x7
 528 01e7 D303     		.2byte	0x3d3
 529 01e9 CA000000 		.4byte	0xca
 530 01ed 0F       		.uleb128 0xf
 531 01ee 93050000 		.4byte	.LASF40
 532 01f2 07       		.byte	0x7
 533 01f3 D303     		.2byte	0x3d3
 534 01f5 A9000000 		.4byte	0xa9
 535 01f9 00       		.byte	0
 536 01fa 10       		.uleb128 0x10
 537 01fb F3030000 		.4byte	.LASF44
 538 01ff 03       		.byte	0x3
 539 0200 9A01     		.2byte	0x19a
 540 0202 03       		.byte	0x3
 541 0203 11       		.uleb128 0x11
 542 0204 B2030000 		.4byte	.LASF42
 543 0208 03       		.byte	0x3
 544 0209 EE       		.byte	0xee
 545 020a CA000000 		.4byte	0xca
 546 020e 03       		.byte	0x3
 547 020f 0A       		.uleb128 0xa
 548 0210 5E030000 		.4byte	.LASF43
 549 0214 05       		.byte	0x5
 550 0215 98       		.byte	0x98
 551 0216 03       		.byte	0x3
 552 0217 27020000 		.4byte	0x227
 553 021b 0B       		.uleb128 0xb
 554 021c 74696400 		.ascii	"tid\000"
 555 0220 05       		.byte	0x5
 556 0221 98       		.byte	0x98
 557 0222 CA000000 		.4byte	0xca
 558 0226 00       		.byte	0
 559 0227 10       		.uleb128 0x10
 560 0228 9B060000 		.4byte	.LASF45
 561 022c 03       		.byte	0x3
 562 022d 8D01     		.2byte	0x18d
 563 022f 03       		.byte	0x3
 564 0230 0A       		.uleb128 0xa
 565 0231 87020000 		.4byte	.LASF46
 566 0235 05       		.byte	0x5
 567 0236 A5       		.byte	0xa5
 568 0237 03       		.byte	0x3
 569 0238 48020000 		.4byte	0x248
 570 023c 0B       		.uleb128 0xb
 571 023d 74696400 		.ascii	"tid\000"
 572 0241 05       		.byte	0x5
 573 0242 A5       		.byte	0xa5
 574 0243 CA000000 		.4byte	0xca
 575 0247 00       		.byte	0
 576 0248 0C       		.uleb128 0xc
 577 0249 70040000 		.4byte	.LASF47
 578 024d 07       		.byte	0x7
 579 024e D203     		.2byte	0x3d2
 580 0250 03       		.byte	0x3
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 37


 581 0251 62020000 		.4byte	0x262
 582 0255 0D       		.uleb128 0xd
 583 0256 746D7000 		.ascii	"tmp\000"
 584 025a 07       		.byte	0x7
 585 025b D203     		.2byte	0x3d2
 586 025d CA000000 		.4byte	0xca
 587 0261 00       		.byte	0
 588 0262 11       		.uleb128 0x11
 589 0263 4E050000 		.4byte	.LASF48
 590 0267 04       		.byte	0x4
 591 0268 4D       		.byte	0x4d
 592 0269 A9000000 		.4byte	0xa9
 593 026d 03       		.byte	0x3
 594 026e 10       		.uleb128 0x10
 595 026f 97030000 		.4byte	.LASF49
 596 0273 08       		.byte	0x8
 597 0274 AB01     		.2byte	0x1ab
 598 0276 03       		.byte	0x3
 599 0277 0C       		.uleb128 0xc
 600 0278 36010000 		.4byte	.LASF50
 601 027c 07       		.byte	0x7
 602 027d A303     		.2byte	0x3a3
 603 027f 03       		.byte	0x3
 604 0280 90020000 		.4byte	0x290
 605 0284 0D       		.uleb128 0xd
 606 0285 696400   		.ascii	"id\000"
 607 0288 07       		.byte	0x7
 608 0289 A303     		.2byte	0x3a3
 609 028b 72000000 		.4byte	0x72
 610 028f 00       		.byte	0
 611 0290 11       		.uleb128 0x11
 612 0291 DE060000 		.4byte	.LASF51
 613 0295 09       		.byte	0x9
 614 0296 60       		.byte	0x60
 615 0297 B4000000 		.4byte	0xb4
 616 029b 03       		.byte	0x3
 617 029c 0C       		.uleb128 0xc
 618 029d 90040000 		.4byte	.LASF52
 619 02a1 03       		.byte	0x3
 620 02a2 C102     		.2byte	0x2c1
 621 02a4 03       		.byte	0x3
 622 02a5 B6020000 		.4byte	0x2b6
 623 02a9 12       		.uleb128 0x12
 624 02aa DD050000 		.4byte	.LASF54
 625 02ae 03       		.byte	0x3
 626 02af C302     		.2byte	0x2c3
 627 02b1 CA000000 		.4byte	0xca
 628 02b5 00       		.byte	0
 629 02b6 0A       		.uleb128 0xa
 630 02b7 2A030000 		.4byte	.LASF55
 631 02bb 09       		.byte	0x9
 632 02bc 68       		.byte	0x68
 633 02bd 03       		.byte	0x3
 634 02be CC020000 		.4byte	0x2cc
 635 02c2 0B       		.uleb128 0xb
 636 02c3 6600     		.ascii	"f\000"
 637 02c5 09       		.byte	0x9
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 38


 638 02c6 68       		.byte	0x68
 639 02c7 B4000000 		.4byte	0xb4
 640 02cb 00       		.byte	0
 641 02cc 0C       		.uleb128 0xc
 642 02cd C6060000 		.4byte	.LASF56
 643 02d1 07       		.byte	0x7
 644 02d2 A803     		.2byte	0x3a8
 645 02d4 03       		.byte	0x3
 646 02d5 E5020000 		.4byte	0x2e5
 647 02d9 0D       		.uleb128 0xd
 648 02da 696400   		.ascii	"id\000"
 649 02dd 07       		.byte	0x7
 650 02de A803     		.2byte	0x3a8
 651 02e0 72000000 		.4byte	0x72
 652 02e4 00       		.byte	0
 653 02e5 0C       		.uleb128 0xc
 654 02e6 C3050000 		.4byte	.LASF57
 655 02ea 03       		.byte	0x3
 656 02eb DF02     		.2byte	0x2df
 657 02ed 03       		.byte	0x3
 658 02ee FF020000 		.4byte	0x2ff
 659 02f2 12       		.uleb128 0x12
 660 02f3 5F000000 		.4byte	.LASF58
 661 02f7 03       		.byte	0x3
 662 02f8 E102     		.2byte	0x2e1
 663 02fa CA000000 		.4byte	0xca
 664 02fe 00       		.byte	0
 665 02ff 0C       		.uleb128 0xc
 666 0300 66010000 		.4byte	.LASF59
 667 0304 03       		.byte	0x3
 668 0305 3202     		.2byte	0x232
 669 0307 03       		.byte	0x3
 670 0308 19030000 		.4byte	0x319
 671 030c 13       		.uleb128 0x13
 672 030d 746D7000 		.ascii	"tmp\000"
 673 0311 03       		.byte	0x3
 674 0312 3402     		.2byte	0x234
 675 0314 E1000000 		.4byte	0xe1
 676 0318 00       		.byte	0
 677 0319 14       		.uleb128 0x14
 678 031a 40040000 		.4byte	.LASF89
 679 031e 01       		.byte	0x1
 680 031f 47       		.byte	0x47
 681 0320 F9000000 		.4byte	0xf9
 682 0324 00000000 		.4byte	.LFB60
 683 0328 24010000 		.4byte	.LFE60-.LFB60
 684 032c 01       		.uleb128 0x1
 685 032d 9C       		.byte	0x9c
 686 032e 08050000 		.4byte	0x508
 687 0332 15       		.uleb128 0x15
 688 0333 7B030000 		.4byte	.LASF90
 689 0337 01       		.byte	0x1
 690 0338 47       		.byte	0x47
 691 0339 ED000000 		.4byte	0xed
 692 033d 00000000 		.4byte	.LLST0
 693 0341 09       		.uleb128 0x9
 694 0342 DD050000 		.4byte	.LASF54
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 39


 695 0346 01       		.byte	0x1
 696 0347 49       		.byte	0x49
 697 0348 E1000000 		.4byte	0xe1
 698 034c 16       		.uleb128 0x16
 699 034d 657600   		.ascii	"ev\000"
 700 0350 01       		.byte	0x1
 701 0351 4B       		.byte	0x4b
 702 0352 F9000000 		.4byte	0xf9
 703 0356 9E000000 		.4byte	.LLST1
 704 035a 17       		.uleb128 0x17
 705 035b E5050000 		.4byte	.LASF60
 706 035f 01       		.byte	0x1
 707 0360 4D       		.byte	0x4d
 708 0361 B4000000 		.4byte	0xb4
 709 0365 01       		.uleb128 0x1
 710 0366 54       		.byte	0x54
 711 0367 18       		.uleb128 0x18
 712 0368 90020000 		.4byte	0x290
 713 036c 02000000 		.4byte	.LBB86
 714 0370 06000000 		.4byte	.LBE86-.LBB86
 715 0374 01       		.byte	0x1
 716 0375 4D       		.byte	0x4d
 717 0376 9E030000 		.4byte	0x39e
 718 037a 19       		.uleb128 0x19
 719 037b 61010000 		.4byte	0x161
 720 037f 02000000 		.4byte	.LBB87
 721 0383 06000000 		.4byte	.LBE87-.LBB87
 722 0387 09       		.byte	0x9
 723 0388 62       		.byte	0x62
 724 0389 1A       		.uleb128 0x1a
 725 038a 02000000 		.4byte	.LBB88
 726 038e 06000000 		.4byte	.LBE88-.LBB88
 727 0392 1B       		.uleb128 0x1b
 728 0393 71010000 		.4byte	0x171
 729 0397 BD000000 		.4byte	.LLST2
 730 039b 00       		.byte	0
 731 039c 00       		.byte	0
 732 039d 00       		.byte	0
 733 039e 1C       		.uleb128 0x1c
 734 039f 03020000 		.4byte	0x203
 735 03a3 08000000 		.4byte	.LBB89
 736 03a7 04000000 		.4byte	.LBE89-.LBB89
 737 03ab 01       		.byte	0x1
 738 03ac 53       		.byte	0x53
 739 03ad 1C       		.uleb128 0x1c
 740 03ae 62020000 		.4byte	0x262
 741 03b2 0C000000 		.4byte	.LBB91
 742 03b6 04000000 		.4byte	.LBE91-.LBB91
 743 03ba 01       		.byte	0x1
 744 03bb 6B       		.byte	0x6b
 745 03bc 18       		.uleb128 0x18
 746 03bd 9C020000 		.4byte	0x29c
 747 03c1 40000000 		.4byte	.LBB93
 748 03c5 28000000 		.4byte	.LBE93-.LBB93
 749 03c9 01       		.byte	0x1
 750 03ca A4       		.byte	0xa4
 751 03cb EF030000 		.4byte	0x3ef
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 40


 752 03cf 1A       		.uleb128 0x1a
 753 03d0 40000000 		.4byte	.LBB94
 754 03d4 28000000 		.4byte	.LBE94-.LBB94
 755 03d8 1D       		.uleb128 0x1d
 756 03d9 A9020000 		.4byte	0x2a9
 757 03dd 1E       		.uleb128 0x1e
 758 03de C7010000 		.4byte	0x1c7
 759 03e2 5E000000 		.4byte	.LBB95
 760 03e6 0A000000 		.4byte	.LBE95-.LBB95
 761 03ea 03       		.byte	0x3
 762 03eb DB02     		.2byte	0x2db
 763 03ed 00       		.byte	0
 764 03ee 00       		.byte	0
 765 03ef 18       		.uleb128 0x18
 766 03f0 E5020000 		.4byte	0x2e5
 767 03f4 68000000 		.4byte	.LBB97
 768 03f8 6A000000 		.4byte	.LBE97-.LBB97
 769 03fc 01       		.byte	0x1
 770 03fd AC       		.byte	0xac
 771 03fe D5040000 		.4byte	0x4d5
 772 0402 1A       		.uleb128 0x1a
 773 0403 68000000 		.4byte	.LBB98
 774 0407 6A000000 		.4byte	.LBE98-.LBB98
 775 040b 1B       		.uleb128 0x1b
 776 040c F2020000 		.4byte	0x2f2
 777 0410 D0000000 		.4byte	.LLST3
 778 0414 1E       		.uleb128 0x1e
 779 0415 03020000 		.4byte	0x203
 780 0419 80000000 		.4byte	.LBB99
 781 041d 04000000 		.4byte	.LBE99-.LBB99
 782 0421 03       		.byte	0x3
 783 0422 E702     		.2byte	0x2e7
 784 0424 1F       		.uleb128 0x1f
 785 0425 0F020000 		.4byte	0x20f
 786 0429 92000000 		.4byte	.LBB101
 787 042d 0A000000 		.4byte	.LBE101-.LBB101
 788 0431 03       		.byte	0x3
 789 0432 F702     		.2byte	0x2f7
 790 0434 4B040000 		.4byte	0x44b
 791 0438 20       		.uleb128 0x20
 792 0439 1B020000 		.4byte	0x21b
 793 043d EE000000 		.4byte	.LLST4
 794 0441 21       		.uleb128 0x21
 795 0442 9A000000 		.4byte	.LVL8
 796 0446 86060000 		.4byte	0x686
 797 044a 00       		.byte	0
 798 044b 1F       		.uleb128 0x1f
 799 044c FF020000 		.4byte	0x2ff
 800 0450 B0000000 		.4byte	.LBB103
 801 0454 22000000 		.4byte	.LBE103-.LBB103
 802 0458 03       		.byte	0x3
 803 0459 0703     		.2byte	0x307
 804 045b CA040000 		.4byte	0x4ca
 805 045f 1A       		.uleb128 0x1a
 806 0460 B0000000 		.4byte	.LBB104
 807 0464 22000000 		.4byte	.LBE104-.LBB104
 808 0468 1B       		.uleb128 0x1b
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 41


 809 0469 0C030000 		.4byte	0x30c
 810 046d 01010000 		.4byte	.LLST5
 811 0471 1F       		.uleb128 0x1f
 812 0472 0F020000 		.4byte	0x20f
 813 0476 C4000000 		.4byte	.LBB105
 814 047a 0A000000 		.4byte	.LBE105-.LBB105
 815 047e 03       		.byte	0x3
 816 047f 3C02     		.2byte	0x23c
 817 0481 98040000 		.4byte	0x498
 818 0485 20       		.uleb128 0x20
 819 0486 1B020000 		.4byte	0x21b
 820 048a 1F010000 		.4byte	.LLST6
 821 048e 21       		.uleb128 0x21
 822 048f CC000000 		.4byte	.LVL13
 823 0493 86060000 		.4byte	0x686
 824 0497 00       		.byte	0
 825 0498 1F       		.uleb128 0x1f
 826 0499 30020000 		.4byte	0x230
 827 049d CE000000 		.4byte	.LBB107
 828 04a1 04000000 		.4byte	.LBE107-.LBB107
 829 04a5 03       		.byte	0x3
 830 04a6 3F02     		.2byte	0x23f
 831 04a8 BF040000 		.4byte	0x4bf
 832 04ac 20       		.uleb128 0x20
 833 04ad 3C020000 		.4byte	0x23c
 834 04b1 32010000 		.4byte	.LLST7
 835 04b5 21       		.uleb128 0x21
 836 04b6 D2000000 		.4byte	.LVL15
 837 04ba 86060000 		.4byte	0x686
 838 04be 00       		.byte	0
 839 04bf 21       		.uleb128 0x21
 840 04c0 B4000000 		.4byte	.LVL10
 841 04c4 91060000 		.4byte	0x691
 842 04c8 00       		.byte	0
 843 04c9 00       		.byte	0
 844 04ca 21       		.uleb128 0x21
 845 04cb 6C000000 		.4byte	.LVL4
 846 04cf 9D060000 		.4byte	0x69d
 847 04d3 00       		.byte	0
 848 04d4 00       		.byte	0
 849 04d5 19       		.uleb128 0x19
 850 04d6 B6020000 		.4byte	0x2b6
 851 04da EE000000 		.4byte	.LBB109
 852 04de 04000000 		.4byte	.LBE109-.LBB109
 853 04e2 01       		.byte	0x1
 854 04e3 BC       		.byte	0xbc
 855 04e4 20       		.uleb128 0x20
 856 04e5 C2020000 		.4byte	0x2c2
 857 04e9 45010000 		.4byte	.LLST8
 858 04ed 19       		.uleb128 0x19
 859 04ee 7D010000 		.4byte	0x17d
 860 04f2 EE000000 		.4byte	.LBB110
 861 04f6 04000000 		.4byte	.LBE110-.LBB110
 862 04fa 09       		.byte	0x9
 863 04fb 6A       		.byte	0x6a
 864 04fc 20       		.uleb128 0x20
 865 04fd 89010000 		.4byte	0x189
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 42


 866 0501 45010000 		.4byte	.LLST8
 867 0505 00       		.byte	0
 868 0506 00       		.byte	0
 869 0507 00       		.byte	0
 870 0508 22       		.uleb128 0x22
 871 0509 0F010000 		.4byte	.LASF61
 872 050d 04       		.byte	0x4
 873 050e 44       		.byte	0x44
 874 050f A9000000 		.4byte	0xa9
 875 0513 22       		.uleb128 0x22
 876 0514 00000000 		.4byte	.LASF62
 877 0518 05       		.byte	0x5
 878 0519 48       		.byte	0x48
 879 051a CA000000 		.4byte	0xca
 880 051e 23       		.uleb128 0x23
 881 051f 35050000 		.4byte	0x535
 882 0523 2E050000 		.4byte	0x52e
 883 0527 24       		.uleb128 0x24
 884 0528 2E050000 		.4byte	0x52e
 885 052c 03       		.byte	0x3
 886 052d 00       		.byte	0
 887 052e 02       		.uleb128 0x2
 888 052f 04       		.byte	0x4
 889 0530 07       		.byte	0x7
 890 0531 AD050000 		.4byte	.LASF63
 891 0535 25       		.uleb128 0x25
 892 0536 A9000000 		.4byte	0xa9
 893 053a 22       		.uleb128 0x22
 894 053b BE000000 		.4byte	.LASF64
 895 053f 07       		.byte	0x7
 896 0540 B2       		.byte	0xb2
 897 0541 45050000 		.4byte	0x545
 898 0545 25       		.uleb128 0x25
 899 0546 1E050000 		.4byte	0x51e
 900 054a 22       		.uleb128 0x22
 901 054b 6B050000 		.4byte	.LASF65
 902 054f 07       		.byte	0x7
 903 0550 B3       		.byte	0xb3
 904 0551 55050000 		.4byte	0x555
 905 0555 25       		.uleb128 0x25
 906 0556 1E050000 		.4byte	0x51e
 907 055a 23       		.uleb128 0x23
 908 055b A9000000 		.4byte	0xa9
 909 055f 6A050000 		.4byte	0x56a
 910 0563 24       		.uleb128 0x24
 911 0564 2E050000 		.4byte	0x52e
 912 0568 03       		.byte	0x3
 913 0569 00       		.byte	0
 914 056a 22       		.uleb128 0x22
 915 056b D1030000 		.4byte	.LASF66
 916 056f 07       		.byte	0x7
 917 0570 CA       		.byte	0xca
 918 0571 5A050000 		.4byte	0x55a
 919 0575 23       		.uleb128 0x23
 920 0576 CA000000 		.4byte	0xca
 921 057a 85050000 		.4byte	0x585
 922 057e 24       		.uleb128 0x24
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 43


 923 057f 2E050000 		.4byte	0x52e
 924 0583 03       		.byte	0x3
 925 0584 00       		.byte	0
 926 0585 22       		.uleb128 0x22
 927 0586 EA050000 		.4byte	.LASF67
 928 058a 07       		.byte	0x7
 929 058b D2       		.byte	0xd2
 930 058c 75050000 		.4byte	0x575
 931 0590 22       		.uleb128 0x22
 932 0591 DE030000 		.4byte	.LASF68
 933 0595 07       		.byte	0x7
 934 0596 DA       		.byte	0xda
 935 0597 5A050000 		.4byte	0x55a
 936 059b 22       		.uleb128 0x22
 937 059c 16050000 		.4byte	.LASF69
 938 05a0 07       		.byte	0x7
 939 05a1 E2       		.byte	0xe2
 940 05a2 CA000000 		.4byte	0xca
 941 05a6 22       		.uleb128 0x22
 942 05a7 9C020000 		.4byte	.LASF70
 943 05ab 07       		.byte	0x7
 944 05ac F7       		.byte	0xf7
 945 05ad A9000000 		.4byte	0xa9
 946 05b1 26       		.uleb128 0x26
 947 05b2 31000000 		.4byte	.LASF71
 948 05b6 07       		.byte	0x7
 949 05b7 3F01     		.2byte	0x13f
 950 05b9 D5000000 		.4byte	0xd5
 951 05bd 26       		.uleb128 0x26
 952 05be E3040000 		.4byte	.LASF72
 953 05c2 07       		.byte	0x7
 954 05c3 5C01     		.2byte	0x15c
 955 05c5 5A050000 		.4byte	0x55a
 956 05c9 26       		.uleb128 0x26
 957 05ca 22050000 		.4byte	.LASF73
 958 05ce 07       		.byte	0x7
 959 05cf 6101     		.2byte	0x161
 960 05d1 5A050000 		.4byte	0x55a
 961 05d5 23       		.uleb128 0x23
 962 05d6 BF000000 		.4byte	0xbf
 963 05da E5050000 		.4byte	0x5e5
 964 05de 24       		.uleb128 0x24
 965 05df 2E050000 		.4byte	0x52e
 966 05e3 03       		.byte	0x3
 967 05e4 00       		.byte	0
 968 05e5 26       		.uleb128 0x26
 969 05e6 76000000 		.4byte	.LASF74
 970 05ea 07       		.byte	0x7
 971 05eb 6701     		.2byte	0x167
 972 05ed D5050000 		.4byte	0x5d5
 973 05f1 23       		.uleb128 0x23
 974 05f2 01060000 		.4byte	0x601
 975 05f6 01060000 		.4byte	0x601
 976 05fa 24       		.uleb128 0x24
 977 05fb 2E050000 		.4byte	0x52e
 978 05ff 03       		.byte	0x3
 979 0600 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 44


 980 0601 25       		.uleb128 0x25
 981 0602 BF000000 		.4byte	0xbf
 982 0606 26       		.uleb128 0x26
 983 0607 4B020000 		.4byte	.LASF75
 984 060b 07       		.byte	0x7
 985 060c 7401     		.2byte	0x174
 986 060e 12060000 		.4byte	0x612
 987 0612 25       		.uleb128 0x25
 988 0613 F1050000 		.4byte	0x5f1
 989 0617 23       		.uleb128 0x23
 990 0618 A9000000 		.4byte	0xa9
 991 061c 27060000 		.4byte	0x627
 992 0620 24       		.uleb128 0x24
 993 0621 2E050000 		.4byte	0x52e
 994 0625 04       		.byte	0x4
 995 0626 00       		.byte	0
 996 0627 26       		.uleb128 0x26
 997 0628 02050000 		.4byte	.LASF76
 998 062c 07       		.byte	0x7
 999 062d BA01     		.2byte	0x1ba
 1000 062f 17060000 		.4byte	0x617
 1001 0633 22       		.uleb128 0x22
 1002 0634 83060000 		.4byte	.LASF77
 1003 0638 0A       		.byte	0xa
 1004 0639 40       		.byte	0x40
 1005 063a A9000000 		.4byte	0xa9
 1006 063e 22       		.uleb128 0x22
 1007 063f 4D010000 		.4byte	.LASF78
 1008 0643 0A       		.byte	0xa
 1009 0644 47       		.byte	0x47
 1010 0645 B4000000 		.4byte	0xb4
 1011 0649 22       		.uleb128 0x22
 1012 064a BE040000 		.4byte	.LASF79
 1013 064e 0A       		.byte	0xa
 1014 064f 4A       		.byte	0x4a
 1015 0650 A9000000 		.4byte	0xa9
 1016 0654 23       		.uleb128 0x23
 1017 0655 64060000 		.4byte	0x664
 1018 0659 64060000 		.4byte	0x664
 1019 065d 24       		.uleb128 0x24
 1020 065e 2E050000 		.4byte	0x52e
 1021 0662 FF       		.byte	0xff
 1022 0663 00       		.byte	0
 1023 0664 25       		.uleb128 0x25
 1024 0665 7D000000 		.4byte	0x7d
 1025 0669 26       		.uleb128 0x26
 1026 066a B6050000 		.4byte	.LASF80
 1027 066e 03       		.byte	0x3
 1028 066f AB01     		.2byte	0x1ab
 1029 0671 75060000 		.4byte	0x675
 1030 0675 25       		.uleb128 0x25
 1031 0676 54060000 		.4byte	0x654
 1032 067a 26       		.uleb128 0x26
 1033 067b 5D020000 		.4byte	.LASF81
 1034 067f 03       		.byte	0x3
 1035 0680 1602     		.2byte	0x216
 1036 0682 A9000000 		.4byte	0xa9
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 45


 1037 0686 27       		.uleb128 0x27
 1038 0687 F7020000 		.4byte	.LASF82
 1039 068b F7020000 		.4byte	.LASF82
 1040 068f 05       		.byte	0x5
 1041 0690 4F       		.byte	0x4f
 1042 0691 28       		.uleb128 0x28
 1043 0692 AB020000 		.4byte	.LASF83
 1044 0696 AB020000 		.4byte	.LASF83
 1045 069a 03       		.byte	0x3
 1046 069b E901     		.2byte	0x1e9
 1047 069d 28       		.uleb128 0x28
 1048 069e F2000000 		.4byte	.LASF84
 1049 06a2 F2000000 		.4byte	.LASF84
 1050 06a6 03       		.byte	0x3
 1051 06a7 CB01     		.2byte	0x1cb
 1052 06a9 00       		.byte	0
 1053              		.section	.debug_abbrev,"",%progbits
 1054              	.Ldebug_abbrev0:
 1055 0000 01       		.uleb128 0x1
 1056 0001 11       		.uleb128 0x11
 1057 0002 01       		.byte	0x1
 1058 0003 25       		.uleb128 0x25
 1059 0004 0E       		.uleb128 0xe
 1060 0005 13       		.uleb128 0x13
 1061 0006 0B       		.uleb128 0xb
 1062 0007 03       		.uleb128 0x3
 1063 0008 0E       		.uleb128 0xe
 1064 0009 1B       		.uleb128 0x1b
 1065 000a 0E       		.uleb128 0xe
 1066 000b 55       		.uleb128 0x55
 1067 000c 17       		.uleb128 0x17
 1068 000d 11       		.uleb128 0x11
 1069 000e 01       		.uleb128 0x1
 1070 000f 10       		.uleb128 0x10
 1071 0010 17       		.uleb128 0x17
 1072 0011 00       		.byte	0
 1073 0012 00       		.byte	0
 1074 0013 02       		.uleb128 0x2
 1075 0014 24       		.uleb128 0x24
 1076 0015 00       		.byte	0
 1077 0016 0B       		.uleb128 0xb
 1078 0017 0B       		.uleb128 0xb
 1079 0018 3E       		.uleb128 0x3e
 1080 0019 0B       		.uleb128 0xb
 1081 001a 03       		.uleb128 0x3
 1082 001b 0E       		.uleb128 0xe
 1083 001c 00       		.byte	0
 1084 001d 00       		.byte	0
 1085 001e 03       		.uleb128 0x3
 1086 001f 24       		.uleb128 0x24
 1087 0020 00       		.byte	0
 1088 0021 0B       		.uleb128 0xb
 1089 0022 0B       		.uleb128 0xb
 1090 0023 3E       		.uleb128 0x3e
 1091 0024 0B       		.uleb128 0xb
 1092 0025 03       		.uleb128 0x3
 1093 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 46


 1094 0027 00       		.byte	0
 1095 0028 00       		.byte	0
 1096 0029 04       		.uleb128 0x4
 1097 002a 16       		.uleb128 0x16
 1098 002b 00       		.byte	0
 1099 002c 03       		.uleb128 0x3
 1100 002d 0E       		.uleb128 0xe
 1101 002e 3A       		.uleb128 0x3a
 1102 002f 0B       		.uleb128 0xb
 1103 0030 3B       		.uleb128 0x3b
 1104 0031 0B       		.uleb128 0xb
 1105 0032 49       		.uleb128 0x49
 1106 0033 13       		.uleb128 0x13
 1107 0034 00       		.byte	0
 1108 0035 00       		.byte	0
 1109 0036 05       		.uleb128 0x5
 1110 0037 16       		.uleb128 0x16
 1111 0038 00       		.byte	0
 1112 0039 03       		.uleb128 0x3
 1113 003a 0E       		.uleb128 0xe
 1114 003b 3A       		.uleb128 0x3a
 1115 003c 0B       		.uleb128 0xb
 1116 003d 3B       		.uleb128 0x3b
 1117 003e 05       		.uleb128 0x5
 1118 003f 49       		.uleb128 0x49
 1119 0040 13       		.uleb128 0x13
 1120 0041 00       		.byte	0
 1121 0042 00       		.byte	0
 1122 0043 06       		.uleb128 0x6
 1123 0044 04       		.uleb128 0x4
 1124 0045 01       		.byte	0x1
 1125 0046 0B       		.uleb128 0xb
 1126 0047 0B       		.uleb128 0xb
 1127 0048 49       		.uleb128 0x49
 1128 0049 13       		.uleb128 0x13
 1129 004a 3A       		.uleb128 0x3a
 1130 004b 0B       		.uleb128 0xb
 1131 004c 3B       		.uleb128 0x3b
 1132 004d 05       		.uleb128 0x5
 1133 004e 01       		.uleb128 0x1
 1134 004f 13       		.uleb128 0x13
 1135 0050 00       		.byte	0
 1136 0051 00       		.byte	0
 1137 0052 07       		.uleb128 0x7
 1138 0053 28       		.uleb128 0x28
 1139 0054 00       		.byte	0
 1140 0055 03       		.uleb128 0x3
 1141 0056 0E       		.uleb128 0xe
 1142 0057 1C       		.uleb128 0x1c
 1143 0058 0B       		.uleb128 0xb
 1144 0059 00       		.byte	0
 1145 005a 00       		.byte	0
 1146 005b 08       		.uleb128 0x8
 1147 005c 2E       		.uleb128 0x2e
 1148 005d 01       		.byte	0x1
 1149 005e 03       		.uleb128 0x3
 1150 005f 0E       		.uleb128 0xe
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 47


 1151 0060 3A       		.uleb128 0x3a
 1152 0061 0B       		.uleb128 0xb
 1153 0062 3B       		.uleb128 0x3b
 1154 0063 0B       		.uleb128 0xb
 1155 0064 27       		.uleb128 0x27
 1156 0065 19       		.uleb128 0x19
 1157 0066 49       		.uleb128 0x49
 1158 0067 13       		.uleb128 0x13
 1159 0068 20       		.uleb128 0x20
 1160 0069 0B       		.uleb128 0xb
 1161 006a 01       		.uleb128 0x1
 1162 006b 13       		.uleb128 0x13
 1163 006c 00       		.byte	0
 1164 006d 00       		.byte	0
 1165 006e 09       		.uleb128 0x9
 1166 006f 34       		.uleb128 0x34
 1167 0070 00       		.byte	0
 1168 0071 03       		.uleb128 0x3
 1169 0072 0E       		.uleb128 0xe
 1170 0073 3A       		.uleb128 0x3a
 1171 0074 0B       		.uleb128 0xb
 1172 0075 3B       		.uleb128 0x3b
 1173 0076 0B       		.uleb128 0xb
 1174 0077 49       		.uleb128 0x49
 1175 0078 13       		.uleb128 0x13
 1176 0079 00       		.byte	0
 1177 007a 00       		.byte	0
 1178 007b 0A       		.uleb128 0xa
 1179 007c 2E       		.uleb128 0x2e
 1180 007d 01       		.byte	0x1
 1181 007e 03       		.uleb128 0x3
 1182 007f 0E       		.uleb128 0xe
 1183 0080 3A       		.uleb128 0x3a
 1184 0081 0B       		.uleb128 0xb
 1185 0082 3B       		.uleb128 0x3b
 1186 0083 0B       		.uleb128 0xb
 1187 0084 27       		.uleb128 0x27
 1188 0085 19       		.uleb128 0x19
 1189 0086 20       		.uleb128 0x20
 1190 0087 0B       		.uleb128 0xb
 1191 0088 01       		.uleb128 0x1
 1192 0089 13       		.uleb128 0x13
 1193 008a 00       		.byte	0
 1194 008b 00       		.byte	0
 1195 008c 0B       		.uleb128 0xb
 1196 008d 05       		.uleb128 0x5
 1197 008e 00       		.byte	0
 1198 008f 03       		.uleb128 0x3
 1199 0090 08       		.uleb128 0x8
 1200 0091 3A       		.uleb128 0x3a
 1201 0092 0B       		.uleb128 0xb
 1202 0093 3B       		.uleb128 0x3b
 1203 0094 0B       		.uleb128 0xb
 1204 0095 49       		.uleb128 0x49
 1205 0096 13       		.uleb128 0x13
 1206 0097 00       		.byte	0
 1207 0098 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 48


 1208 0099 0C       		.uleb128 0xc
 1209 009a 2E       		.uleb128 0x2e
 1210 009b 01       		.byte	0x1
 1211 009c 03       		.uleb128 0x3
 1212 009d 0E       		.uleb128 0xe
 1213 009e 3A       		.uleb128 0x3a
 1214 009f 0B       		.uleb128 0xb
 1215 00a0 3B       		.uleb128 0x3b
 1216 00a1 05       		.uleb128 0x5
 1217 00a2 27       		.uleb128 0x27
 1218 00a3 19       		.uleb128 0x19
 1219 00a4 20       		.uleb128 0x20
 1220 00a5 0B       		.uleb128 0xb
 1221 00a6 01       		.uleb128 0x1
 1222 00a7 13       		.uleb128 0x13
 1223 00a8 00       		.byte	0
 1224 00a9 00       		.byte	0
 1225 00aa 0D       		.uleb128 0xd
 1226 00ab 05       		.uleb128 0x5
 1227 00ac 00       		.byte	0
 1228 00ad 03       		.uleb128 0x3
 1229 00ae 08       		.uleb128 0x8
 1230 00af 3A       		.uleb128 0x3a
 1231 00b0 0B       		.uleb128 0xb
 1232 00b1 3B       		.uleb128 0x3b
 1233 00b2 05       		.uleb128 0x5
 1234 00b3 49       		.uleb128 0x49
 1235 00b4 13       		.uleb128 0x13
 1236 00b5 00       		.byte	0
 1237 00b6 00       		.byte	0
 1238 00b7 0E       		.uleb128 0xe
 1239 00b8 2E       		.uleb128 0x2e
 1240 00b9 00       		.byte	0
 1241 00ba 03       		.uleb128 0x3
 1242 00bb 0E       		.uleb128 0xe
 1243 00bc 3A       		.uleb128 0x3a
 1244 00bd 0B       		.uleb128 0xb
 1245 00be 3B       		.uleb128 0x3b
 1246 00bf 05       		.uleb128 0x5
 1247 00c0 27       		.uleb128 0x27
 1248 00c1 19       		.uleb128 0x19
 1249 00c2 49       		.uleb128 0x49
 1250 00c3 13       		.uleb128 0x13
 1251 00c4 20       		.uleb128 0x20
 1252 00c5 0B       		.uleb128 0xb
 1253 00c6 00       		.byte	0
 1254 00c7 00       		.byte	0
 1255 00c8 0F       		.uleb128 0xf
 1256 00c9 05       		.uleb128 0x5
 1257 00ca 00       		.byte	0
 1258 00cb 03       		.uleb128 0x3
 1259 00cc 0E       		.uleb128 0xe
 1260 00cd 3A       		.uleb128 0x3a
 1261 00ce 0B       		.uleb128 0xb
 1262 00cf 3B       		.uleb128 0x3b
 1263 00d0 05       		.uleb128 0x5
 1264 00d1 49       		.uleb128 0x49
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 49


 1265 00d2 13       		.uleb128 0x13
 1266 00d3 00       		.byte	0
 1267 00d4 00       		.byte	0
 1268 00d5 10       		.uleb128 0x10
 1269 00d6 2E       		.uleb128 0x2e
 1270 00d7 00       		.byte	0
 1271 00d8 03       		.uleb128 0x3
 1272 00d9 0E       		.uleb128 0xe
 1273 00da 3A       		.uleb128 0x3a
 1274 00db 0B       		.uleb128 0xb
 1275 00dc 3B       		.uleb128 0x3b
 1276 00dd 05       		.uleb128 0x5
 1277 00de 27       		.uleb128 0x27
 1278 00df 19       		.uleb128 0x19
 1279 00e0 20       		.uleb128 0x20
 1280 00e1 0B       		.uleb128 0xb
 1281 00e2 00       		.byte	0
 1282 00e3 00       		.byte	0
 1283 00e4 11       		.uleb128 0x11
 1284 00e5 2E       		.uleb128 0x2e
 1285 00e6 00       		.byte	0
 1286 00e7 03       		.uleb128 0x3
 1287 00e8 0E       		.uleb128 0xe
 1288 00e9 3A       		.uleb128 0x3a
 1289 00ea 0B       		.uleb128 0xb
 1290 00eb 3B       		.uleb128 0x3b
 1291 00ec 0B       		.uleb128 0xb
 1292 00ed 27       		.uleb128 0x27
 1293 00ee 19       		.uleb128 0x19
 1294 00ef 49       		.uleb128 0x49
 1295 00f0 13       		.uleb128 0x13
 1296 00f1 20       		.uleb128 0x20
 1297 00f2 0B       		.uleb128 0xb
 1298 00f3 00       		.byte	0
 1299 00f4 00       		.byte	0
 1300 00f5 12       		.uleb128 0x12
 1301 00f6 34       		.uleb128 0x34
 1302 00f7 00       		.byte	0
 1303 00f8 03       		.uleb128 0x3
 1304 00f9 0E       		.uleb128 0xe
 1305 00fa 3A       		.uleb128 0x3a
 1306 00fb 0B       		.uleb128 0xb
 1307 00fc 3B       		.uleb128 0x3b
 1308 00fd 05       		.uleb128 0x5
 1309 00fe 49       		.uleb128 0x49
 1310 00ff 13       		.uleb128 0x13
 1311 0100 00       		.byte	0
 1312 0101 00       		.byte	0
 1313 0102 13       		.uleb128 0x13
 1314 0103 34       		.uleb128 0x34
 1315 0104 00       		.byte	0
 1316 0105 03       		.uleb128 0x3
 1317 0106 08       		.uleb128 0x8
 1318 0107 3A       		.uleb128 0x3a
 1319 0108 0B       		.uleb128 0xb
 1320 0109 3B       		.uleb128 0x3b
 1321 010a 05       		.uleb128 0x5
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 50


 1322 010b 49       		.uleb128 0x49
 1323 010c 13       		.uleb128 0x13
 1324 010d 00       		.byte	0
 1325 010e 00       		.byte	0
 1326 010f 14       		.uleb128 0x14
 1327 0110 2E       		.uleb128 0x2e
 1328 0111 01       		.byte	0x1
 1329 0112 3F       		.uleb128 0x3f
 1330 0113 19       		.uleb128 0x19
 1331 0114 03       		.uleb128 0x3
 1332 0115 0E       		.uleb128 0xe
 1333 0116 3A       		.uleb128 0x3a
 1334 0117 0B       		.uleb128 0xb
 1335 0118 3B       		.uleb128 0x3b
 1336 0119 0B       		.uleb128 0xb
 1337 011a 27       		.uleb128 0x27
 1338 011b 19       		.uleb128 0x19
 1339 011c 49       		.uleb128 0x49
 1340 011d 13       		.uleb128 0x13
 1341 011e 11       		.uleb128 0x11
 1342 011f 01       		.uleb128 0x1
 1343 0120 12       		.uleb128 0x12
 1344 0121 06       		.uleb128 0x6
 1345 0122 40       		.uleb128 0x40
 1346 0123 18       		.uleb128 0x18
 1347 0124 9742     		.uleb128 0x2117
 1348 0126 19       		.uleb128 0x19
 1349 0127 01       		.uleb128 0x1
 1350 0128 13       		.uleb128 0x13
 1351 0129 00       		.byte	0
 1352 012a 00       		.byte	0
 1353 012b 15       		.uleb128 0x15
 1354 012c 05       		.uleb128 0x5
 1355 012d 00       		.byte	0
 1356 012e 03       		.uleb128 0x3
 1357 012f 0E       		.uleb128 0xe
 1358 0130 3A       		.uleb128 0x3a
 1359 0131 0B       		.uleb128 0xb
 1360 0132 3B       		.uleb128 0x3b
 1361 0133 0B       		.uleb128 0xb
 1362 0134 49       		.uleb128 0x49
 1363 0135 13       		.uleb128 0x13
 1364 0136 02       		.uleb128 0x2
 1365 0137 17       		.uleb128 0x17
 1366 0138 00       		.byte	0
 1367 0139 00       		.byte	0
 1368 013a 16       		.uleb128 0x16
 1369 013b 34       		.uleb128 0x34
 1370 013c 00       		.byte	0
 1371 013d 03       		.uleb128 0x3
 1372 013e 08       		.uleb128 0x8
 1373 013f 3A       		.uleb128 0x3a
 1374 0140 0B       		.uleb128 0xb
 1375 0141 3B       		.uleb128 0x3b
 1376 0142 0B       		.uleb128 0xb
 1377 0143 49       		.uleb128 0x49
 1378 0144 13       		.uleb128 0x13
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 51


 1379 0145 02       		.uleb128 0x2
 1380 0146 17       		.uleb128 0x17
 1381 0147 00       		.byte	0
 1382 0148 00       		.byte	0
 1383 0149 17       		.uleb128 0x17
 1384 014a 34       		.uleb128 0x34
 1385 014b 00       		.byte	0
 1386 014c 03       		.uleb128 0x3
 1387 014d 0E       		.uleb128 0xe
 1388 014e 3A       		.uleb128 0x3a
 1389 014f 0B       		.uleb128 0xb
 1390 0150 3B       		.uleb128 0x3b
 1391 0151 0B       		.uleb128 0xb
 1392 0152 49       		.uleb128 0x49
 1393 0153 13       		.uleb128 0x13
 1394 0154 02       		.uleb128 0x2
 1395 0155 18       		.uleb128 0x18
 1396 0156 00       		.byte	0
 1397 0157 00       		.byte	0
 1398 0158 18       		.uleb128 0x18
 1399 0159 1D       		.uleb128 0x1d
 1400 015a 01       		.byte	0x1
 1401 015b 31       		.uleb128 0x31
 1402 015c 13       		.uleb128 0x13
 1403 015d 11       		.uleb128 0x11
 1404 015e 01       		.uleb128 0x1
 1405 015f 12       		.uleb128 0x12
 1406 0160 06       		.uleb128 0x6
 1407 0161 58       		.uleb128 0x58
 1408 0162 0B       		.uleb128 0xb
 1409 0163 59       		.uleb128 0x59
 1410 0164 0B       		.uleb128 0xb
 1411 0165 01       		.uleb128 0x1
 1412 0166 13       		.uleb128 0x13
 1413 0167 00       		.byte	0
 1414 0168 00       		.byte	0
 1415 0169 19       		.uleb128 0x19
 1416 016a 1D       		.uleb128 0x1d
 1417 016b 01       		.byte	0x1
 1418 016c 31       		.uleb128 0x31
 1419 016d 13       		.uleb128 0x13
 1420 016e 11       		.uleb128 0x11
 1421 016f 01       		.uleb128 0x1
 1422 0170 12       		.uleb128 0x12
 1423 0171 06       		.uleb128 0x6
 1424 0172 58       		.uleb128 0x58
 1425 0173 0B       		.uleb128 0xb
 1426 0174 59       		.uleb128 0x59
 1427 0175 0B       		.uleb128 0xb
 1428 0176 00       		.byte	0
 1429 0177 00       		.byte	0
 1430 0178 1A       		.uleb128 0x1a
 1431 0179 0B       		.uleb128 0xb
 1432 017a 01       		.byte	0x1
 1433 017b 11       		.uleb128 0x11
 1434 017c 01       		.uleb128 0x1
 1435 017d 12       		.uleb128 0x12
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 52


 1436 017e 06       		.uleb128 0x6
 1437 017f 00       		.byte	0
 1438 0180 00       		.byte	0
 1439 0181 1B       		.uleb128 0x1b
 1440 0182 34       		.uleb128 0x34
 1441 0183 00       		.byte	0
 1442 0184 31       		.uleb128 0x31
 1443 0185 13       		.uleb128 0x13
 1444 0186 02       		.uleb128 0x2
 1445 0187 17       		.uleb128 0x17
 1446 0188 00       		.byte	0
 1447 0189 00       		.byte	0
 1448 018a 1C       		.uleb128 0x1c
 1449 018b 1D       		.uleb128 0x1d
 1450 018c 00       		.byte	0
 1451 018d 31       		.uleb128 0x31
 1452 018e 13       		.uleb128 0x13
 1453 018f 11       		.uleb128 0x11
 1454 0190 01       		.uleb128 0x1
 1455 0191 12       		.uleb128 0x12
 1456 0192 06       		.uleb128 0x6
 1457 0193 58       		.uleb128 0x58
 1458 0194 0B       		.uleb128 0xb
 1459 0195 59       		.uleb128 0x59
 1460 0196 0B       		.uleb128 0xb
 1461 0197 00       		.byte	0
 1462 0198 00       		.byte	0
 1463 0199 1D       		.uleb128 0x1d
 1464 019a 34       		.uleb128 0x34
 1465 019b 00       		.byte	0
 1466 019c 31       		.uleb128 0x31
 1467 019d 13       		.uleb128 0x13
 1468 019e 00       		.byte	0
 1469 019f 00       		.byte	0
 1470 01a0 1E       		.uleb128 0x1e
 1471 01a1 1D       		.uleb128 0x1d
 1472 01a2 00       		.byte	0
 1473 01a3 31       		.uleb128 0x31
 1474 01a4 13       		.uleb128 0x13
 1475 01a5 11       		.uleb128 0x11
 1476 01a6 01       		.uleb128 0x1
 1477 01a7 12       		.uleb128 0x12
 1478 01a8 06       		.uleb128 0x6
 1479 01a9 58       		.uleb128 0x58
 1480 01aa 0B       		.uleb128 0xb
 1481 01ab 59       		.uleb128 0x59
 1482 01ac 05       		.uleb128 0x5
 1483 01ad 00       		.byte	0
 1484 01ae 00       		.byte	0
 1485 01af 1F       		.uleb128 0x1f
 1486 01b0 1D       		.uleb128 0x1d
 1487 01b1 01       		.byte	0x1
 1488 01b2 31       		.uleb128 0x31
 1489 01b3 13       		.uleb128 0x13
 1490 01b4 11       		.uleb128 0x11
 1491 01b5 01       		.uleb128 0x1
 1492 01b6 12       		.uleb128 0x12
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 53


 1493 01b7 06       		.uleb128 0x6
 1494 01b8 58       		.uleb128 0x58
 1495 01b9 0B       		.uleb128 0xb
 1496 01ba 59       		.uleb128 0x59
 1497 01bb 05       		.uleb128 0x5
 1498 01bc 01       		.uleb128 0x1
 1499 01bd 13       		.uleb128 0x13
 1500 01be 00       		.byte	0
 1501 01bf 00       		.byte	0
 1502 01c0 20       		.uleb128 0x20
 1503 01c1 05       		.uleb128 0x5
 1504 01c2 00       		.byte	0
 1505 01c3 31       		.uleb128 0x31
 1506 01c4 13       		.uleb128 0x13
 1507 01c5 02       		.uleb128 0x2
 1508 01c6 17       		.uleb128 0x17
 1509 01c7 00       		.byte	0
 1510 01c8 00       		.byte	0
 1511 01c9 21       		.uleb128 0x21
 1512 01ca 898201   		.uleb128 0x4109
 1513 01cd 00       		.byte	0
 1514 01ce 11       		.uleb128 0x11
 1515 01cf 01       		.uleb128 0x1
 1516 01d0 31       		.uleb128 0x31
 1517 01d1 13       		.uleb128 0x13
 1518 01d2 00       		.byte	0
 1519 01d3 00       		.byte	0
 1520 01d4 22       		.uleb128 0x22
 1521 01d5 34       		.uleb128 0x34
 1522 01d6 00       		.byte	0
 1523 01d7 03       		.uleb128 0x3
 1524 01d8 0E       		.uleb128 0xe
 1525 01d9 3A       		.uleb128 0x3a
 1526 01da 0B       		.uleb128 0xb
 1527 01db 3B       		.uleb128 0x3b
 1528 01dc 0B       		.uleb128 0xb
 1529 01dd 49       		.uleb128 0x49
 1530 01de 13       		.uleb128 0x13
 1531 01df 3F       		.uleb128 0x3f
 1532 01e0 19       		.uleb128 0x19
 1533 01e1 3C       		.uleb128 0x3c
 1534 01e2 19       		.uleb128 0x19
 1535 01e3 00       		.byte	0
 1536 01e4 00       		.byte	0
 1537 01e5 23       		.uleb128 0x23
 1538 01e6 01       		.uleb128 0x1
 1539 01e7 01       		.byte	0x1
 1540 01e8 49       		.uleb128 0x49
 1541 01e9 13       		.uleb128 0x13
 1542 01ea 01       		.uleb128 0x1
 1543 01eb 13       		.uleb128 0x13
 1544 01ec 00       		.byte	0
 1545 01ed 00       		.byte	0
 1546 01ee 24       		.uleb128 0x24
 1547 01ef 21       		.uleb128 0x21
 1548 01f0 00       		.byte	0
 1549 01f1 49       		.uleb128 0x49
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 54


 1550 01f2 13       		.uleb128 0x13
 1551 01f3 2F       		.uleb128 0x2f
 1552 01f4 0B       		.uleb128 0xb
 1553 01f5 00       		.byte	0
 1554 01f6 00       		.byte	0
 1555 01f7 25       		.uleb128 0x25
 1556 01f8 26       		.uleb128 0x26
 1557 01f9 00       		.byte	0
 1558 01fa 49       		.uleb128 0x49
 1559 01fb 13       		.uleb128 0x13
 1560 01fc 00       		.byte	0
 1561 01fd 00       		.byte	0
 1562 01fe 26       		.uleb128 0x26
 1563 01ff 34       		.uleb128 0x34
 1564 0200 00       		.byte	0
 1565 0201 03       		.uleb128 0x3
 1566 0202 0E       		.uleb128 0xe
 1567 0203 3A       		.uleb128 0x3a
 1568 0204 0B       		.uleb128 0xb
 1569 0205 3B       		.uleb128 0x3b
 1570 0206 05       		.uleb128 0x5
 1571 0207 49       		.uleb128 0x49
 1572 0208 13       		.uleb128 0x13
 1573 0209 3F       		.uleb128 0x3f
 1574 020a 19       		.uleb128 0x19
 1575 020b 3C       		.uleb128 0x3c
 1576 020c 19       		.uleb128 0x19
 1577 020d 00       		.byte	0
 1578 020e 00       		.byte	0
 1579 020f 27       		.uleb128 0x27
 1580 0210 2E       		.uleb128 0x2e
 1581 0211 00       		.byte	0
 1582 0212 3F       		.uleb128 0x3f
 1583 0213 19       		.uleb128 0x19
 1584 0214 3C       		.uleb128 0x3c
 1585 0215 19       		.uleb128 0x19
 1586 0216 6E       		.uleb128 0x6e
 1587 0217 0E       		.uleb128 0xe
 1588 0218 03       		.uleb128 0x3
 1589 0219 0E       		.uleb128 0xe
 1590 021a 3A       		.uleb128 0x3a
 1591 021b 0B       		.uleb128 0xb
 1592 021c 3B       		.uleb128 0x3b
 1593 021d 0B       		.uleb128 0xb
 1594 021e 00       		.byte	0
 1595 021f 00       		.byte	0
 1596 0220 28       		.uleb128 0x28
 1597 0221 2E       		.uleb128 0x2e
 1598 0222 00       		.byte	0
 1599 0223 3F       		.uleb128 0x3f
 1600 0224 19       		.uleb128 0x19
 1601 0225 3C       		.uleb128 0x3c
 1602 0226 19       		.uleb128 0x19
 1603 0227 6E       		.uleb128 0x6e
 1604 0228 0E       		.uleb128 0xe
 1605 0229 03       		.uleb128 0x3
 1606 022a 0E       		.uleb128 0xe
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 55


 1607 022b 3A       		.uleb128 0x3a
 1608 022c 0B       		.uleb128 0xb
 1609 022d 3B       		.uleb128 0x3b
 1610 022e 05       		.uleb128 0x5
 1611 022f 00       		.byte	0
 1612 0230 00       		.byte	0
 1613 0231 00       		.byte	0
 1614              		.section	.debug_loc,"",%progbits
 1615              	.Ldebug_loc0:
 1616              	.LLST0:
 1617 0000 00000000 		.4byte	.LVL0
 1618 0004 4E000000 		.4byte	.LVL3
 1619 0008 0100     		.2byte	0x1
 1620 000a 50       		.byte	0x50
 1621 000b 6B000000 		.4byte	.LVL4-1
 1622 000f DC000000 		.4byte	.LVL17
 1623 0013 0400     		.2byte	0x4
 1624 0015 F3       		.byte	0xf3
 1625 0016 01       		.uleb128 0x1
 1626 0017 50       		.byte	0x50
 1627 0018 9F       		.byte	0x9f
 1628 0019 DC000000 		.4byte	.LVL17
 1629 001d DE000000 		.4byte	.LVL18
 1630 0021 0100     		.2byte	0x1
 1631 0023 50       		.byte	0x50
 1632 0024 DE000000 		.4byte	.LVL18
 1633 0028 E0000000 		.4byte	.LVL19
 1634 002c 0400     		.2byte	0x4
 1635 002e F3       		.byte	0xf3
 1636 002f 01       		.uleb128 0x1
 1637 0030 50       		.byte	0x50
 1638 0031 9F       		.byte	0x9f
 1639 0032 E0000000 		.4byte	.LVL19
 1640 0036 E2000000 		.4byte	.LVL20
 1641 003a 0100     		.2byte	0x1
 1642 003c 50       		.byte	0x50
 1643 003d E2000000 		.4byte	.LVL20
 1644 0041 E4000000 		.4byte	.LVL21
 1645 0045 0400     		.2byte	0x4
 1646 0047 F3       		.byte	0xf3
 1647 0048 01       		.uleb128 0x1
 1648 0049 50       		.byte	0x50
 1649 004a 9F       		.byte	0x9f
 1650 004b E4000000 		.4byte	.LVL21
 1651 004f E6000000 		.4byte	.LVL22
 1652 0053 0100     		.2byte	0x1
 1653 0055 50       		.byte	0x50
 1654 0056 E6000000 		.4byte	.LVL22
 1655 005a E8000000 		.4byte	.LVL23
 1656 005e 0400     		.2byte	0x4
 1657 0060 F3       		.byte	0xf3
 1658 0061 01       		.uleb128 0x1
 1659 0062 50       		.byte	0x50
 1660 0063 9F       		.byte	0x9f
 1661 0064 E8000000 		.4byte	.LVL23
 1662 0068 EA000000 		.4byte	.LVL24
 1663 006c 0100     		.2byte	0x1
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 56


 1664 006e 50       		.byte	0x50
 1665 006f EA000000 		.4byte	.LVL24
 1666 0073 EC000000 		.4byte	.LVL25
 1667 0077 0400     		.2byte	0x4
 1668 0079 F3       		.byte	0xf3
 1669 007a 01       		.uleb128 0x1
 1670 007b 50       		.byte	0x50
 1671 007c 9F       		.byte	0x9f
 1672 007d EC000000 		.4byte	.LVL25
 1673 0081 EE000000 		.4byte	.LVL26
 1674 0085 0100     		.2byte	0x1
 1675 0087 50       		.byte	0x50
 1676 0088 EE000000 		.4byte	.LVL26
 1677 008c 24010000 		.4byte	.LFE60
 1678 0090 0400     		.2byte	0x4
 1679 0092 F3       		.byte	0xf3
 1680 0093 01       		.uleb128 0x1
 1681 0094 50       		.byte	0x50
 1682 0095 9F       		.byte	0x9f
 1683 0096 00000000 		.4byte	0
 1684 009a 00000000 		.4byte	0
 1685              	.LLST1:
 1686 009e DA000000 		.4byte	.LVL16
 1687 00a2 DC000000 		.4byte	.LVL17
 1688 00a6 0200     		.2byte	0x2
 1689 00a8 30       		.byte	0x30
 1690 00a9 9F       		.byte	0x9f
 1691 00aa EE000000 		.4byte	.LVL26
 1692 00ae 24010000 		.4byte	.LFE60
 1693 00b2 0100     		.2byte	0x1
 1694 00b4 50       		.byte	0x50
 1695 00b5 00000000 		.4byte	0
 1696 00b9 00000000 		.4byte	0
 1697              	.LLST2:
 1698 00bd 06000000 		.4byte	.LVL1
 1699 00c1 08000000 		.4byte	.LVL2
 1700 00c5 0100     		.2byte	0x1
 1701 00c7 54       		.byte	0x54
 1702 00c8 00000000 		.4byte	0
 1703 00cc 00000000 		.4byte	0
 1704              	.LLST3:
 1705 00d0 6C000000 		.4byte	.LVL4
 1706 00d4 84000000 		.4byte	.LVL5
 1707 00d8 0100     		.2byte	0x1
 1708 00da 50       		.byte	0x50
 1709 00db 9C000000 		.4byte	.LVL9
 1710 00df B3000000 		.4byte	.LVL10-1
 1711 00e3 0100     		.2byte	0x1
 1712 00e5 50       		.byte	0x50
 1713 00e6 00000000 		.4byte	0
 1714 00ea 00000000 		.4byte	0
 1715              	.LLST4:
 1716 00ee 92000000 		.4byte	.LVL6
 1717 00f2 96000000 		.4byte	.LVL7
 1718 00f6 0100     		.2byte	0x1
 1719 00f8 50       		.byte	0x50
 1720 00f9 00000000 		.4byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 57


 1721 00fd 00000000 		.4byte	0
 1722              	.LLST5:
 1723 0101 B4000000 		.4byte	.LVL10
 1724 0105 C8000000 		.4byte	.LVL12
 1725 0109 0100     		.2byte	0x1
 1726 010b 50       		.byte	0x50
 1727 010c CE000000 		.4byte	.LVL14
 1728 0110 D1000000 		.4byte	.LVL15-1
 1729 0114 0100     		.2byte	0x1
 1730 0116 50       		.byte	0x50
 1731 0117 00000000 		.4byte	0
 1732 011b 00000000 		.4byte	0
 1733              	.LLST6:
 1734 011f C4000000 		.4byte	.LVL11
 1735 0123 C8000000 		.4byte	.LVL12
 1736 0127 0100     		.2byte	0x1
 1737 0129 50       		.byte	0x50
 1738 012a 00000000 		.4byte	0
 1739 012e 00000000 		.4byte	0
 1740              	.LLST7:
 1741 0132 CE000000 		.4byte	.LVL14
 1742 0136 D1000000 		.4byte	.LVL15-1
 1743 013a 0100     		.2byte	0x1
 1744 013c 50       		.byte	0x50
 1745 013d 00000000 		.4byte	0
 1746 0141 00000000 		.4byte	0
 1747              	.LLST8:
 1748 0145 EE000000 		.4byte	.LVL26
 1749 0149 F2000000 		.4byte	.LVL27
 1750 014d 0100     		.2byte	0x1
 1751 014f 54       		.byte	0x54
 1752 0150 00000000 		.4byte	0
 1753 0154 00000000 		.4byte	0
 1754              		.section	.debug_aranges,"",%progbits
 1755 0000 1C000000 		.4byte	0x1c
 1756 0004 0200     		.2byte	0x2
 1757 0006 00000000 		.4byte	.Ldebug_info0
 1758 000a 04       		.byte	0x4
 1759 000b 00       		.byte	0
 1760 000c 0000     		.2byte	0
 1761 000e 0000     		.2byte	0
 1762 0010 00000000 		.4byte	.LFB60
 1763 0014 24010000 		.4byte	.LFE60-.LFB60
 1764 0018 00000000 		.4byte	0
 1765 001c 00000000 		.4byte	0
 1766              		.section	.debug_ranges,"",%progbits
 1767              	.Ldebug_ranges0:
 1768 0000 00000000 		.4byte	.LFB60
 1769 0004 24010000 		.4byte	.LFE60
 1770 0008 00000000 		.4byte	0
 1771 000c 00000000 		.4byte	0
 1772              		.section	.debug_line,"",%progbits
 1773              	.Ldebug_line0:
 1774 0000 01020000 		.section	.debug_str,"MS",%progbits,1
 1774      02007601 
 1774      00000201 
 1774      FB0E0D00 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 58


 1774      01010101 
 1775              	.LASF62:
 1776 0000 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1776      74645F65 
 1776      6E646379 
 1776      636C655F 
 1776      6E657874 
 1777              	.LASF23:
 1778 0019 4B65726E 		.ascii	"Kernel_Context\000"
 1778      656C5F43 
 1778      6F6E7465 
 1778      787400
 1779              	.LASF10:
 1780 0028 45455F55 		.ascii	"EE_UINT8\000"
 1780      494E5438 
 1780      00
 1781              	.LASF71:
 1782 0031 45455F72 		.ascii	"EE_rq_bitmask\000"
 1782      715F6269 
 1782      746D6173 
 1782      6B00
 1783              	.LASF15:
 1784 003f 45455F55 		.ascii	"EE_UREG\000"
 1784      52454700 
 1785              	.LASF38:
 1786 0047 45455F4F 		.ascii	"EE_ORTI_set_th_priority\000"
 1786      5254495F 
 1786      7365745F 
 1786      74685F70 
 1786      72696F72 
 1787              	.LASF58:
 1788 005f 6E657874 		.ascii	"nexttask\000"
 1788      7461736B 
 1788      00
 1789              	.LASF21:
 1790 0068 4576656E 		.ascii	"EventMaskType\000"
 1790      744D6173 
 1790      6B547970 
 1790      6500
 1791              	.LASF74:
 1792 0076 45455F74 		.ascii	"EE_th_waswaiting\000"
 1792      685F7761 
 1792      73776169 
 1792      74696E67 
 1792      00
 1793              	.LASF2:
 1794 0087 73686F72 		.ascii	"short int\000"
 1794      7420696E 
 1794      7400
 1795              	.LASF22:
 1796 0091 53746174 		.ascii	"StatusType\000"
 1796      75735479 
 1796      706500
 1797              	.LASF41:
 1798 009c 45455F73 		.ascii	"EE_stk_getfirst\000"
 1798      746B5F67 
 1798      65746669 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 59


 1798      72737400 
 1799              	.LASF16:
 1800 00ac 45455F46 		.ascii	"EE_FREG\000"
 1800      52454700 
 1801              	.LASF14:
 1802 00b4 45455F55 		.ascii	"EE_UINT32\000"
 1802      494E5433 
 1802      3200
 1803              	.LASF64:
 1804 00be 45455F74 		.ascii	"EE_th_ready_prio\000"
 1804      685F7265 
 1804      6164795F 
 1804      7072696F 
 1804      00
 1805              	.LASF25:
 1806 00cf 49535232 		.ascii	"ISR2_Context\000"
 1806      5F436F6E 
 1806      74657874 
 1806      00
 1807              	.LASF18:
 1808 00dc 45455F54 		.ascii	"EE_TID\000"
 1808      494400
 1809              	.LASF34:
 1810 00e3 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1810      59504543 
 1810      4F4E5445 
 1810      585400
 1811              	.LASF84:
 1812 00f2 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1812      715F7175 
 1812      65727966 
 1812      69727374 
 1812      00
 1813              	.LASF53:
 1814 0103 69737461 		.ascii	"istat\000"
 1814      7400
 1815              	.LASF39:
 1816 0109 696E6465 		.ascii	"index\000"
 1816      7800
 1817              	.LASF61:
 1818 010f 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1818      52515F6E 
 1818      65737469 
 1818      6E675F6C 
 1818      6576656C 
 1819              	.LASF26:
 1820 0124 4572726F 		.ascii	"ErrorHook_Context\000"
 1820      72486F6F 
 1820      6B5F436F 
 1820      6E746578 
 1820      7400
 1821              	.LASF50:
 1822 0136 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1822      5254495F 
 1822      7365745F 
 1822      73657276 
 1822      6963655F 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 60


 1823              	.LASF78:
 1824 014d 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1824      6F5F4952 
 1824      515F7375 
 1824      7370656E 
 1824      645F7374 
 1825              	.LASF59:
 1826 0166 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 1826      6F5F7275 
 1826      6E5F6E65 
 1826      78745F74 
 1826      61736B00 
 1827              	.LASF33:
 1828 017a 49646C65 		.ascii	"Idle_Context\000"
 1828      5F436F6E 
 1828      74657874 
 1828      00
 1829              	.LASF6:
 1830 0187 6C6F6E67 		.ascii	"long long int\000"
 1830      206C6F6E 
 1830      6720696E 
 1830      7400
 1831              	.LASF11:
 1832 0195 45455F49 		.ascii	"EE_INT8\000"
 1832      4E543800 
 1833              	.LASF19:
 1834 019d 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1834      5950455F 
 1834      52515F4D 
 1834      41534B00 
 1835              	.LASF87:
 1836 01ad 433A5C4D 		.ascii	"C:\\My_Files\\College_Documents\\AMA EOS\\EOS\\LAB\\"
 1836      795F4669 
 1836      6C65735C 
 1836      436F6C6C 
 1836      6567655F 
 1837 01db 4C41425F 		.ascii	"LAB_2_Submission\\Json Parser\\code\\w06_criticalRe"
 1837      325F5375 
 1837      626D6973 
 1837      73696F6E 
 1837      5C4A736F 
 1838 020b 67696F6E 		.ascii	"gion.cydsn\\Lab2_JSONParser01.cydsn\000"
 1838      2E637964 
 1838      736E5C4C 
 1838      6162325F 
 1838      4A534F4E 
 1839              	.LASF4:
 1840 022e 6C6F6E67 		.ascii	"long int\000"
 1840      20696E74 
 1840      00
 1841              	.LASF36:
 1842 0237 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 1842      5254495F 
 1842      7365745F 
 1842      73657276 
 1842      69636500 
 1843              	.LASF75:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 61


 1844 024b 45455F74 		.ascii	"EE_th_is_extended\000"
 1844      685F6973 
 1844      5F657874 
 1844      656E6465 
 1844      6400
 1845              	.LASF81:
 1846 025d 45455F69 		.ascii	"EE_isr2_index\000"
 1846      7372325F 
 1846      696E6465 
 1846      7800
 1847              	.LASF37:
 1848 026b 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1848      735F7365 
 1848      745F6578 
 1848      65637574 
 1848      696F6E5F 
 1849              	.LASF46:
 1850 0287 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1850      616C5F72 
 1850      65616479 
 1850      32737461 
 1850      636B6564 
 1851              	.LASF70:
 1852 029c 45455F73 		.ascii	"EE_sys_ceiling\000"
 1852      79735F63 
 1852      65696C69 
 1852      6E6700
 1853              	.LASF83:
 1854 02ab 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1854      71327374 
 1854      6B5F6578 
 1854      6368616E 
 1854      676500
 1855              	.LASF86:
 1856 02be 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_evwait.c\000"
 1856      72617465 
 1856      645F536F 
 1856      75726365 
 1856      5C50536F 
 1857              	.LASF9:
 1858 02eb 6C6F6E67 		.ascii	"long double\000"
 1858      20646F75 
 1858      626C6500 
 1859              	.LASF82:
 1860 02f7 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 1860      6F727465 
 1860      785F6D78 
 1860      5F636861 
 1860      6E67655F 
 1861              	.LASF20:
 1862 0313 5461736B 		.ascii	"TaskType\000"
 1862      54797065 
 1862      00
 1863              	.LASF1:
 1864 031c 756E7369 		.ascii	"unsigned char\000"
 1864      676E6564 
 1864      20636861 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 62


 1864      7200
 1865              	.LASF55:
 1866 032a 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1866      616C5F65 
 1866      6E645F6E 
 1866      65737465 
 1866      645F7072 
 1867              	.LASF88:
 1868 0346 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 1868      6F727465 
 1868      785F6D78 
 1868      5F737573 
 1868      70656E64 
 1869              	.LASF43:
 1870 035e 45455F68 		.ascii	"EE_hal_stkchange\000"
 1870      616C5F73 
 1870      746B6368 
 1870      616E6765 
 1870      00
 1871              	.LASF0:
 1872 036f 7369676E 		.ascii	"signed char\000"
 1872      65642063 
 1872      68617200 
 1873              	.LASF90:
 1874 037b 4D61736B 		.ascii	"Mask\000"
 1874      00
 1875              	.LASF7:
 1876 0380 6C6F6E67 		.ascii	"long long unsigned int\000"
 1876      206C6F6E 
 1876      6720756E 
 1876      7369676E 
 1876      65642069 
 1877              	.LASF49:
 1878 0397 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 1878      735F6D6F 
 1878      6E69746F 
 1878      72696E67 
 1878      5F746865 
 1879              	.LASF42:
 1880 03b2 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1880      746B5F71 
 1880      75657279 
 1880      66697273 
 1880      7400
 1881              	.LASF8:
 1882 03c4 756E7369 		.ascii	"unsigned int\000"
 1882      676E6564 
 1882      20696E74 
 1882      00
 1883              	.LASF66:
 1884 03d1 45455F74 		.ascii	"EE_th_status\000"
 1884      685F7374 
 1884      61747573 
 1884      00
 1885              	.LASF68:
 1886 03de 45455F74 		.ascii	"EE_th_rnact\000"
 1886      685F726E 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 63


 1886      61637400 
 1887              	.LASF13:
 1888 03ea 45455F49 		.ascii	"EE_INT32\000"
 1888      4E543332 
 1888      00
 1889              	.LASF44:
 1890 03f3 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1890      6F5F6361 
 1890      6C6C5F50 
 1890      6F737454 
 1890      61736B48 
 1891              	.LASF24:
 1892 040b 5441534B 		.ascii	"TASK_Context\000"
 1892      5F436F6E 
 1892      74657874 
 1892      00
 1893              	.LASF3:
 1894 0418 73686F72 		.ascii	"short unsigned int\000"
 1894      7420756E 
 1894      7369676E 
 1894      65642069 
 1894      6E7400
 1895              	.LASF31:
 1896 042b 53687574 		.ascii	"ShutdownHook_Context\000"
 1896      646F776E 
 1896      486F6F6B 
 1896      5F436F6E 
 1896      74657874 
 1897              	.LASF89:
 1898 0440 45455F6F 		.ascii	"EE_oo_WaitEvent\000"
 1898      6F5F5761 
 1898      69744576 
 1898      656E7400 
 1899              	.LASF12:
 1900 0450 45455F55 		.ascii	"EE_UINT16\000"
 1900      494E5431 
 1900      3600
 1901              	.LASF32:
 1902 045a 416C6172 		.ascii	"AlarmCallback_Context\000"
 1902      6D43616C 
 1902      6C626163 
 1902      6B5F436F 
 1902      6E746578 
 1903              	.LASF47:
 1904 0470 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1904      5254495F 
 1904      7365745F 
 1904      74685F65 
 1904      715F6469 
 1905              	.LASF52:
 1906 0490 45455F6F 		.ascii	"EE_oo_prepare_to_block\000"
 1906      6F5F7072 
 1906      65706172 
 1906      655F746F 
 1906      5F626C6F 
 1907              	.LASF35:
 1908 04a7 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 64


 1908      6F727465 
 1908      785F6D78 
 1908      5F726573 
 1908      756D6549 
 1909              	.LASF79:
 1910 04be 45455F41 		.ascii	"EE_ApplicationMode\000"
 1910      70706C69 
 1910      63617469 
 1910      6F6E4D6F 
 1910      646500
 1911              	.LASF5:
 1912 04d1 6C6F6E67 		.ascii	"long unsigned int\000"
 1912      20756E73 
 1912      69676E65 
 1912      6420696E 
 1912      7400
 1913              	.LASF72:
 1914 04e3 45455F74 		.ascii	"EE_th_event_active\000"
 1914      685F6576 
 1914      656E745F 
 1914      61637469 
 1914      766500
 1915              	.LASF17:
 1916 04f6 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1916      59504542 
 1916      4F4F4C00 
 1917              	.LASF76:
 1918 0502 45455F74 		.ascii	"EE_th_resource_last\000"
 1918      685F7265 
 1918      736F7572 
 1918      63655F6C 
 1918      61737400 
 1919              	.LASF69:
 1920 0516 45455F73 		.ascii	"EE_stkfirst\000"
 1920      746B6669 
 1920      72737400 
 1921              	.LASF73:
 1922 0522 45455F74 		.ascii	"EE_th_event_waitmask\000"
 1922      685F6576 
 1922      656E745F 
 1922      77616974 
 1922      6D61736B 
 1923              	.LASF27:
 1924 0537 50726F74 		.ascii	"ProtectionHook_Context\000"
 1924      65637469 
 1924      6F6E486F 
 1924      6F6B5F43 
 1924      6F6E7465 
 1925              	.LASF48:
 1926 054e 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 1926      616C5F67 
 1926      65745F49 
 1926      52515F6E 
 1926      65737469 
 1927              	.LASF65:
 1928 056b 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1928      685F6469 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 65


 1928      73706174 
 1928      63685F70 
 1928      72696F00 
 1929              	.LASF28:
 1930 057f 50726554 		.ascii	"PreTaskHook_Context\000"
 1930      61736B48 
 1930      6F6F6B5F 
 1930      436F6E74 
 1930      65787400 
 1931              	.LASF40:
 1932 0593 7072696F 		.ascii	"prio\000"
 1932      00
 1933              	.LASF29:
 1934 0598 506F7374 		.ascii	"PostTaskHook_Context\000"
 1934      5461736B 
 1934      486F6F6B 
 1934      5F436F6E 
 1934      74657874 
 1935              	.LASF63:
 1936 05ad 73697A65 		.ascii	"sizetype\000"
 1936      74797065 
 1936      00
 1937              	.LASF80:
 1938 05b6 45455F72 		.ascii	"EE_rq_lookup\000"
 1938      715F6C6F 
 1938      6F6B7570 
 1938      00
 1939              	.LASF57:
 1940 05c3 45455F6F 		.ascii	"EE_oo_reschedule_on_block\000"
 1940      6F5F7265 
 1940      73636865 
 1940      64756C65 
 1940      5F6F6E5F 
 1941              	.LASF54:
 1942 05dd 63757272 		.ascii	"current\000"
 1942      656E7400 
 1943              	.LASF60:
 1944 05e5 666C6167 		.ascii	"flag\000"
 1944      00
 1945              	.LASF67:
 1946 05ea 45455F74 		.ascii	"EE_th_next\000"
 1946      685F6E65 
 1946      787400
 1947              	.LASF85:
 1948 05f5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1948      43313120 
 1948      352E342E 
 1948      31203230 
 1948      31363036 
 1949 0628 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1949      20726576 
 1949      6973696F 
 1949      6E203233 
 1949      37373135 
 1950 065b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1950      66756E63 
 1950      74696F6E 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccDuEarH.s 			page 66


 1950      2D736563 
 1950      74696F6E 
 1951              	.LASF77:
 1952 0683 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1952      6F5F4952 
 1952      515F6469 
 1952      7361626C 
 1952      655F636F 
 1953              	.LASF45:
 1954 069b 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1954      6F5F6361 
 1954      6C6C5F50 
 1954      72655461 
 1954      736B486F 
 1955              	.LASF30:
 1956 06b2 53746172 		.ascii	"StartupHook_Context\000"
 1956      74757048 
 1956      6F6F6B5F 
 1956      436F6E74 
 1956      65787400 
 1957              	.LASF56:
 1958 06c6 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1958      5254495F 
 1958      7365745F 
 1958      73657276 
 1958      6963655F 
 1959              	.LASF51:
 1960 06de 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 1960      616C5F62 
 1960      6567696E 
 1960      5F6E6573 
 1960      7465645F 
 1961              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
