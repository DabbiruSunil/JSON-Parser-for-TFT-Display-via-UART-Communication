ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_force_schedule.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_ForceSchedule,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_ForceSchedule
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_ForceSchedule, %function
  25              	EE_oo_ForceSchedule:
  26              	.LFB60:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_force_schedule.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * CVS: $Id: ee_force_schedule.c,v 1.2 2006/06/08 20:40:42 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #include "ErikaOS_1_ee_internal.inc"
  53:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  54:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /* Force Scheduling: 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  56:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - This is an internal function that has been inserted in the OO
  57:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       implementation because it is also needed because counters relies
  58:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       on such a rescheduling point when the counter increment is
  59:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       called inside a task (a call to this function is not needed when
  60:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       calling the counter increment inside an interrupt handler.
  61:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - no checks are done at all; it is the user responsibility to take
  63:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       care that this function is called in the proper place.
  64:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - the typical behavior of this function is -nothing-. It will just
  66:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       implement a preemption point for the functions that need it and
  67:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       that have not a preemption point hardwired in their code.
  68:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  69:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - return values:
  70:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       Standard status: nothing
  71:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       Extended status: E_OS_CALLEVEL, if it was called at interrupt level
  72:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** */
  74:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  75:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #ifndef __PRIVATE_FORCESCHEDULE__
  76:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** StatusType EE_oo_ForceSchedule( void )
  78:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** {
  28              		.loc 1 78 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 3


  37              		.cfi_offset 14, -4
  38              	.LBB58:
  39              	.LBB59:
  40              	.LBB60:
  41              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 4


  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 5


 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 6


 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 7


 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  42              		.loc 2 260 0
  43              		.syntax unified
  44              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  45 0002 EFF31084 		mrs r4, primask
  46              	@ 0 "" 2
  47              	.LVL0:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  48              		.loc 2 261 0
  49              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  50 0006 72B6     		cpsid i
  51              	@ 0 "" 2
  52              	.LVL1:
  53              		.thumb
  54              		.syntax unified
  55              	.LBE60:
  56              	.LBE59:
  57              	.LBE58:
  58              	.LBB61:
  59              	.LBB62:
  60              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 8


   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 9


  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  61              		.loc 3 79 0
  62 0008 1B4B     		ldr	r3, .L6
  63 000a 1B68     		ldr	r3, [r3]
  64              	.LBE62:
  65              	.LBE61:
  79:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* Error Value */
  80:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   register StatusType ev;
  81:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* Primitive Lock Procedure */
  82:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  83:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  84:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_FORCESCHEDULE);
  85:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  86:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_as_monitoring_the_stack();
  87:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #ifdef EE_SERVICE_PROTECTION__
  89:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /*  [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
  90:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  91:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       then the Operating System shall ignore the service AND shall return
  92:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  93:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   if ( EE_oo_check_disableint_error() ) {
  94:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     ev = E_OS_DISABLEDINT;
  95:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   } else
  96:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #endif /* EE_SERVICE_PROTECTION__ */ 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  98:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
  99:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
 100:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       AND is currently not inside a Category 1 ISR the Operating System module
 101:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       shall not perform the requested action (the service call shall have no
 102:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
 103:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* check for a call at interrupt level: This must be the FIRST check!*/
 105:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U)
  66              		.loc 1 105 0
  67 000c 7BBB     		cbnz	r3, .L2
  68              	.LBB63:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 10


  69              	.LBB64:
  70              	.LBB65:
  71              	.LBB66:
  72              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 11


  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 12


 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 13


 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 14


 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  73              		.loc 4 240 0
  74 000e 1B4B     		ldr	r3, .L6+4
  75 0010 1D68     		ldr	r5, [r3]
  76              	.LBE66:
  77              	.LBE65:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 15


 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 16


 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 17


 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 18


 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 19


 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 20


 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 21


 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
  78              		.loc 4 646 0
  79 0012 FFF7FEFF 		bl	EE_rq_queryfirst
  80              	.LVL2:
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
  81              		.loc 4 671 0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 22


  82 0016 B0F1FF3F 		cmp	r0, #-1
  83 001a 28D0     		beq	.L2
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
  84              		.loc 4 674 0
  85 001c 184B     		ldr	r3, .L6+8
  86 001e 53F82020 		ldr	r2, [r3, r0, lsl #2]
  87 0022 184B     		ldr	r3, .L6+12
  88 0024 1B68     		ldr	r3, [r3]
  89 0026 9A42     		cmp	r2, r3
  90 0028 21D9     		bls	.L2
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
  91              		.loc 4 676 0
  92 002a B5F1FF3F 		cmp	r5, #-1
  93 002e 03D0     		beq	.L3
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
  94              		.loc 4 679 0
  95 0030 0221     		movs	r1, #2
  96 0032 154A     		ldr	r2, .L6+16
  97 0034 42F82510 		str	r1, [r2, r5, lsl #2]
  98              	.L3:
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
  99              		.loc 4 685 0
 100 0038 144A     		ldr	r2, .L6+20
 101 003a 52F82020 		ldr	r2, [r2, r0, lsl #2]
 102 003e 1343     		orrs	r3, r3, r2
 103 0040 104A     		ldr	r2, .L6+12
 104 0042 1360     		str	r3, [r2]
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 105              		.loc 4 687 0
 106 0044 0022     		movs	r2, #0
 107 0046 104B     		ldr	r3, .L6+16
 108 0048 43F82020 		str	r2, [r3, r0, lsl #2]
 109              	.LBB67:
 110              	.LBB68:
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 111              		.loc 4 566 0
 112 004c FFF7FEFF 		bl	EE_rq2stk_exchange
 113              	.LVL3:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 114              		.loc 4 567 0
 115 0050 0F4B     		ldr	r3, .L6+24
 116 0052 53F82030 		ldr	r3, [r3, r0, lsl #2]
 117 0056 43B1     		cbz	r3, .L4
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 118              		.loc 4 569 0
 119 0058 0022     		movs	r2, #0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 23


 120 005a 0D4B     		ldr	r3, .L6+24
 121 005c 43F82020 		str	r2, [r3, r0, lsl #2]
 122              	.LVL4:
 123              	.LBB69:
 124              	.LBB70:
 125              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 24


  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 25


 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 126              		.loc 5 154 0
 127 0060 40F00040 		orr	r0, r0, #-2147483648
 128              	.LVL5:
 129 0064 FFF7FEFF 		bl	EE_cortex_mx_change_context
 130              	.LVL6:
 131 0068 01E0     		b	.L2
 132              	.LVL7:
 133              	.L4:
 134              	.LBE70:
 135              	.LBE69:
 136              	.LBB71:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 26


 137              	.LBB72:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 138              		.loc 5 167 0
 139 006a FFF7FEFF 		bl	EE_cortex_mx_change_context
 140              	.LVL8:
 141              	.L2:
 142              	.LBE72:
 143              	.LBE71:
 144              	.LBE68:
 145              	.LBE67:
 146              	.LBE64:
 147              	.LBE63:
 148              	.LBB73:
 149              	.LBB74:
 150              	.LBB75:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 151              		.loc 2 232 0
 152              		.syntax unified
 153              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 154 006e 84F31088 		msr primask, r4
 155              	@ 0 "" 2
 156              	.LVL9:
 157              		.thumb
 158              		.syntax unified
 159              	.LBE75:
 160              	.LBE74:
 161              	.LBE73:
 106:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #if !defined (EE_SERVICE_PROTECTION__)
 107:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 108:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 	 * check is always FALSE, hence it is not needed  */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #else
 110:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 111:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #endif
 112:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   {
 113:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     ev = E_OS_CALLEVEL;
 114:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   } else
 115:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_AS_SERVICE_PROTECTION_ */
 116:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   {
 117:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     EE_oo_preemption_point();
 118:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     ev = E_OK;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   }
 120:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
 121:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   if ( ev != E_OK )
 122:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   {
 123:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     EE_ORTI_set_lasterror(ev);
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 27


 124:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     EE_oo_notify_error_service(OSServiceId_ForceSchedule, ev);
 125:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   }
 126:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_FORCESCHEDULE);
 128:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 129:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
 130:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   return E_OK;
 131:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** }
 162              		.loc 1 131 0
 163 0072 0020     		movs	r0, #0
 164 0074 38BD     		pop	{r3, r4, r5, pc}
 165              	.L7:
 166 0076 00BF     		.align	2
 167              	.L6:
 168 0078 00000000 		.word	EE_IRQ_nesting_level
 169 007c 00000000 		.word	EE_stkfirst
 170 0080 00000000 		.word	EE_th_ready_prio
 171 0084 00000000 		.word	EE_sys_ceiling
 172 0088 00000000 		.word	EE_th_status
 173 008c 00000000 		.word	EE_th_dispatch_prio
 174 0090 00000000 		.word	EE_th_waswaiting
 175              		.cfi_endproc
 176              	.LFE60:
 177              		.size	EE_oo_ForceSchedule, .-EE_oo_ForceSchedule
 178              		.text
 179              	.Letext0:
 180              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 181              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 182              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 183              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 184              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 185              		.section	.debug_info,"",%progbits
 186              	.Ldebug_info0:
 187 0000 88050000 		.4byte	0x588
 188 0004 0400     		.2byte	0x4
 189 0006 00000000 		.4byte	.Ldebug_abbrev0
 190 000a 04       		.byte	0x4
 191 000b 01       		.uleb128 0x1
 192 000c 5D050000 		.4byte	.LASF74
 193 0010 0C       		.byte	0xc
 194 0011 DA000000 		.4byte	.LASF75
 195 0015 B3010000 		.4byte	.LASF76
 196 0019 00000000 		.4byte	.Ldebug_ranges0+0
 197 001d 00000000 		.4byte	0
 198 0021 00000000 		.4byte	.Ldebug_line0
 199 0025 02       		.uleb128 0x2
 200 0026 01       		.byte	0x1
 201 0027 06       		.byte	0x6
 202 0028 36030000 		.4byte	.LASF0
 203 002c 02       		.uleb128 0x2
 204 002d 01       		.byte	0x1
 205 002e 08       		.byte	0x8
 206 002f E3020000 		.4byte	.LASF1
 207 0033 02       		.uleb128 0x2
 208 0034 02       		.byte	0x2
 209 0035 05       		.byte	0x5
 210 0036 7F000000 		.4byte	.LASF2
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 28


 211 003a 02       		.uleb128 0x2
 212 003b 02       		.byte	0x2
 213 003c 07       		.byte	0x7
 214 003d DA030000 		.4byte	.LASF3
 215 0041 02       		.uleb128 0x2
 216 0042 04       		.byte	0x4
 217 0043 05       		.byte	0x5
 218 0044 34020000 		.4byte	.LASF4
 219 0048 02       		.uleb128 0x2
 220 0049 04       		.byte	0x4
 221 004a 07       		.byte	0x7
 222 004b 7D040000 		.4byte	.LASF5
 223 004f 02       		.uleb128 0x2
 224 0050 08       		.byte	0x8
 225 0051 05       		.byte	0x5
 226 0052 8D010000 		.4byte	.LASF6
 227 0056 02       		.uleb128 0x2
 228 0057 08       		.byte	0x8
 229 0058 07       		.byte	0x7
 230 0059 42030000 		.4byte	.LASF7
 231 005d 03       		.uleb128 0x3
 232 005e 04       		.byte	0x4
 233 005f 05       		.byte	0x5
 234 0060 696E7400 		.ascii	"int\000"
 235 0064 02       		.uleb128 0x2
 236 0065 04       		.byte	0x4
 237 0066 07       		.byte	0x7
 238 0067 86030000 		.4byte	.LASF8
 239 006b 02       		.uleb128 0x2
 240 006c 08       		.byte	0x8
 241 006d 04       		.byte	0x4
 242 006e B2020000 		.4byte	.LASF9
 243 0072 04       		.uleb128 0x4
 244 0073 28000000 		.4byte	.LASF10
 245 0077 06       		.byte	0x6
 246 0078 3E       		.byte	0x3e
 247 0079 2C000000 		.4byte	0x2c
 248 007d 04       		.uleb128 0x4
 249 007e 9B010000 		.4byte	.LASF11
 250 0082 06       		.byte	0x6
 251 0083 3F       		.byte	0x3f
 252 0084 25000000 		.4byte	0x25
 253 0088 04       		.uleb128 0x4
 254 0089 02040000 		.4byte	.LASF12
 255 008d 06       		.byte	0x6
 256 008e 52       		.byte	0x52
 257 008f 3A000000 		.4byte	0x3a
 258 0093 04       		.uleb128 0x4
 259 0094 AC030000 		.4byte	.LASF13
 260 0098 06       		.byte	0x6
 261 0099 53       		.byte	0x53
 262 009a 5D000000 		.4byte	0x5d
 263 009e 04       		.uleb128 0x4
 264 009f 9C000000 		.4byte	.LASF14
 265 00a3 06       		.byte	0x6
 266 00a4 54       		.byte	0x54
 267 00a5 64000000 		.4byte	0x64
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 29


 268 00a9 04       		.uleb128 0x4
 269 00aa 3F000000 		.4byte	.LASF15
 270 00ae 02       		.byte	0x2
 271 00af 4D       		.byte	0x4d
 272 00b0 9E000000 		.4byte	0x9e
 273 00b4 04       		.uleb128 0x4
 274 00b5 94000000 		.4byte	.LASF16
 275 00b9 02       		.byte	0x2
 276 00ba 4F       		.byte	0x4f
 277 00bb 9E000000 		.4byte	0x9e
 278 00bf 04       		.uleb128 0x4
 279 00c0 8F040000 		.4byte	.LASF17
 280 00c4 02       		.byte	0x2
 281 00c5 54       		.byte	0x54
 282 00c6 A9000000 		.4byte	0xa9
 283 00ca 04       		.uleb128 0x4
 284 00cb C4000000 		.4byte	.LASF18
 285 00cf 02       		.byte	0x2
 286 00d0 78       		.byte	0x78
 287 00d1 93000000 		.4byte	0x93
 288 00d5 05       		.uleb128 0x5
 289 00d6 A3010000 		.4byte	.LASF19
 290 00da 07       		.byte	0x7
 291 00db 1101     		.2byte	0x111
 292 00dd 88000000 		.4byte	0x88
 293 00e1 05       		.uleb128 0x5
 294 00e2 DA020000 		.4byte	.LASF20
 295 00e6 07       		.byte	0x7
 296 00e7 F701     		.2byte	0x1f7
 297 00e9 CA000000 		.4byte	0xca
 298 00ed 05       		.uleb128 0x5
 299 00ee 89000000 		.4byte	.LASF21
 300 00f2 07       		.byte	0x7
 301 00f3 2103     		.2byte	0x321
 302 00f5 2C000000 		.4byte	0x2c
 303 00f9 06       		.uleb128 0x6
 304 00fa 01       		.byte	0x1
 305 00fb 2C000000 		.4byte	0x2c
 306 00ff 07       		.byte	0x7
 307 0100 5904     		.2byte	0x459
 308 0102 49010000 		.4byte	0x149
 309 0106 07       		.uleb128 0x7
 310 0107 19000000 		.4byte	.LASF22
 311 010b 00       		.byte	0
 312 010c 07       		.uleb128 0x7
 313 010d CD030000 		.4byte	.LASF23
 314 0111 01       		.byte	0x1
 315 0112 07       		.uleb128 0x7
 316 0113 B7000000 		.4byte	.LASF24
 317 0117 02       		.byte	0x2
 318 0118 07       		.uleb128 0x7
 319 0119 2A010000 		.4byte	.LASF25
 320 011d 03       		.byte	0x3
 321 011e 07       		.uleb128 0x7
 322 011f A7040000 		.4byte	.LASF26
 323 0123 04       		.byte	0x4
 324 0124 07       		.uleb128 0x7
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 30


 325 0125 EF040000 		.4byte	.LASF27
 326 0129 05       		.byte	0x5
 327 012a 07       		.uleb128 0x7
 328 012b 1A050000 		.4byte	.LASF28
 329 012f 06       		.byte	0x6
 330 0130 07       		.uleb128 0x7
 331 0131 1A060000 		.4byte	.LASF29
 332 0135 07       		.byte	0x7
 333 0136 07       		.uleb128 0x7
 334 0137 ED030000 		.4byte	.LASF30
 335 013b 08       		.byte	0x8
 336 013c 07       		.uleb128 0x7
 337 013d 0C040000 		.4byte	.LASF31
 338 0141 09       		.byte	0x9
 339 0142 07       		.uleb128 0x7
 340 0143 80010000 		.4byte	.LASF32
 341 0147 0A       		.byte	0xa
 342 0148 00       		.byte	0
 343 0149 05       		.uleb128 0x5
 344 014a CB000000 		.4byte	.LASF33
 345 014e 07       		.byte	0x7
 346 014f 6504     		.2byte	0x465
 347 0151 F9000000 		.4byte	0xf9
 348 0155 08       		.uleb128 0x8
 349 0156 0D030000 		.4byte	.LASF77
 350 015a 02       		.byte	0x2
 351 015b F1       		.byte	0xf1
 352 015c B4000000 		.4byte	0xb4
 353 0160 03       		.byte	0x3
 354 0161 71010000 		.4byte	0x171
 355 0165 09       		.uleb128 0x9
 356 0166 0F010000 		.4byte	.LASF50
 357 016a 02       		.byte	0x2
 358 016b F4       		.byte	0xf4
 359 016c B4000000 		.4byte	0xb4
 360 0170 00       		.byte	0
 361 0171 0A       		.uleb128 0xa
 362 0172 53040000 		.4byte	.LASF34
 363 0176 02       		.byte	0x2
 364 0177 DC       		.byte	0xdc
 365 0178 03       		.byte	0x3
 366 0179 87010000 		.4byte	0x187
 367 017d 0B       		.uleb128 0xb
 368 017e 6600     		.ascii	"f\000"
 369 0180 02       		.byte	0x2
 370 0181 DC       		.byte	0xdc
 371 0182 B4000000 		.4byte	0xb4
 372 0186 00       		.byte	0
 373 0187 0C       		.uleb128 0xc
 374 0188 3D020000 		.4byte	.LASF35
 375 018c 07       		.byte	0x7
 376 018d 9703     		.2byte	0x397
 377 018f 03       		.byte	0x3
 378 0190 A1010000 		.4byte	0x1a1
 379 0194 0D       		.uleb128 0xd
 380 0195 73727600 		.ascii	"srv\000"
 381 0199 07       		.byte	0x7
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 31


 382 019a 9703     		.2byte	0x397
 383 019c 72000000 		.4byte	0x72
 384 01a0 00       		.byte	0
 385 01a1 0C       		.uleb128 0xc
 386 01a2 5F020000 		.4byte	.LASF36
 387 01a6 07       		.byte	0x7
 388 01a7 8404     		.2byte	0x484
 389 01a9 03       		.byte	0x3
 390 01aa BB010000 		.4byte	0x1bb
 391 01ae 0D       		.uleb128 0xd
 392 01af 63747800 		.ascii	"ctx\000"
 393 01b3 07       		.byte	0x7
 394 01b4 8504     		.2byte	0x485
 395 01b6 49010000 		.4byte	0x149
 396 01ba 00       		.byte	0
 397 01bb 0A       		.uleb128 0xa
 398 01bc 25030000 		.4byte	.LASF37
 399 01c0 05       		.byte	0x5
 400 01c1 98       		.byte	0x98
 401 01c2 03       		.byte	0x3
 402 01c3 D3010000 		.4byte	0x1d3
 403 01c7 0B       		.uleb128 0xb
 404 01c8 74696400 		.ascii	"tid\000"
 405 01cc 05       		.byte	0x5
 406 01cd 98       		.byte	0x98
 407 01ce CA000000 		.4byte	0xca
 408 01d2 00       		.byte	0
 409 01d3 0E       		.uleb128 0xe
 410 01d4 03060000 		.4byte	.LASF39
 411 01d8 04       		.byte	0x4
 412 01d9 8D01     		.2byte	0x18d
 413 01db 03       		.byte	0x3
 414 01dc 0A       		.uleb128 0xa
 415 01dd 7B020000 		.4byte	.LASF38
 416 01e1 05       		.byte	0x5
 417 01e2 A5       		.byte	0xa5
 418 01e3 03       		.byte	0x3
 419 01e4 F4010000 		.4byte	0x1f4
 420 01e8 0B       		.uleb128 0xb
 421 01e9 74696400 		.ascii	"tid\000"
 422 01ed 05       		.byte	0x5
 423 01ee A5       		.byte	0xa5
 424 01ef CA000000 		.4byte	0xca
 425 01f3 00       		.byte	0
 426 01f4 0F       		.uleb128 0xf
 427 01f5 74030000 		.4byte	.LASF42
 428 01f9 04       		.byte	0x4
 429 01fa EE       		.byte	0xee
 430 01fb CA000000 		.4byte	0xca
 431 01ff 03       		.byte	0x3
 432 0200 0E       		.uleb128 0xe
 433 0201 B5030000 		.4byte	.LASF40
 434 0205 04       		.byte	0x4
 435 0206 9A01     		.2byte	0x19a
 436 0208 03       		.byte	0x3
 437 0209 0C       		.uleb128 0xc
 438 020a 22040000 		.4byte	.LASF41
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 32


 439 020e 07       		.byte	0x7
 440 020f D203     		.2byte	0x3d2
 441 0211 03       		.byte	0x3
 442 0212 23020000 		.4byte	0x223
 443 0216 0D       		.uleb128 0xd
 444 0217 746D7000 		.ascii	"tmp\000"
 445 021b 07       		.byte	0x7
 446 021c D203     		.2byte	0x3d2
 447 021e CA000000 		.4byte	0xca
 448 0222 00       		.byte	0
 449 0223 0F       		.uleb128 0xf
 450 0224 BE040000 		.4byte	.LASF43
 451 0228 03       		.byte	0x3
 452 0229 4D       		.byte	0x4d
 453 022a A9000000 		.4byte	0xa9
 454 022e 03       		.byte	0x3
 455 022f 0E       		.uleb128 0xe
 456 0230 59030000 		.4byte	.LASF44
 457 0234 08       		.byte	0x8
 458 0235 AB01     		.2byte	0x1ab
 459 0237 03       		.byte	0x3
 460 0238 0C       		.uleb128 0xc
 461 0239 3C010000 		.4byte	.LASF45
 462 023d 07       		.byte	0x7
 463 023e A303     		.2byte	0x3a3
 464 0240 03       		.byte	0x3
 465 0241 51020000 		.4byte	0x251
 466 0245 0D       		.uleb128 0xd
 467 0246 696400   		.ascii	"id\000"
 468 0249 07       		.byte	0x7
 469 024a A303     		.2byte	0x3a3
 470 024c 72000000 		.4byte	0x72
 471 0250 00       		.byte	0
 472 0251 0F       		.uleb128 0xf
 473 0252 46060000 		.4byte	.LASF46
 474 0256 09       		.byte	0x9
 475 0257 60       		.byte	0x60
 476 0258 B4000000 		.4byte	0xb4
 477 025c 03       		.byte	0x3
 478 025d 0A       		.uleb128 0xa
 479 025e F1020000 		.4byte	.LASF47
 480 0262 09       		.byte	0x9
 481 0263 68       		.byte	0x68
 482 0264 03       		.byte	0x3
 483 0265 73020000 		.4byte	0x273
 484 0269 0B       		.uleb128 0xb
 485 026a 6600     		.ascii	"f\000"
 486 026c 09       		.byte	0x9
 487 026d 68       		.byte	0x68
 488 026e B4000000 		.4byte	0xb4
 489 0272 00       		.byte	0
 490 0273 0C       		.uleb128 0xc
 491 0274 2E060000 		.4byte	.LASF48
 492 0278 07       		.byte	0x7
 493 0279 A803     		.2byte	0x3a8
 494 027b 03       		.byte	0x3
 495 027c 8C020000 		.4byte	0x28c
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 33


 496 0280 0D       		.uleb128 0xd
 497 0281 696400   		.ascii	"id\000"
 498 0284 07       		.byte	0x7
 499 0285 A803     		.2byte	0x3a8
 500 0287 72000000 		.4byte	0x72
 501 028b 00       		.byte	0
 502 028c 0C       		.uleb128 0xc
 503 028d 03050000 		.4byte	.LASF49
 504 0291 04       		.byte	0x4
 505 0292 8002     		.2byte	0x280
 506 0294 03       		.byte	0x3
 507 0295 B1020000 		.4byte	0x2b1
 508 0299 10       		.uleb128 0x10
 509 029a 45050000 		.4byte	.LASF51
 510 029e 04       		.byte	0x4
 511 029f 8202     		.2byte	0x282
 512 02a1 CA000000 		.4byte	0xca
 513 02a5 11       		.uleb128 0x11
 514 02a6 727100   		.ascii	"rq\000"
 515 02a9 04       		.byte	0x4
 516 02aa 8202     		.2byte	0x282
 517 02ac CA000000 		.4byte	0xca
 518 02b0 00       		.byte	0
 519 02b1 0C       		.uleb128 0xc
 520 02b2 6C010000 		.4byte	.LASF52
 521 02b6 04       		.byte	0x4
 522 02b7 3202     		.2byte	0x232
 523 02b9 03       		.byte	0x3
 524 02ba CB020000 		.4byte	0x2cb
 525 02be 11       		.uleb128 0x11
 526 02bf 746D7000 		.ascii	"tmp\000"
 527 02c3 04       		.byte	0x4
 528 02c4 3402     		.2byte	0x234
 529 02c6 E1000000 		.4byte	0xe1
 530 02ca 00       		.byte	0
 531 02cb 12       		.uleb128 0x12
 532 02cc 47000000 		.4byte	.LASF78
 533 02d0 01       		.byte	0x1
 534 02d1 4D       		.byte	0x4d
 535 02d2 ED000000 		.4byte	0xed
 536 02d6 00000000 		.4byte	.LFB60
 537 02da 94000000 		.4byte	.LFE60-.LFB60
 538 02de 01       		.uleb128 0x1
 539 02df 9C       		.byte	0x9c
 540 02e0 38040000 		.4byte	0x438
 541 02e4 13       		.uleb128 0x13
 542 02e5 657600   		.ascii	"ev\000"
 543 02e8 01       		.byte	0x1
 544 02e9 50       		.byte	0x50
 545 02ea ED000000 		.4byte	0xed
 546 02ee 14       		.uleb128 0x14
 547 02ef 4D050000 		.4byte	.LASF79
 548 02f3 01       		.byte	0x1
 549 02f4 52       		.byte	0x52
 550 02f5 B4000000 		.4byte	0xb4
 551 02f9 01       		.uleb128 0x1
 552 02fa 54       		.byte	0x54
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 34


 553 02fb 15       		.uleb128 0x15
 554 02fc 51020000 		.4byte	0x251
 555 0300 02000000 		.4byte	.LBB58
 556 0304 06000000 		.4byte	.LBE58-.LBB58
 557 0308 01       		.byte	0x1
 558 0309 52       		.byte	0x52
 559 030a 32030000 		.4byte	0x332
 560 030e 16       		.uleb128 0x16
 561 030f 55010000 		.4byte	0x155
 562 0313 02000000 		.4byte	.LBB59
 563 0317 06000000 		.4byte	.LBE59-.LBB59
 564 031b 09       		.byte	0x9
 565 031c 62       		.byte	0x62
 566 031d 17       		.uleb128 0x17
 567 031e 02000000 		.4byte	.LBB60
 568 0322 06000000 		.4byte	.LBE60-.LBB60
 569 0326 18       		.uleb128 0x18
 570 0327 65010000 		.4byte	0x165
 571 032b 00000000 		.4byte	.LLST0
 572 032f 00       		.byte	0
 573 0330 00       		.byte	0
 574 0331 00       		.byte	0
 575 0332 19       		.uleb128 0x19
 576 0333 23020000 		.4byte	0x223
 577 0337 08000000 		.4byte	.LBB61
 578 033b 04000000 		.4byte	.LBE61-.LBB61
 579 033f 01       		.byte	0x1
 580 0340 69       		.byte	0x69
 581 0341 15       		.uleb128 0x15
 582 0342 8C020000 		.4byte	0x28c
 583 0346 0E000000 		.4byte	.LBB63
 584 034a 60000000 		.4byte	.LBE63-.LBB63
 585 034e 01       		.byte	0x1
 586 034f 75       		.byte	0x75
 587 0350 05040000 		.4byte	0x405
 588 0354 17       		.uleb128 0x17
 589 0355 0E000000 		.4byte	.LBB64
 590 0359 60000000 		.4byte	.LBE64-.LBB64
 591 035d 1A       		.uleb128 0x1a
 592 035e 99020000 		.4byte	0x299
 593 0362 18       		.uleb128 0x18
 594 0363 A5020000 		.4byte	0x2a5
 595 0367 13000000 		.4byte	.LLST1
 596 036b 1B       		.uleb128 0x1b
 597 036c F4010000 		.4byte	0x1f4
 598 0370 0E000000 		.4byte	.LBB65
 599 0374 04000000 		.4byte	.LBE65-.LBB65
 600 0378 04       		.byte	0x4
 601 0379 8502     		.2byte	0x285
 602 037b 1C       		.uleb128 0x1c
 603 037c B1020000 		.4byte	0x2b1
 604 0380 4C000000 		.4byte	.LBB67
 605 0384 22000000 		.4byte	.LBE67-.LBB67
 606 0388 04       		.byte	0x4
 607 0389 B802     		.2byte	0x2b8
 608 038b FA030000 		.4byte	0x3fa
 609 038f 17       		.uleb128 0x17
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 35


 610 0390 4C000000 		.4byte	.LBB68
 611 0394 22000000 		.4byte	.LBE68-.LBB68
 612 0398 18       		.uleb128 0x18
 613 0399 BE020000 		.4byte	0x2be
 614 039d 26000000 		.4byte	.LLST2
 615 03a1 1C       		.uleb128 0x1c
 616 03a2 BB010000 		.4byte	0x1bb
 617 03a6 60000000 		.4byte	.LBB69
 618 03aa 0A000000 		.4byte	.LBE69-.LBB69
 619 03ae 04       		.byte	0x4
 620 03af 3C02     		.2byte	0x23c
 621 03b1 C8030000 		.4byte	0x3c8
 622 03b5 1D       		.uleb128 0x1d
 623 03b6 C7010000 		.4byte	0x1c7
 624 03ba 44000000 		.4byte	.LLST3
 625 03be 1E       		.uleb128 0x1e
 626 03bf 68000000 		.4byte	.LVL6
 627 03c3 68050000 		.4byte	0x568
 628 03c7 00       		.byte	0
 629 03c8 1C       		.uleb128 0x1c
 630 03c9 DC010000 		.4byte	0x1dc
 631 03cd 6A000000 		.4byte	.LBB71
 632 03d1 04000000 		.4byte	.LBE71-.LBB71
 633 03d5 04       		.byte	0x4
 634 03d6 3F02     		.2byte	0x23f
 635 03d8 EF030000 		.4byte	0x3ef
 636 03dc 1D       		.uleb128 0x1d
 637 03dd E8010000 		.4byte	0x1e8
 638 03e1 57000000 		.4byte	.LLST4
 639 03e5 1E       		.uleb128 0x1e
 640 03e6 6E000000 		.4byte	.LVL8
 641 03ea 68050000 		.4byte	0x568
 642 03ee 00       		.byte	0
 643 03ef 1E       		.uleb128 0x1e
 644 03f0 50000000 		.4byte	.LVL3
 645 03f4 73050000 		.4byte	0x573
 646 03f8 00       		.byte	0
 647 03f9 00       		.byte	0
 648 03fa 1E       		.uleb128 0x1e
 649 03fb 16000000 		.4byte	.LVL2
 650 03ff 7F050000 		.4byte	0x57f
 651 0403 00       		.byte	0
 652 0404 00       		.byte	0
 653 0405 16       		.uleb128 0x16
 654 0406 5D020000 		.4byte	0x25d
 655 040a 6E000000 		.4byte	.LBB73
 656 040e 04000000 		.4byte	.LBE73-.LBB73
 657 0412 01       		.byte	0x1
 658 0413 80       		.byte	0x80
 659 0414 1D       		.uleb128 0x1d
 660 0415 69020000 		.4byte	0x269
 661 0419 6A000000 		.4byte	.LLST5
 662 041d 16       		.uleb128 0x16
 663 041e 71010000 		.4byte	0x171
 664 0422 6E000000 		.4byte	.LBB74
 665 0426 04000000 		.4byte	.LBE74-.LBB74
 666 042a 09       		.byte	0x9
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 36


 667 042b 6A       		.byte	0x6a
 668 042c 1D       		.uleb128 0x1d
 669 042d 7D010000 		.4byte	0x17d
 670 0431 6A000000 		.4byte	.LLST5
 671 0435 00       		.byte	0
 672 0436 00       		.byte	0
 673 0437 00       		.byte	0
 674 0438 1F       		.uleb128 0x1f
 675 0439 15010000 		.4byte	.LASF53
 676 043d 03       		.byte	0x3
 677 043e 44       		.byte	0x44
 678 043f A9000000 		.4byte	0xa9
 679 0443 1F       		.uleb128 0x1f
 680 0444 00000000 		.4byte	.LASF54
 681 0448 05       		.byte	0x5
 682 0449 48       		.byte	0x48
 683 044a CA000000 		.4byte	0xca
 684 044e 20       		.uleb128 0x20
 685 044f 65040000 		.4byte	0x465
 686 0453 5E040000 		.4byte	0x45e
 687 0457 21       		.uleb128 0x21
 688 0458 5E040000 		.4byte	0x45e
 689 045c 03       		.byte	0x3
 690 045d 00       		.byte	0
 691 045e 02       		.uleb128 0x2
 692 045f 04       		.byte	0x4
 693 0460 07       		.byte	0x7
 694 0461 2F050000 		.4byte	.LASF55
 695 0465 22       		.uleb128 0x22
 696 0466 A9000000 		.4byte	0xa9
 697 046a 1F       		.uleb128 0x1f
 698 046b A6000000 		.4byte	.LASF56
 699 046f 07       		.byte	0x7
 700 0470 B2       		.byte	0xb2
 701 0471 75040000 		.4byte	0x475
 702 0475 22       		.uleb128 0x22
 703 0476 4E040000 		.4byte	0x44e
 704 047a 1F       		.uleb128 0x1f
 705 047b DB040000 		.4byte	.LASF57
 706 047f 07       		.byte	0x7
 707 0480 B3       		.byte	0xb3
 708 0481 85040000 		.4byte	0x485
 709 0485 22       		.uleb128 0x22
 710 0486 4E040000 		.4byte	0x44e
 711 048a 20       		.uleb128 0x20
 712 048b A9000000 		.4byte	0xa9
 713 048f 9A040000 		.4byte	0x49a
 714 0493 21       		.uleb128 0x21
 715 0494 5E040000 		.4byte	0x45e
 716 0498 03       		.byte	0x3
 717 0499 00       		.byte	0
 718 049a 1F       		.uleb128 0x1f
 719 049b 93030000 		.4byte	.LASF58
 720 049f 07       		.byte	0x7
 721 04a0 CA       		.byte	0xca
 722 04a1 8A040000 		.4byte	0x48a
 723 04a5 20       		.uleb128 0x20
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 37


 724 04a6 CA000000 		.4byte	0xca
 725 04aa B5040000 		.4byte	0x4b5
 726 04ae 21       		.uleb128 0x21
 727 04af 5E040000 		.4byte	0x45e
 728 04b3 03       		.byte	0x3
 729 04b4 00       		.byte	0
 730 04b5 1F       		.uleb128 0x1f
 731 04b6 52050000 		.4byte	.LASF59
 732 04ba 07       		.byte	0x7
 733 04bb D2       		.byte	0xd2
 734 04bc A5040000 		.4byte	0x4a5
 735 04c0 1F       		.uleb128 0x1f
 736 04c1 A0030000 		.4byte	.LASF60
 737 04c5 07       		.byte	0x7
 738 04c6 DA       		.byte	0xda
 739 04c7 8A040000 		.4byte	0x48a
 740 04cb 1F       		.uleb128 0x1f
 741 04cc 9B040000 		.4byte	.LASF61
 742 04d0 07       		.byte	0x7
 743 04d1 E2       		.byte	0xe2
 744 04d2 CA000000 		.4byte	0xca
 745 04d6 1F       		.uleb128 0x1f
 746 04d7 90020000 		.4byte	.LASF62
 747 04db 07       		.byte	0x7
 748 04dc F7       		.byte	0xf7
 749 04dd A9000000 		.4byte	0xa9
 750 04e1 23       		.uleb128 0x23
 751 04e2 31000000 		.4byte	.LASF63
 752 04e6 07       		.byte	0x7
 753 04e7 3F01     		.2byte	0x13f
 754 04e9 D5000000 		.4byte	0xd5
 755 04ed 23       		.uleb128 0x23
 756 04ee 5B000000 		.4byte	.LASF64
 757 04f2 07       		.byte	0x7
 758 04f3 5C01     		.2byte	0x15c
 759 04f5 8A040000 		.4byte	0x48a
 760 04f9 20       		.uleb128 0x20
 761 04fa BF000000 		.4byte	0xbf
 762 04fe 09050000 		.4byte	0x509
 763 0502 21       		.uleb128 0x21
 764 0503 5E040000 		.4byte	0x45e
 765 0507 03       		.byte	0x3
 766 0508 00       		.byte	0
 767 0509 23       		.uleb128 0x23
 768 050a 6E000000 		.4byte	.LASF65
 769 050e 07       		.byte	0x7
 770 050f 6701     		.2byte	0x167
 771 0511 F9040000 		.4byte	0x4f9
 772 0515 1F       		.uleb128 0x1f
 773 0516 EB050000 		.4byte	.LASF66
 774 051a 0A       		.byte	0xa
 775 051b 40       		.byte	0x40
 776 051c A9000000 		.4byte	0xa9
 777 0520 1F       		.uleb128 0x1f
 778 0521 53010000 		.4byte	.LASF67
 779 0525 0A       		.byte	0xa
 780 0526 47       		.byte	0x47
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 38


 781 0527 B4000000 		.4byte	0xb4
 782 052b 1F       		.uleb128 0x1f
 783 052c 6A040000 		.4byte	.LASF68
 784 0530 0A       		.byte	0xa
 785 0531 4A       		.byte	0x4a
 786 0532 A9000000 		.4byte	0xa9
 787 0536 20       		.uleb128 0x20
 788 0537 46050000 		.4byte	0x546
 789 053b 46050000 		.4byte	0x546
 790 053f 21       		.uleb128 0x21
 791 0540 5E040000 		.4byte	0x45e
 792 0544 FF       		.byte	0xff
 793 0545 00       		.byte	0
 794 0546 22       		.uleb128 0x22
 795 0547 7D000000 		.4byte	0x7d
 796 054b 23       		.uleb128 0x23
 797 054c 38050000 		.4byte	.LASF69
 798 0550 04       		.byte	0x4
 799 0551 AB01     		.2byte	0x1ab
 800 0553 57050000 		.4byte	0x557
 801 0557 22       		.uleb128 0x22
 802 0558 36050000 		.4byte	0x536
 803 055c 23       		.uleb128 0x23
 804 055d 51020000 		.4byte	.LASF70
 805 0561 04       		.byte	0x4
 806 0562 1602     		.2byte	0x216
 807 0564 A9000000 		.4byte	0xa9
 808 0568 24       		.uleb128 0x24
 809 0569 BE020000 		.4byte	.LASF71
 810 056d BE020000 		.4byte	.LASF71
 811 0571 05       		.byte	0x5
 812 0572 4F       		.byte	0x4f
 813 0573 25       		.uleb128 0x25
 814 0574 9F020000 		.4byte	.LASF72
 815 0578 9F020000 		.4byte	.LASF72
 816 057c 04       		.byte	0x4
 817 057d E901     		.2byte	0x1e9
 818 057f 25       		.uleb128 0x25
 819 0580 42040000 		.4byte	.LASF73
 820 0584 42040000 		.4byte	.LASF73
 821 0588 04       		.byte	0x4
 822 0589 CB01     		.2byte	0x1cb
 823 058b 00       		.byte	0
 824              		.section	.debug_abbrev,"",%progbits
 825              	.Ldebug_abbrev0:
 826 0000 01       		.uleb128 0x1
 827 0001 11       		.uleb128 0x11
 828 0002 01       		.byte	0x1
 829 0003 25       		.uleb128 0x25
 830 0004 0E       		.uleb128 0xe
 831 0005 13       		.uleb128 0x13
 832 0006 0B       		.uleb128 0xb
 833 0007 03       		.uleb128 0x3
 834 0008 0E       		.uleb128 0xe
 835 0009 1B       		.uleb128 0x1b
 836 000a 0E       		.uleb128 0xe
 837 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 39


 838 000c 17       		.uleb128 0x17
 839 000d 11       		.uleb128 0x11
 840 000e 01       		.uleb128 0x1
 841 000f 10       		.uleb128 0x10
 842 0010 17       		.uleb128 0x17
 843 0011 00       		.byte	0
 844 0012 00       		.byte	0
 845 0013 02       		.uleb128 0x2
 846 0014 24       		.uleb128 0x24
 847 0015 00       		.byte	0
 848 0016 0B       		.uleb128 0xb
 849 0017 0B       		.uleb128 0xb
 850 0018 3E       		.uleb128 0x3e
 851 0019 0B       		.uleb128 0xb
 852 001a 03       		.uleb128 0x3
 853 001b 0E       		.uleb128 0xe
 854 001c 00       		.byte	0
 855 001d 00       		.byte	0
 856 001e 03       		.uleb128 0x3
 857 001f 24       		.uleb128 0x24
 858 0020 00       		.byte	0
 859 0021 0B       		.uleb128 0xb
 860 0022 0B       		.uleb128 0xb
 861 0023 3E       		.uleb128 0x3e
 862 0024 0B       		.uleb128 0xb
 863 0025 03       		.uleb128 0x3
 864 0026 08       		.uleb128 0x8
 865 0027 00       		.byte	0
 866 0028 00       		.byte	0
 867 0029 04       		.uleb128 0x4
 868 002a 16       		.uleb128 0x16
 869 002b 00       		.byte	0
 870 002c 03       		.uleb128 0x3
 871 002d 0E       		.uleb128 0xe
 872 002e 3A       		.uleb128 0x3a
 873 002f 0B       		.uleb128 0xb
 874 0030 3B       		.uleb128 0x3b
 875 0031 0B       		.uleb128 0xb
 876 0032 49       		.uleb128 0x49
 877 0033 13       		.uleb128 0x13
 878 0034 00       		.byte	0
 879 0035 00       		.byte	0
 880 0036 05       		.uleb128 0x5
 881 0037 16       		.uleb128 0x16
 882 0038 00       		.byte	0
 883 0039 03       		.uleb128 0x3
 884 003a 0E       		.uleb128 0xe
 885 003b 3A       		.uleb128 0x3a
 886 003c 0B       		.uleb128 0xb
 887 003d 3B       		.uleb128 0x3b
 888 003e 05       		.uleb128 0x5
 889 003f 49       		.uleb128 0x49
 890 0040 13       		.uleb128 0x13
 891 0041 00       		.byte	0
 892 0042 00       		.byte	0
 893 0043 06       		.uleb128 0x6
 894 0044 04       		.uleb128 0x4
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 40


 895 0045 01       		.byte	0x1
 896 0046 0B       		.uleb128 0xb
 897 0047 0B       		.uleb128 0xb
 898 0048 49       		.uleb128 0x49
 899 0049 13       		.uleb128 0x13
 900 004a 3A       		.uleb128 0x3a
 901 004b 0B       		.uleb128 0xb
 902 004c 3B       		.uleb128 0x3b
 903 004d 05       		.uleb128 0x5
 904 004e 01       		.uleb128 0x1
 905 004f 13       		.uleb128 0x13
 906 0050 00       		.byte	0
 907 0051 00       		.byte	0
 908 0052 07       		.uleb128 0x7
 909 0053 28       		.uleb128 0x28
 910 0054 00       		.byte	0
 911 0055 03       		.uleb128 0x3
 912 0056 0E       		.uleb128 0xe
 913 0057 1C       		.uleb128 0x1c
 914 0058 0B       		.uleb128 0xb
 915 0059 00       		.byte	0
 916 005a 00       		.byte	0
 917 005b 08       		.uleb128 0x8
 918 005c 2E       		.uleb128 0x2e
 919 005d 01       		.byte	0x1
 920 005e 03       		.uleb128 0x3
 921 005f 0E       		.uleb128 0xe
 922 0060 3A       		.uleb128 0x3a
 923 0061 0B       		.uleb128 0xb
 924 0062 3B       		.uleb128 0x3b
 925 0063 0B       		.uleb128 0xb
 926 0064 27       		.uleb128 0x27
 927 0065 19       		.uleb128 0x19
 928 0066 49       		.uleb128 0x49
 929 0067 13       		.uleb128 0x13
 930 0068 20       		.uleb128 0x20
 931 0069 0B       		.uleb128 0xb
 932 006a 01       		.uleb128 0x1
 933 006b 13       		.uleb128 0x13
 934 006c 00       		.byte	0
 935 006d 00       		.byte	0
 936 006e 09       		.uleb128 0x9
 937 006f 34       		.uleb128 0x34
 938 0070 00       		.byte	0
 939 0071 03       		.uleb128 0x3
 940 0072 0E       		.uleb128 0xe
 941 0073 3A       		.uleb128 0x3a
 942 0074 0B       		.uleb128 0xb
 943 0075 3B       		.uleb128 0x3b
 944 0076 0B       		.uleb128 0xb
 945 0077 49       		.uleb128 0x49
 946 0078 13       		.uleb128 0x13
 947 0079 00       		.byte	0
 948 007a 00       		.byte	0
 949 007b 0A       		.uleb128 0xa
 950 007c 2E       		.uleb128 0x2e
 951 007d 01       		.byte	0x1
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 41


 952 007e 03       		.uleb128 0x3
 953 007f 0E       		.uleb128 0xe
 954 0080 3A       		.uleb128 0x3a
 955 0081 0B       		.uleb128 0xb
 956 0082 3B       		.uleb128 0x3b
 957 0083 0B       		.uleb128 0xb
 958 0084 27       		.uleb128 0x27
 959 0085 19       		.uleb128 0x19
 960 0086 20       		.uleb128 0x20
 961 0087 0B       		.uleb128 0xb
 962 0088 01       		.uleb128 0x1
 963 0089 13       		.uleb128 0x13
 964 008a 00       		.byte	0
 965 008b 00       		.byte	0
 966 008c 0B       		.uleb128 0xb
 967 008d 05       		.uleb128 0x5
 968 008e 00       		.byte	0
 969 008f 03       		.uleb128 0x3
 970 0090 08       		.uleb128 0x8
 971 0091 3A       		.uleb128 0x3a
 972 0092 0B       		.uleb128 0xb
 973 0093 3B       		.uleb128 0x3b
 974 0094 0B       		.uleb128 0xb
 975 0095 49       		.uleb128 0x49
 976 0096 13       		.uleb128 0x13
 977 0097 00       		.byte	0
 978 0098 00       		.byte	0
 979 0099 0C       		.uleb128 0xc
 980 009a 2E       		.uleb128 0x2e
 981 009b 01       		.byte	0x1
 982 009c 03       		.uleb128 0x3
 983 009d 0E       		.uleb128 0xe
 984 009e 3A       		.uleb128 0x3a
 985 009f 0B       		.uleb128 0xb
 986 00a0 3B       		.uleb128 0x3b
 987 00a1 05       		.uleb128 0x5
 988 00a2 27       		.uleb128 0x27
 989 00a3 19       		.uleb128 0x19
 990 00a4 20       		.uleb128 0x20
 991 00a5 0B       		.uleb128 0xb
 992 00a6 01       		.uleb128 0x1
 993 00a7 13       		.uleb128 0x13
 994 00a8 00       		.byte	0
 995 00a9 00       		.byte	0
 996 00aa 0D       		.uleb128 0xd
 997 00ab 05       		.uleb128 0x5
 998 00ac 00       		.byte	0
 999 00ad 03       		.uleb128 0x3
 1000 00ae 08       		.uleb128 0x8
 1001 00af 3A       		.uleb128 0x3a
 1002 00b0 0B       		.uleb128 0xb
 1003 00b1 3B       		.uleb128 0x3b
 1004 00b2 05       		.uleb128 0x5
 1005 00b3 49       		.uleb128 0x49
 1006 00b4 13       		.uleb128 0x13
 1007 00b5 00       		.byte	0
 1008 00b6 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 42


 1009 00b7 0E       		.uleb128 0xe
 1010 00b8 2E       		.uleb128 0x2e
 1011 00b9 00       		.byte	0
 1012 00ba 03       		.uleb128 0x3
 1013 00bb 0E       		.uleb128 0xe
 1014 00bc 3A       		.uleb128 0x3a
 1015 00bd 0B       		.uleb128 0xb
 1016 00be 3B       		.uleb128 0x3b
 1017 00bf 05       		.uleb128 0x5
 1018 00c0 27       		.uleb128 0x27
 1019 00c1 19       		.uleb128 0x19
 1020 00c2 20       		.uleb128 0x20
 1021 00c3 0B       		.uleb128 0xb
 1022 00c4 00       		.byte	0
 1023 00c5 00       		.byte	0
 1024 00c6 0F       		.uleb128 0xf
 1025 00c7 2E       		.uleb128 0x2e
 1026 00c8 00       		.byte	0
 1027 00c9 03       		.uleb128 0x3
 1028 00ca 0E       		.uleb128 0xe
 1029 00cb 3A       		.uleb128 0x3a
 1030 00cc 0B       		.uleb128 0xb
 1031 00cd 3B       		.uleb128 0x3b
 1032 00ce 0B       		.uleb128 0xb
 1033 00cf 27       		.uleb128 0x27
 1034 00d0 19       		.uleb128 0x19
 1035 00d1 49       		.uleb128 0x49
 1036 00d2 13       		.uleb128 0x13
 1037 00d3 20       		.uleb128 0x20
 1038 00d4 0B       		.uleb128 0xb
 1039 00d5 00       		.byte	0
 1040 00d6 00       		.byte	0
 1041 00d7 10       		.uleb128 0x10
 1042 00d8 34       		.uleb128 0x34
 1043 00d9 00       		.byte	0
 1044 00da 03       		.uleb128 0x3
 1045 00db 0E       		.uleb128 0xe
 1046 00dc 3A       		.uleb128 0x3a
 1047 00dd 0B       		.uleb128 0xb
 1048 00de 3B       		.uleb128 0x3b
 1049 00df 05       		.uleb128 0x5
 1050 00e0 49       		.uleb128 0x49
 1051 00e1 13       		.uleb128 0x13
 1052 00e2 00       		.byte	0
 1053 00e3 00       		.byte	0
 1054 00e4 11       		.uleb128 0x11
 1055 00e5 34       		.uleb128 0x34
 1056 00e6 00       		.byte	0
 1057 00e7 03       		.uleb128 0x3
 1058 00e8 08       		.uleb128 0x8
 1059 00e9 3A       		.uleb128 0x3a
 1060 00ea 0B       		.uleb128 0xb
 1061 00eb 3B       		.uleb128 0x3b
 1062 00ec 05       		.uleb128 0x5
 1063 00ed 49       		.uleb128 0x49
 1064 00ee 13       		.uleb128 0x13
 1065 00ef 00       		.byte	0
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 43


 1066 00f0 00       		.byte	0
 1067 00f1 12       		.uleb128 0x12
 1068 00f2 2E       		.uleb128 0x2e
 1069 00f3 01       		.byte	0x1
 1070 00f4 3F       		.uleb128 0x3f
 1071 00f5 19       		.uleb128 0x19
 1072 00f6 03       		.uleb128 0x3
 1073 00f7 0E       		.uleb128 0xe
 1074 00f8 3A       		.uleb128 0x3a
 1075 00f9 0B       		.uleb128 0xb
 1076 00fa 3B       		.uleb128 0x3b
 1077 00fb 0B       		.uleb128 0xb
 1078 00fc 27       		.uleb128 0x27
 1079 00fd 19       		.uleb128 0x19
 1080 00fe 49       		.uleb128 0x49
 1081 00ff 13       		.uleb128 0x13
 1082 0100 11       		.uleb128 0x11
 1083 0101 01       		.uleb128 0x1
 1084 0102 12       		.uleb128 0x12
 1085 0103 06       		.uleb128 0x6
 1086 0104 40       		.uleb128 0x40
 1087 0105 18       		.uleb128 0x18
 1088 0106 9742     		.uleb128 0x2117
 1089 0108 19       		.uleb128 0x19
 1090 0109 01       		.uleb128 0x1
 1091 010a 13       		.uleb128 0x13
 1092 010b 00       		.byte	0
 1093 010c 00       		.byte	0
 1094 010d 13       		.uleb128 0x13
 1095 010e 34       		.uleb128 0x34
 1096 010f 00       		.byte	0
 1097 0110 03       		.uleb128 0x3
 1098 0111 08       		.uleb128 0x8
 1099 0112 3A       		.uleb128 0x3a
 1100 0113 0B       		.uleb128 0xb
 1101 0114 3B       		.uleb128 0x3b
 1102 0115 0B       		.uleb128 0xb
 1103 0116 49       		.uleb128 0x49
 1104 0117 13       		.uleb128 0x13
 1105 0118 00       		.byte	0
 1106 0119 00       		.byte	0
 1107 011a 14       		.uleb128 0x14
 1108 011b 34       		.uleb128 0x34
 1109 011c 00       		.byte	0
 1110 011d 03       		.uleb128 0x3
 1111 011e 0E       		.uleb128 0xe
 1112 011f 3A       		.uleb128 0x3a
 1113 0120 0B       		.uleb128 0xb
 1114 0121 3B       		.uleb128 0x3b
 1115 0122 0B       		.uleb128 0xb
 1116 0123 49       		.uleb128 0x49
 1117 0124 13       		.uleb128 0x13
 1118 0125 02       		.uleb128 0x2
 1119 0126 18       		.uleb128 0x18
 1120 0127 00       		.byte	0
 1121 0128 00       		.byte	0
 1122 0129 15       		.uleb128 0x15
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 44


 1123 012a 1D       		.uleb128 0x1d
 1124 012b 01       		.byte	0x1
 1125 012c 31       		.uleb128 0x31
 1126 012d 13       		.uleb128 0x13
 1127 012e 11       		.uleb128 0x11
 1128 012f 01       		.uleb128 0x1
 1129 0130 12       		.uleb128 0x12
 1130 0131 06       		.uleb128 0x6
 1131 0132 58       		.uleb128 0x58
 1132 0133 0B       		.uleb128 0xb
 1133 0134 59       		.uleb128 0x59
 1134 0135 0B       		.uleb128 0xb
 1135 0136 01       		.uleb128 0x1
 1136 0137 13       		.uleb128 0x13
 1137 0138 00       		.byte	0
 1138 0139 00       		.byte	0
 1139 013a 16       		.uleb128 0x16
 1140 013b 1D       		.uleb128 0x1d
 1141 013c 01       		.byte	0x1
 1142 013d 31       		.uleb128 0x31
 1143 013e 13       		.uleb128 0x13
 1144 013f 11       		.uleb128 0x11
 1145 0140 01       		.uleb128 0x1
 1146 0141 12       		.uleb128 0x12
 1147 0142 06       		.uleb128 0x6
 1148 0143 58       		.uleb128 0x58
 1149 0144 0B       		.uleb128 0xb
 1150 0145 59       		.uleb128 0x59
 1151 0146 0B       		.uleb128 0xb
 1152 0147 00       		.byte	0
 1153 0148 00       		.byte	0
 1154 0149 17       		.uleb128 0x17
 1155 014a 0B       		.uleb128 0xb
 1156 014b 01       		.byte	0x1
 1157 014c 11       		.uleb128 0x11
 1158 014d 01       		.uleb128 0x1
 1159 014e 12       		.uleb128 0x12
 1160 014f 06       		.uleb128 0x6
 1161 0150 00       		.byte	0
 1162 0151 00       		.byte	0
 1163 0152 18       		.uleb128 0x18
 1164 0153 34       		.uleb128 0x34
 1165 0154 00       		.byte	0
 1166 0155 31       		.uleb128 0x31
 1167 0156 13       		.uleb128 0x13
 1168 0157 02       		.uleb128 0x2
 1169 0158 17       		.uleb128 0x17
 1170 0159 00       		.byte	0
 1171 015a 00       		.byte	0
 1172 015b 19       		.uleb128 0x19
 1173 015c 1D       		.uleb128 0x1d
 1174 015d 00       		.byte	0
 1175 015e 31       		.uleb128 0x31
 1176 015f 13       		.uleb128 0x13
 1177 0160 11       		.uleb128 0x11
 1178 0161 01       		.uleb128 0x1
 1179 0162 12       		.uleb128 0x12
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 45


 1180 0163 06       		.uleb128 0x6
 1181 0164 58       		.uleb128 0x58
 1182 0165 0B       		.uleb128 0xb
 1183 0166 59       		.uleb128 0x59
 1184 0167 0B       		.uleb128 0xb
 1185 0168 00       		.byte	0
 1186 0169 00       		.byte	0
 1187 016a 1A       		.uleb128 0x1a
 1188 016b 34       		.uleb128 0x34
 1189 016c 00       		.byte	0
 1190 016d 31       		.uleb128 0x31
 1191 016e 13       		.uleb128 0x13
 1192 016f 00       		.byte	0
 1193 0170 00       		.byte	0
 1194 0171 1B       		.uleb128 0x1b
 1195 0172 1D       		.uleb128 0x1d
 1196 0173 00       		.byte	0
 1197 0174 31       		.uleb128 0x31
 1198 0175 13       		.uleb128 0x13
 1199 0176 11       		.uleb128 0x11
 1200 0177 01       		.uleb128 0x1
 1201 0178 12       		.uleb128 0x12
 1202 0179 06       		.uleb128 0x6
 1203 017a 58       		.uleb128 0x58
 1204 017b 0B       		.uleb128 0xb
 1205 017c 59       		.uleb128 0x59
 1206 017d 05       		.uleb128 0x5
 1207 017e 00       		.byte	0
 1208 017f 00       		.byte	0
 1209 0180 1C       		.uleb128 0x1c
 1210 0181 1D       		.uleb128 0x1d
 1211 0182 01       		.byte	0x1
 1212 0183 31       		.uleb128 0x31
 1213 0184 13       		.uleb128 0x13
 1214 0185 11       		.uleb128 0x11
 1215 0186 01       		.uleb128 0x1
 1216 0187 12       		.uleb128 0x12
 1217 0188 06       		.uleb128 0x6
 1218 0189 58       		.uleb128 0x58
 1219 018a 0B       		.uleb128 0xb
 1220 018b 59       		.uleb128 0x59
 1221 018c 05       		.uleb128 0x5
 1222 018d 01       		.uleb128 0x1
 1223 018e 13       		.uleb128 0x13
 1224 018f 00       		.byte	0
 1225 0190 00       		.byte	0
 1226 0191 1D       		.uleb128 0x1d
 1227 0192 05       		.uleb128 0x5
 1228 0193 00       		.byte	0
 1229 0194 31       		.uleb128 0x31
 1230 0195 13       		.uleb128 0x13
 1231 0196 02       		.uleb128 0x2
 1232 0197 17       		.uleb128 0x17
 1233 0198 00       		.byte	0
 1234 0199 00       		.byte	0
 1235 019a 1E       		.uleb128 0x1e
 1236 019b 898201   		.uleb128 0x4109
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 46


 1237 019e 00       		.byte	0
 1238 019f 11       		.uleb128 0x11
 1239 01a0 01       		.uleb128 0x1
 1240 01a1 31       		.uleb128 0x31
 1241 01a2 13       		.uleb128 0x13
 1242 01a3 00       		.byte	0
 1243 01a4 00       		.byte	0
 1244 01a5 1F       		.uleb128 0x1f
 1245 01a6 34       		.uleb128 0x34
 1246 01a7 00       		.byte	0
 1247 01a8 03       		.uleb128 0x3
 1248 01a9 0E       		.uleb128 0xe
 1249 01aa 3A       		.uleb128 0x3a
 1250 01ab 0B       		.uleb128 0xb
 1251 01ac 3B       		.uleb128 0x3b
 1252 01ad 0B       		.uleb128 0xb
 1253 01ae 49       		.uleb128 0x49
 1254 01af 13       		.uleb128 0x13
 1255 01b0 3F       		.uleb128 0x3f
 1256 01b1 19       		.uleb128 0x19
 1257 01b2 3C       		.uleb128 0x3c
 1258 01b3 19       		.uleb128 0x19
 1259 01b4 00       		.byte	0
 1260 01b5 00       		.byte	0
 1261 01b6 20       		.uleb128 0x20
 1262 01b7 01       		.uleb128 0x1
 1263 01b8 01       		.byte	0x1
 1264 01b9 49       		.uleb128 0x49
 1265 01ba 13       		.uleb128 0x13
 1266 01bb 01       		.uleb128 0x1
 1267 01bc 13       		.uleb128 0x13
 1268 01bd 00       		.byte	0
 1269 01be 00       		.byte	0
 1270 01bf 21       		.uleb128 0x21
 1271 01c0 21       		.uleb128 0x21
 1272 01c1 00       		.byte	0
 1273 01c2 49       		.uleb128 0x49
 1274 01c3 13       		.uleb128 0x13
 1275 01c4 2F       		.uleb128 0x2f
 1276 01c5 0B       		.uleb128 0xb
 1277 01c6 00       		.byte	0
 1278 01c7 00       		.byte	0
 1279 01c8 22       		.uleb128 0x22
 1280 01c9 26       		.uleb128 0x26
 1281 01ca 00       		.byte	0
 1282 01cb 49       		.uleb128 0x49
 1283 01cc 13       		.uleb128 0x13
 1284 01cd 00       		.byte	0
 1285 01ce 00       		.byte	0
 1286 01cf 23       		.uleb128 0x23
 1287 01d0 34       		.uleb128 0x34
 1288 01d1 00       		.byte	0
 1289 01d2 03       		.uleb128 0x3
 1290 01d3 0E       		.uleb128 0xe
 1291 01d4 3A       		.uleb128 0x3a
 1292 01d5 0B       		.uleb128 0xb
 1293 01d6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 47


 1294 01d7 05       		.uleb128 0x5
 1295 01d8 49       		.uleb128 0x49
 1296 01d9 13       		.uleb128 0x13
 1297 01da 3F       		.uleb128 0x3f
 1298 01db 19       		.uleb128 0x19
 1299 01dc 3C       		.uleb128 0x3c
 1300 01dd 19       		.uleb128 0x19
 1301 01de 00       		.byte	0
 1302 01df 00       		.byte	0
 1303 01e0 24       		.uleb128 0x24
 1304 01e1 2E       		.uleb128 0x2e
 1305 01e2 00       		.byte	0
 1306 01e3 3F       		.uleb128 0x3f
 1307 01e4 19       		.uleb128 0x19
 1308 01e5 3C       		.uleb128 0x3c
 1309 01e6 19       		.uleb128 0x19
 1310 01e7 6E       		.uleb128 0x6e
 1311 01e8 0E       		.uleb128 0xe
 1312 01e9 03       		.uleb128 0x3
 1313 01ea 0E       		.uleb128 0xe
 1314 01eb 3A       		.uleb128 0x3a
 1315 01ec 0B       		.uleb128 0xb
 1316 01ed 3B       		.uleb128 0x3b
 1317 01ee 0B       		.uleb128 0xb
 1318 01ef 00       		.byte	0
 1319 01f0 00       		.byte	0
 1320 01f1 25       		.uleb128 0x25
 1321 01f2 2E       		.uleb128 0x2e
 1322 01f3 00       		.byte	0
 1323 01f4 3F       		.uleb128 0x3f
 1324 01f5 19       		.uleb128 0x19
 1325 01f6 3C       		.uleb128 0x3c
 1326 01f7 19       		.uleb128 0x19
 1327 01f8 6E       		.uleb128 0x6e
 1328 01f9 0E       		.uleb128 0xe
 1329 01fa 03       		.uleb128 0x3
 1330 01fb 0E       		.uleb128 0xe
 1331 01fc 3A       		.uleb128 0x3a
 1332 01fd 0B       		.uleb128 0xb
 1333 01fe 3B       		.uleb128 0x3b
 1334 01ff 05       		.uleb128 0x5
 1335 0200 00       		.byte	0
 1336 0201 00       		.byte	0
 1337 0202 00       		.byte	0
 1338              		.section	.debug_loc,"",%progbits
 1339              	.Ldebug_loc0:
 1340              	.LLST0:
 1341 0000 06000000 		.4byte	.LVL0
 1342 0004 08000000 		.4byte	.LVL1
 1343 0008 0100     		.2byte	0x1
 1344 000a 54       		.byte	0x54
 1345 000b 00000000 		.4byte	0
 1346 000f 00000000 		.4byte	0
 1347              	.LLST1:
 1348 0013 16000000 		.4byte	.LVL2
 1349 0017 4F000000 		.4byte	.LVL3-1
 1350 001b 0100     		.2byte	0x1
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 48


 1351 001d 50       		.byte	0x50
 1352 001e 00000000 		.4byte	0
 1353 0022 00000000 		.4byte	0
 1354              	.LLST2:
 1355 0026 50000000 		.4byte	.LVL3
 1356 002a 64000000 		.4byte	.LVL5
 1357 002e 0100     		.2byte	0x1
 1358 0030 50       		.byte	0x50
 1359 0031 6A000000 		.4byte	.LVL7
 1360 0035 6D000000 		.4byte	.LVL8-1
 1361 0039 0100     		.2byte	0x1
 1362 003b 50       		.byte	0x50
 1363 003c 00000000 		.4byte	0
 1364 0040 00000000 		.4byte	0
 1365              	.LLST3:
 1366 0044 60000000 		.4byte	.LVL4
 1367 0048 64000000 		.4byte	.LVL5
 1368 004c 0100     		.2byte	0x1
 1369 004e 50       		.byte	0x50
 1370 004f 00000000 		.4byte	0
 1371 0053 00000000 		.4byte	0
 1372              	.LLST4:
 1373 0057 6A000000 		.4byte	.LVL7
 1374 005b 6D000000 		.4byte	.LVL8-1
 1375 005f 0100     		.2byte	0x1
 1376 0061 50       		.byte	0x50
 1377 0062 00000000 		.4byte	0
 1378 0066 00000000 		.4byte	0
 1379              	.LLST5:
 1380 006a 6E000000 		.4byte	.LVL8
 1381 006e 72000000 		.4byte	.LVL9
 1382 0072 0100     		.2byte	0x1
 1383 0074 54       		.byte	0x54
 1384 0075 00000000 		.4byte	0
 1385 0079 00000000 		.4byte	0
 1386              		.section	.debug_aranges,"",%progbits
 1387 0000 1C000000 		.4byte	0x1c
 1388 0004 0200     		.2byte	0x2
 1389 0006 00000000 		.4byte	.Ldebug_info0
 1390 000a 04       		.byte	0x4
 1391 000b 00       		.byte	0
 1392 000c 0000     		.2byte	0
 1393 000e 0000     		.2byte	0
 1394 0010 00000000 		.4byte	.LFB60
 1395 0014 94000000 		.4byte	.LFE60-.LFB60
 1396 0018 00000000 		.4byte	0
 1397 001c 00000000 		.4byte	0
 1398              		.section	.debug_ranges,"",%progbits
 1399              	.Ldebug_ranges0:
 1400 0000 00000000 		.4byte	.LFB60
 1401 0004 94000000 		.4byte	.LFE60
 1402 0008 00000000 		.4byte	0
 1403 000c 00000000 		.4byte	0
 1404              		.section	.debug_line,"",%progbits
 1405              	.Ldebug_line0:
 1406 0000 D2010000 		.section	.debug_str,"MS",%progbits,1
 1406      02007E01 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 49


 1406      00000201 
 1406      FB0E0D00 
 1406      01010101 
 1407              	.LASF54:
 1408 0000 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1408      74645F65 
 1408      6E646379 
 1408      636C655F 
 1408      6E657874 
 1409              	.LASF22:
 1410 0019 4B65726E 		.ascii	"Kernel_Context\000"
 1410      656C5F43 
 1410      6F6E7465 
 1410      787400
 1411              	.LASF10:
 1412 0028 45455F55 		.ascii	"EE_UINT8\000"
 1412      494E5438 
 1412      00
 1413              	.LASF63:
 1414 0031 45455F72 		.ascii	"EE_rq_bitmask\000"
 1414      715F6269 
 1414      746D6173 
 1414      6B00
 1415              	.LASF15:
 1416 003f 45455F55 		.ascii	"EE_UREG\000"
 1416      52454700 
 1417              	.LASF78:
 1418 0047 45455F6F 		.ascii	"EE_oo_ForceSchedule\000"
 1418      6F5F466F 
 1418      72636553 
 1418      63686564 
 1418      756C6500 
 1419              	.LASF64:
 1420 005b 45455F74 		.ascii	"EE_th_event_active\000"
 1420      685F6576 
 1420      656E745F 
 1420      61637469 
 1420      766500
 1421              	.LASF65:
 1422 006e 45455F74 		.ascii	"EE_th_waswaiting\000"
 1422      685F7761 
 1422      73776169 
 1422      74696E67 
 1422      00
 1423              	.LASF2:
 1424 007f 73686F72 		.ascii	"short int\000"
 1424      7420696E 
 1424      7400
 1425              	.LASF21:
 1426 0089 53746174 		.ascii	"StatusType\000"
 1426      75735479 
 1426      706500
 1427              	.LASF16:
 1428 0094 45455F46 		.ascii	"EE_FREG\000"
 1428      52454700 
 1429              	.LASF14:
 1430 009c 45455F55 		.ascii	"EE_UINT32\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 50


 1430      494E5433 
 1430      3200
 1431              	.LASF56:
 1432 00a6 45455F74 		.ascii	"EE_th_ready_prio\000"
 1432      685F7265 
 1432      6164795F 
 1432      7072696F 
 1432      00
 1433              	.LASF24:
 1434 00b7 49535232 		.ascii	"ISR2_Context\000"
 1434      5F436F6E 
 1434      74657874 
 1434      00
 1435              	.LASF18:
 1436 00c4 45455F54 		.ascii	"EE_TID\000"
 1436      494400
 1437              	.LASF33:
 1438 00cb 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1438      59504543 
 1438      4F4E5445 
 1438      585400
 1439              	.LASF75:
 1440 00da 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_force_schedul"
 1440      72617465 
 1440      645F536F 
 1440      75726365 
 1440      5C50536F 
 1441 010b 652E6300 		.ascii	"e.c\000"
 1442              	.LASF50:
 1443 010f 69737461 		.ascii	"istat\000"
 1443      7400
 1444              	.LASF53:
 1445 0115 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1445      52515F6E 
 1445      65737469 
 1445      6E675F6C 
 1445      6576656C 
 1446              	.LASF25:
 1447 012a 4572726F 		.ascii	"ErrorHook_Context\000"
 1447      72486F6F 
 1447      6B5F436F 
 1447      6E746578 
 1447      7400
 1448              	.LASF45:
 1449 013c 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1449      5254495F 
 1449      7365745F 
 1449      73657276 
 1449      6963655F 
 1450              	.LASF67:
 1451 0153 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1451      6F5F4952 
 1451      515F7375 
 1451      7370656E 
 1451      645F7374 
 1452              	.LASF52:
 1453 016c 45455F6F 		.ascii	"EE_oo_run_next_task\000"
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 51


 1453      6F5F7275 
 1453      6E5F6E65 
 1453      78745F74 
 1453      61736B00 
 1454              	.LASF32:
 1455 0180 49646C65 		.ascii	"Idle_Context\000"
 1455      5F436F6E 
 1455      74657874 
 1455      00
 1456              	.LASF6:
 1457 018d 6C6F6E67 		.ascii	"long long int\000"
 1457      206C6F6E 
 1457      6720696E 
 1457      7400
 1458              	.LASF11:
 1459 019b 45455F49 		.ascii	"EE_INT8\000"
 1459      4E543800 
 1460              	.LASF19:
 1461 01a3 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1461      5950455F 
 1461      52515F4D 
 1461      41534B00 
 1462              	.LASF76:
 1463 01b3 433A5C4D 		.ascii	"C:\\My_Files\\College_Documents\\AMA EOS\\EOS\\LAB\\"
 1463      795F4669 
 1463      6C65735C 
 1463      436F6C6C 
 1463      6567655F 
 1464 01e1 4C41425F 		.ascii	"LAB_2_Submission\\Json Parser\\code\\w06_criticalRe"
 1464      325F5375 
 1464      626D6973 
 1464      73696F6E 
 1464      5C4A736F 
 1465 0211 67696F6E 		.ascii	"gion.cydsn\\Lab2_JSONParser01.cydsn\000"
 1465      2E637964 
 1465      736E5C4C 
 1465      6162325F 
 1465      4A534F4E 
 1466              	.LASF4:
 1467 0234 6C6F6E67 		.ascii	"long int\000"
 1467      20696E74 
 1467      00
 1468              	.LASF35:
 1469 023d 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 1469      5254495F 
 1469      7365745F 
 1469      73657276 
 1469      69636500 
 1470              	.LASF70:
 1471 0251 45455F69 		.ascii	"EE_isr2_index\000"
 1471      7372325F 
 1471      696E6465 
 1471      7800
 1472              	.LASF36:
 1473 025f 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1473      735F7365 
 1473      745F6578 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 52


 1473      65637574 
 1473      696F6E5F 
 1474              	.LASF38:
 1475 027b 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1475      616C5F72 
 1475      65616479 
 1475      32737461 
 1475      636B6564 
 1476              	.LASF62:
 1477 0290 45455F73 		.ascii	"EE_sys_ceiling\000"
 1477      79735F63 
 1477      65696C69 
 1477      6E6700
 1478              	.LASF72:
 1479 029f 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1479      71327374 
 1479      6B5F6578 
 1479      6368616E 
 1479      676500
 1480              	.LASF9:
 1481 02b2 6C6F6E67 		.ascii	"long double\000"
 1481      20646F75 
 1481      626C6500 
 1482              	.LASF71:
 1483 02be 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 1483      6F727465 
 1483      785F6D78 
 1483      5F636861 
 1483      6E67655F 
 1484              	.LASF20:
 1485 02da 5461736B 		.ascii	"TaskType\000"
 1485      54797065 
 1485      00
 1486              	.LASF1:
 1487 02e3 756E7369 		.ascii	"unsigned char\000"
 1487      676E6564 
 1487      20636861 
 1487      7200
 1488              	.LASF47:
 1489 02f1 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1489      616C5F65 
 1489      6E645F6E 
 1489      65737465 
 1489      645F7072 
 1490              	.LASF77:
 1491 030d 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 1491      6F727465 
 1491      785F6D78 
 1491      5F737573 
 1491      70656E64 
 1492              	.LASF37:
 1493 0325 45455F68 		.ascii	"EE_hal_stkchange\000"
 1493      616C5F73 
 1493      746B6368 
 1493      616E6765 
 1493      00
 1494              	.LASF0:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 53


 1495 0336 7369676E 		.ascii	"signed char\000"
 1495      65642063 
 1495      68617200 
 1496              	.LASF7:
 1497 0342 6C6F6E67 		.ascii	"long long unsigned int\000"
 1497      206C6F6E 
 1497      6720756E 
 1497      7369676E 
 1497      65642069 
 1498              	.LASF44:
 1499 0359 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 1499      735F6D6F 
 1499      6E69746F 
 1499      72696E67 
 1499      5F746865 
 1500              	.LASF42:
 1501 0374 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1501      746B5F71 
 1501      75657279 
 1501      66697273 
 1501      7400
 1502              	.LASF8:
 1503 0386 756E7369 		.ascii	"unsigned int\000"
 1503      676E6564 
 1503      20696E74 
 1503      00
 1504              	.LASF58:
 1505 0393 45455F74 		.ascii	"EE_th_status\000"
 1505      685F7374 
 1505      61747573 
 1505      00
 1506              	.LASF60:
 1507 03a0 45455F74 		.ascii	"EE_th_rnact\000"
 1507      685F726E 
 1507      61637400 
 1508              	.LASF13:
 1509 03ac 45455F49 		.ascii	"EE_INT32\000"
 1509      4E543332 
 1509      00
 1510              	.LASF40:
 1511 03b5 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1511      6F5F6361 
 1511      6C6C5F50 
 1511      6F737454 
 1511      61736B48 
 1512              	.LASF23:
 1513 03cd 5441534B 		.ascii	"TASK_Context\000"
 1513      5F436F6E 
 1513      74657874 
 1513      00
 1514              	.LASF3:
 1515 03da 73686F72 		.ascii	"short unsigned int\000"
 1515      7420756E 
 1515      7369676E 
 1515      65642069 
 1515      6E7400
 1516              	.LASF30:
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 54


 1517 03ed 53687574 		.ascii	"ShutdownHook_Context\000"
 1517      646F776E 
 1517      486F6F6B 
 1517      5F436F6E 
 1517      74657874 
 1518              	.LASF12:
 1519 0402 45455F55 		.ascii	"EE_UINT16\000"
 1519      494E5431 
 1519      3600
 1520              	.LASF31:
 1521 040c 416C6172 		.ascii	"AlarmCallback_Context\000"
 1521      6D43616C 
 1521      6C626163 
 1521      6B5F436F 
 1521      6E746578 
 1522              	.LASF41:
 1523 0422 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1523      5254495F 
 1523      7365745F 
 1523      74685F65 
 1523      715F6469 
 1524              	.LASF73:
 1525 0442 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1525      715F7175 
 1525      65727966 
 1525      69727374 
 1525      00
 1526              	.LASF34:
 1527 0453 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 1527      6F727465 
 1527      785F6D78 
 1527      5F726573 
 1527      756D6549 
 1528              	.LASF68:
 1529 046a 45455F41 		.ascii	"EE_ApplicationMode\000"
 1529      70706C69 
 1529      63617469 
 1529      6F6E4D6F 
 1529      646500
 1530              	.LASF5:
 1531 047d 6C6F6E67 		.ascii	"long unsigned int\000"
 1531      20756E73 
 1531      69676E65 
 1531      6420696E 
 1531      7400
 1532              	.LASF17:
 1533 048f 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1533      59504542 
 1533      4F4F4C00 
 1534              	.LASF61:
 1535 049b 45455F73 		.ascii	"EE_stkfirst\000"
 1535      746B6669 
 1535      72737400 
 1536              	.LASF26:
 1537 04a7 50726F74 		.ascii	"ProtectionHook_Context\000"
 1537      65637469 
 1537      6F6E486F 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 55


 1537      6F6B5F43 
 1537      6F6E7465 
 1538              	.LASF43:
 1539 04be 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 1539      616C5F67 
 1539      65745F49 
 1539      52515F6E 
 1539      65737469 
 1540              	.LASF57:
 1541 04db 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1541      685F6469 
 1541      73706174 
 1541      63685F70 
 1541      72696F00 
 1542              	.LASF27:
 1543 04ef 50726554 		.ascii	"PreTaskHook_Context\000"
 1543      61736B48 
 1543      6F6F6B5F 
 1543      436F6E74 
 1543      65787400 
 1544              	.LASF49:
 1545 0503 45455F6F 		.ascii	"EE_oo_preemption_point\000"
 1545      6F5F7072 
 1545      65656D70 
 1545      74696F6E 
 1545      5F706F69 
 1546              	.LASF28:
 1547 051a 506F7374 		.ascii	"PostTaskHook_Context\000"
 1547      5461736B 
 1547      486F6F6B 
 1547      5F436F6E 
 1547      74657874 
 1548              	.LASF55:
 1549 052f 73697A65 		.ascii	"sizetype\000"
 1549      74797065 
 1549      00
 1550              	.LASF69:
 1551 0538 45455F72 		.ascii	"EE_rq_lookup\000"
 1551      715F6C6F 
 1551      6F6B7570 
 1551      00
 1552              	.LASF51:
 1553 0545 63757272 		.ascii	"current\000"
 1553      656E7400 
 1554              	.LASF79:
 1555 054d 666C6167 		.ascii	"flag\000"
 1555      00
 1556              	.LASF59:
 1557 0552 45455F74 		.ascii	"EE_th_next\000"
 1557      685F6E65 
 1557      787400
 1558              	.LASF74:
 1559 055d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1559      43313120 
 1559      352E342E 
 1559      31203230 
 1559      31363036 
ARM GAS  C:\Users\DABBIR~1\AppData\Local\Temp\ccjcaNwP.s 			page 56


 1560 0590 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1560      20726576 
 1560      6973696F 
 1560      6E203233 
 1560      37373135 
 1561 05c3 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1561      66756E63 
 1561      74696F6E 
 1561      2D736563 
 1561      74696F6E 
 1562              	.LASF66:
 1563 05eb 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1563      6F5F4952 
 1563      515F6469 
 1563      7361626C 
 1563      655F636F 
 1564              	.LASF39:
 1565 0603 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1565      6F5F6361 
 1565      6C6C5F50 
 1565      72655461 
 1565      736B486F 
 1566              	.LASF29:
 1567 061a 53746172 		.ascii	"StartupHook_Context\000"
 1567      74757048 
 1567      6F6F6B5F 
 1567      436F6E74 
 1567      65787400 
 1568              	.LASF48:
 1569 062e 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1569      5254495F 
 1569      7365745F 
 1569      73657276 
 1569      6963655F 
 1570              	.LASF46:
 1571 0646 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 1571      616C5F62 
 1571      6567696E 
 1571      5F6E6573 
 1571      7465645F 
 1572              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
